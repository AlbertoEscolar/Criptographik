<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Azure.Management.Storage</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Azure.Management.Storage.BlobContainersOperations">
            <summary>
            BlobContainersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the BlobContainersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.BlobContainersOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of containers that can be included in
            the list.
            </param>
            <param name='filter'>
            Optional. When specified, only container names starting with the filter
            will be listed.
            </param>
            <param name='include'>
            Optional, used to include the properties for soft deleted blob containers.
            Possible values include: 'deleted'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by request
            body. The container resource includes metadata and properties for that
            container. It does not include a list of the blobs contained by the
            container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties of the blob container to create.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body. Properties not
            mentioned in the request will be unchanged. Update fails if the specified
            container doesn't already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties to update for the blob container.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.SetLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not clear out
            the existing tags that are not specified in the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining legal hold protection and compliance. Only new blocks can
            be added and any existing blocks cannot be modified or deleted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.ClearLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an
            idempotent operation. ClearLegalHold clears out only the specified tags in
            the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining legal hold protection and compliance. Only new blocks can
            be added and any existing blocks cannot be modified or deleted.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.CreateOrUpdateImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is
            honored if given but not required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be created or updated to a blob
            container.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.GetImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in
            response headers and body.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.DeleteImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy is not
            allowed, the only way is to delete the container after deleting all expired
            blobs inside the policy locked container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.LockImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
            Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
            required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.ExtendImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will be this
            action. ETag in If-Match is required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be extended for a blob
            container.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container
            for delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.ObjectLevelWormWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM to
            object level immutability enabled container. Prerequisites require a
            container level immutability policy either in locked or unlocked state,
            Account level versioning must be enabled and there should be no Legal hold
            on the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.BeginObjectLevelWormWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM to
            object level immutability enabled container. Prerequisites require a
            container level immutability policy either in locked or unlocked state,
            Account level versioning must be enabled and there should be no Legal hold
            on the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions">
            <summary>
            Extension methods for BlobContainersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.List(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of containers that can be included in
            the list.
            </param>
            <param name='filter'>
            Optional. When specified, only container names starting with the filter
            will be listed.
            </param>
            <param name='include'>
            Optional, used to include the properties for soft deleted blob containers.
            Possible values include: 'deleted'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of containers that can be included in
            the list.
            </param>
            <param name='filter'>
            Optional. When specified, only container names starting with the filter
            will be listed.
            </param>
            <param name='include'>
            Optional, used to include the properties for soft deleted blob containers.
            Possible values include: 'deleted'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer)">
            <summary>
            Creates a new container under the specified account as described by request
            body. The container resource includes metadata and properties for that
            container. It does not include a list of the blobs contained by the
            container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties of the blob container to create.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer,System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by request
            body. The container resource includes metadata and properties for that
            container. It does not include a list of the blobs contained by the
            container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties of the blob container to create.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer)">
            <summary>
            Updates container properties as specified in request body. Properties not
            mentioned in the request will be unchanged. Update fails if the specified
            container doesn't already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties to update for the blob container.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer,System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body. Properties not
            mentioned in the request will be unchanged. Update fails if the specified
            container doesn't already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties to update for the blob container.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.SetLegalHold(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not clear out
            the existing tags that are not specified in the request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining legal hold protection and compliance. Only new blocks can
            be added and any existing blocks cannot be modified or deleted.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.SetLegalHoldAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not clear out
            the existing tags that are not specified in the request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining legal hold protection and compliance. Only new blocks can
            be added and any existing blocks cannot be modified or deleted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ClearLegalHold(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean})">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an
            idempotent operation. ClearLegalHold clears out only the specified tags in
            the request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining legal hold protection and compliance. Only new blocks can
            be added and any existing blocks cannot be modified or deleted.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ClearLegalHoldAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag results in an
            idempotent operation. ClearLegalHold clears out only the specified tags in
            the request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is normalized to
            lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining legal hold protection and compliance. Only new blocks can
            be added and any existing blocks cannot be modified or deleted.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.CreateOrUpdateImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.String)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is
            honored if given but not required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be created or updated to a blob
            container.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.CreateOrUpdateImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in If-Match is
            honored if given but not required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be created or updated to a blob
            container.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.GetImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in
            response headers and body.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.GetImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding ETag in
            response headers and body.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.DeleteImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy is not
            allowed, the only way is to delete the container after deleting all expired
            blobs inside the policy locked container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.DeleteImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy is not
            allowed, the only way is to delete the container after deleting all expired
            blobs inside the policy locked container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.LockImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
            Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
            required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.LockImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
            Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
            required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ExtendImmutabilityPolicy(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will be this
            action. ETag in If-Match is required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be extended for a blob
            container.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ExtendImmutabilityPolicyAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will be this
            action. ETag in If-Match is required for this operation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to update. A
            value of "*" can be used to apply the operation only if the immutability
            policy already exists. If omitted, this operation will always be applied.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be extended for a blob
            container.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.Lease(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container
            for delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.LeaseAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest,System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a container
            for delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ObjectLevelWorm(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String)">
            <summary>
            This operation migrates a blob container from container level WORM to
            object level immutability enabled container. Prerequisites require a
            container level immutability policy either in locked or unlocked state,
            Account level versioning must be enabled and there should be no Legal hold
            on the container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ObjectLevelWormAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM to
            object level immutability enabled container. Prerequisites require a
            container level immutability policy either in locked or unlocked state,
            Account level versioning must be enabled and there should be no Legal hold
            on the container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.BeginObjectLevelWorm(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String)">
            <summary>
            This operation migrates a blob container from container level WORM to
            object level immutability enabled container. Prerequisites require a
            container level immutability policy either in locked or unlocked state,
            Account level versioning must be enabled and there should be no Legal hold
            on the container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.BeginObjectLevelWormAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM to
            object level immutability enabled container. Prerequisites require a
            container level immutability policy either in locked or unlocked state,
            Account level versioning must be enabled and there should be no Legal hold
            on the container.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage account. Blob
            container names must be between 3 and 63 characters in length and use
            numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobContainersOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IBlobContainersOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane. Also
            SRP today does not return continuation token.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations">
            <summary>
            BlobInventoryPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the BlobInventoryPoliciesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema,Microsoft.Azure.Management.Storage.Models.SystemData,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the blob inventory policy to the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The storage account blob inventory policy object. It is composed of policy
            rules.
            </param>
            <param name='systemData'>
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions">
            <summary>
            Extension methods for BlobInventoryPoliciesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String)">
            <summary>
            Gets the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema,Microsoft.Azure.Management.Storage.Models.SystemData)">
            <summary>
            Sets the blob inventory policy to the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The storage account blob inventory policy object. It is composed of policy
            rules.
            </param>
            <param name='systemData'>
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema,Microsoft.Azure.Management.Storage.Models.SystemData,System.Threading.CancellationToken)">
            <summary>
            Sets the blob inventory policy to the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The storage account blob inventory policy object. It is composed of policy
            rules.
            </param>
            <param name='systemData'>
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String)">
            <summary>
            Deletes the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String)">
            <summary>
            Gets the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobInventoryPoliciesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.BlobServicesOperations">
            <summary>
            BlobServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the BlobServicesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.BlobServicesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List blob services of storage account. It returns a collection of one
            object named default.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including properties
            for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions">
            <summary>
            Extension methods for BlobServicesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String)">
            <summary>
            List blob services of storage account. It returns a collection of one
            object named default.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List blob services of storage account. It returns a collection of one
            object named default.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.SetServiceProperties(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including properties
            for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including properties
            for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.GetServiceProperties(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.BlobServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IBlobServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.DeletedAccountsOperations">
            <summary>
            DeletedAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the DeletedAccountsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.DeletedAccountsOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            </summary>
            <param name='deletedAccountName'>
            Name of the deleted storage account.
            </param>
            <param name='location'>
            The location of the deleted storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions">
            <summary>
            Extension methods for DeletedAccountsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions.List(Microsoft.Azure.Management.Storage.IDeletedAccountsOperations)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IDeletedAccountsOperations,System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IDeletedAccountsOperations,System.String,System.String)">
            <summary>
            Get properties of specified deleted account resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deletedAccountName'>
            Name of the deleted storage account.
            </param>
            <param name='location'>
            The location of the deleted storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IDeletedAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='deletedAccountName'>
            Name of the deleted storage account.
            </param>
            <param name='location'>
            The location of the deleted storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IDeletedAccountsOperations,System.String)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.DeletedAccountsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IDeletedAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.EncryptionScopesOperations">
            <summary>
            EncryptionScopesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the EncryptionScopesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.PutWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Synchronously creates or updates an encryption scope under the specified
            storage account. If an encryption scope is already created and a subsequent
            request is issued with different properties, the encryption scope
            properties will be updated per the specified request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the create or update.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.PatchWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update encryption scope properties as specified in the request body. Update
            fails if the specified encryption scope does not already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the update.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage
            account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions">
            <summary>
            Extension methods for EncryptionScopesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.Put(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope)">
            <summary>
            Synchronously creates or updates an encryption scope under the specified
            storage account. If an encryption scope is already created and a subsequent
            request is issued with different properties, the encryption scope
            properties will be updated per the specified request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the create or update.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.PutAsync(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope,System.Threading.CancellationToken)">
            <summary>
            Synchronously creates or updates an encryption scope under the specified
            storage account. If an encryption scope is already created and a subsequent
            request is issued with different properties, the encryption scope
            properties will be updated per the specified request.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the create or update.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.Patch(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope)">
            <summary>
            Update encryption scope properties as specified in the request body. Update
            fails if the specified encryption scope does not already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the update.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.PatchAsync(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope,System.Threading.CancellationToken)">
            <summary>
            Update encryption scope properties as specified in the request body. Update
            fails if the specified encryption scope does not already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the update.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.String)">
            <summary>
            Returns the properties for the specified encryption scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage account.
            Encryption scope names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-) character
            must be immediately preceded and followed by a letter or number.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String)">
            <summary>
            Lists all the encryption scopes available under the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String)">
            <summary>
            Lists all the encryption scopes available under the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.EncryptionScopesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IEncryptionScopesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.FileServicesOperations">
            <summary>
            FileServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the FileServicesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.FileServicesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all file services in storage accounts
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileServiceProperties,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions">
            <summary>
            Extension methods for FileServicesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String)">
            <summary>
            List all file services in storage accounts
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all file services in storage accounts
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.SetServiceProperties(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileServiceProperties)">
            <summary>
            Sets the properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileServiceProperties,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.GetServiceProperties(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String)">
            <summary>
            Gets the properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IFileServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.FileSharesOperations">
            <summary>
            FileSharesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the FileSharesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.FileSharesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of shares that can be included in the
            list.
            </param>
            <param name='filter'>
            Optional. When specified, only share names starting with the filter will be
            listed.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: deleted, snapshots. Should be passed as a string with delimiter
            ','
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new share under the specified account as described by request
            body. The share resource includes metadata and properties for that share.
            It does not include a list of the files contained by the share.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='fileShare'>
            Properties of the file share to create.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: snapshots. Should be passed as a string with delimiter ','
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates share properties as specified in request body. Properties not
            mentioned in the request will not be changed. Update fails if the specified
            share does not already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='fileShare'>
            Properties to update for the file share.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: stats. Should be passed as a string with delimiter ','.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to retrieve properties of a snapshot.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes specified share under its account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to delete a snapshot.
            </param>
            <param name='include'>
            Optional. Valid values are: snapshots, leased-snapshots, none. The default
            value is snapshots. For 'snapshots', the file share is deleted including
            all of its file share snapshots. If the file share contains
            leased-snapshots, the deletion fails. For 'leased-snapshots', the file
            share is deleted included all of its file share snapshots
            (leased/unleased). For 'none', the file share is deleted if it has no share
            snapshots. If the file share contains any snapshots (leased or unleased),
            the deletion fails.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.RestoreWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restore a file share within a valid retention days if share soft delete is
            enabled
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='deletedShareName'>
            Required. Identify the name of the deleted share that will be restored.
            </param>
            <param name='deletedShareVersion'>
            Required. Identify the version of the deleted share that will be restored.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseShareRequest,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Lease Share operation establishes and manages a lock on a share for
            delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Share request body.
            </param>
            <param name='xMsSnapshot'>
            Optional. Specify the snapshot time to lease a snapshot.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions">
            <summary>
            Extension methods for FileSharesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Lists all shares.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of shares that can be included in the
            list.
            </param>
            <param name='filter'>
            Optional. When specified, only share names starting with the filter will be
            listed.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: deleted, snapshots. Should be passed as a string with delimiter
            ','
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of shares that can be included in the
            list.
            </param>
            <param name='filter'>
            Optional. When specified, only share names starting with the filter will be
            listed.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: deleted, snapshots. Should be passed as a string with delimiter
            ','
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.String)">
            <summary>
            Creates a new share under the specified account as described by request
            body. The share resource includes metadata and properties for that share.
            It does not include a list of the files contained by the share.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='fileShare'>
            Properties of the file share to create.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: snapshots. Should be passed as a string with delimiter ','
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.String,System.Threading.CancellationToken)">
            <summary>
            Creates a new share under the specified account as described by request
            body. The share resource includes metadata and properties for that share.
            It does not include a list of the files contained by the share.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='fileShare'>
            Properties of the file share to create.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: snapshots. Should be passed as a string with delimiter ','
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare)">
            <summary>
            Updates share properties as specified in request body. Properties not
            mentioned in the request will not be changed. Update fails if the specified
            share does not already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='fileShare'>
            Properties to update for the file share.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.Threading.CancellationToken)">
            <summary>
            Updates share properties as specified in request body. Properties not
            mentioned in the request will not be changed. Update fails if the specified
            share does not already exist.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='fileShare'>
            Properties to update for the file share.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Gets properties of a specified share.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: stats. Should be passed as a string with delimiter ','.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to retrieve properties of a snapshot.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties. Valid
            values are: stats. Should be passed as a string with delimiter ','.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to retrieve properties of a snapshot.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Deletes specified share under its account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to delete a snapshot.
            </param>
            <param name='include'>
            Optional. Valid values are: snapshots, leased-snapshots, none. The default
            value is snapshots. For 'snapshots', the file share is deleted including
            all of its file share snapshots. If the file share contains
            leased-snapshots, the deletion fails. For 'leased-snapshots', the file
            share is deleted included all of its file share snapshots
            (leased/unleased). For 'none', the file share is deleted if it has no share
            snapshots. If the file share contains any snapshots (leased or unleased),
            the deletion fails.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes specified share under its account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to delete a snapshot.
            </param>
            <param name='include'>
            Optional. Valid values are: snapshots, leased-snapshots, none. The default
            value is snapshots. For 'snapshots', the file share is deleted including
            all of its file share snapshots. If the file share contains
            leased-snapshots, the deletion fails. For 'leased-snapshots', the file
            share is deleted included all of its file share snapshots
            (leased/unleased). For 'none', the file share is deleted if it has no share
            snapshots. If the file share contains any snapshots (leased or unleased),
            the deletion fails.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Restore(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Restore a file share within a valid retention days if share soft delete is
            enabled
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='deletedShareName'>
            Required. Identify the name of the deleted share that will be restored.
            </param>
            <param name='deletedShareVersion'>
            Required. Identify the version of the deleted share that will be restored.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.RestoreAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Restore a file share within a valid retention days if share soft delete is
            enabled
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='deletedShareName'>
            Required. Identify the name of the deleted share that will be restored.
            </param>
            <param name='deletedShareVersion'>
            Required. Identify the version of the deleted share that will be restored.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.Lease(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseShareRequest,System.String)">
            <summary>
            The Lease Share operation establishes and manages a lock on a share for
            delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Share request body.
            </param>
            <param name='xMsSnapshot'>
            Optional. Specify the snapshot time to lease a snapshot.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.LeaseAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseShareRequest,System.String,System.Threading.CancellationToken)">
            <summary>
            The Lease Share operation establishes and manages a lock on a share for
            delete operations. The lock duration can be 15 to 60 seconds, or can be
            infinite.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account. File share
            names must be between 3 and 63 characters in length and use numbers,
            lower-case letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by a letter or number.
            </param>
            <param name='parameters'>
            Lease Share request body.
            </param>
            <param name='xMsSnapshot'>
            Optional. Specify the snapshot time to lease a snapshot.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String)">
            <summary>
            Lists all shares.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.FileSharesOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IFileSharesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IBlobContainersOperations">
            <summary>
            BlobContainersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane.
            Also SRP today does not return continuation token.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of containers that can be
            included in the list.
            </param>
            <param name='filter'>
            Optional. When specified, only container names starting with the
            filter will be listed.
            </param>
            <param name='include'>
            Optional, used to include the properties for soft deleted blob
            containers. Possible values include: 'deleted'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new container under the specified account as described by
            request body. The container resource includes metadata and
            properties for that container. It does not include a list of the
            blobs contained by the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties of the blob container to create.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobContainer,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates container properties as specified in request body.
            Properties not mentioned in the request will be unchanged. Update
            fails if the specified container doesn't already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='blobContainer'>
            Properties to update for the blob container.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes specified container under its account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.SetLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets legal hold tags. Setting the same tag results in an idempotent
            operation. SetLegalHold follows an append pattern and does not
            clear out the existing tags that are not specified in the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is
            normalized to lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock
            Blobs' while maintaining legal hold protection and compliance. Only
            new blocks can be added and any existing blocks cannot be modified
            or deleted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ClearLegalHoldWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Clears legal hold tags. Clearing the same or non-existent tag
            results in an idempotent operation. ClearLegalHold clears out only
            the specified tags in the request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='tags'>
            Each tag should be 3 to 23 alphanumeric characters and is
            normalized to lower case at SRP.
            </param>
            <param name='allowProtectedAppendWritesAll'>
            When enabled, new blocks can be written to both 'Append and Bock
            Blobs' while maintaining legal hold protection and compliance. Only
            new blocks can be added and any existing blocks cannot be modified
            or deleted.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.CreateOrUpdateImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates or updates an unlocked immutability policy. ETag in
            If-Match is honored if given but not required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be created or updated
            to a blob container.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.GetImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the existing immutability policy along with the corresponding
            ETag in response headers and body.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.DeleteImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Aborts an unlocked immutability policy. The response of delete has
            immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
            required for this operation. Deleting a locked immutability policy
            is not allowed, the only way is to delete the container after
            deleting all expired blobs inside the policy locked container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.LockImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the ImmutabilityPolicy to Locked state. The only action
            allowed on a Locked policy is ExtendImmutabilityPolicy action. ETag
            in If-Match is required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ExtendImmutabilityPolicyWithHttpMessagesAsync(System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Extends the immutabilityPeriodSinceCreationInDays of a locked
            immutabilityPolicy. The only action allowed on a Locked policy will
            be this action. ETag in If-Match is required for this operation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='ifMatch'>
            The entity state (ETag) version of the immutability policy to
            update. A value of "*" can be used to apply the operation only if
            the immutability policy already exists. If omitted, this operation
            will always be applied.
            </param>
            <param name='parameters'>
            The ImmutabilityPolicy Properties that will be extended for a blob
            container.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Lease Container operation establishes and manages a lock on a
            container for delete operations. The lock duration can be 15 to 60
            seconds, or can be infinite.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='parameters'>
            Lease Container request body.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ObjectLevelWormWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM
            to object level immutability enabled container. Prerequisites
            require a container level immutability policy either in locked or
            unlocked state, Account level versioning must be enabled and there
            should be no Legal hold on the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.BeginObjectLevelWormWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            This operation migrates a blob container from container level WORM
            to object level immutability enabled container. Prerequisites
            require a container level immutability policy either in locked or
            unlocked state, Account level versioning must be enabled and there
            should be no Legal hold on the container.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='containerName'>
            The name of the blob container within the specified storage
            account. Blob container names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobContainersOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all containers and does not support a prefix like data plane.
            Also SRP today does not return continuation token.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations">
            <summary>
            BlobInventoryPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema,Microsoft.Azure.Management.Storage.Models.SystemData,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the blob inventory policy to the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The storage account blob inventory policy object. It is composed of
            policy rules.
            </param>
            <param name='systemData'>
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the blob inventory policy associated with the specified
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobInventoryPoliciesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the blob inventory policy associated with the specified
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IBlobServicesOperations">
            <summary>
            BlobServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List blob services of storage account. It returns a collection of
            one object named default.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobServiceProperties,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IBlobServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Blob service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IDeletedAccountsOperations">
            <summary>
            DeletedAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IDeletedAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IDeletedAccountsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get properties of specified deleted account resource.
            </summary>
            <param name='deletedAccountName'>
            Name of the deleted storage account.
            </param>
            <param name='location'>
            The location of the deleted storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IDeletedAccountsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists deleted accounts under the subscription.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IEncryptionScopesOperations">
            <summary>
            EncryptionScopesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IEncryptionScopesOperations.PutWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Synchronously creates or updates an encryption scope under the
            specified storage account. If an encryption scope is already
            created and a subsequent request is issued with different
            properties, the encryption scope properties will be updated per the
            specified request.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage
            account. Encryption scope names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the create or update.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IEncryptionScopesOperations.PatchWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.EncryptionScope,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update encryption scope properties as specified in the request
            body. Update fails if the specified encryption scope does not
            already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage
            account. Encryption scope names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='encryptionScope'>
            Encryption scope properties to be used for the update.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IEncryptionScopesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified encryption scope.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='encryptionScopeName'>
            The name of the encryption scope within the specified storage
            account. Encryption scope names must be between 3 and 63 characters
            in length and use numbers, lower-case letters and dash (-) only.
            Every dash (-) character must be immediately preceded and followed
            by a letter or number.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IEncryptionScopesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IEncryptionScopesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the encryption scopes available under the specified
            storage account.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IFileServicesOperations">
            <summary>
            FileServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all file services in storage accounts
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileServiceProperties,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of file services in storage accounts, including
            CORS (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The properties of file services in storage accounts, including CORS
            (Cross-Origin Resource Sharing) rules.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of file services in storage accounts, including
            CORS (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IFileSharesOperations">
            <summary>
            FileSharesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional. Specified maximum number of shares that can be included
            in the list.
            </param>
            <param name='filter'>
            Optional. When specified, only share names starting with the filter
            will be listed.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties.
            Valid values are: deleted, snapshots. Should be passed as a string
            with delimiter ','
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new share under the specified account as described by
            request body. The share resource includes metadata and properties
            for that share. It does not include a list of the files contained
            by the share.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account.
            File share names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-)
            character must be immediately preceded and followed by a letter or
            number.
            </param>
            <param name='fileShare'>
            Properties of the file share to create.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties.
            Valid values are: snapshots. Should be passed as a string with
            delimiter ','
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.FileShare,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Updates share properties as specified in request body. Properties
            not mentioned in the request will not be changed. Update fails if
            the specified share does not already exist.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account.
            File share names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-)
            character must be immediately preceded and followed by a letter or
            number.
            </param>
            <param name='fileShare'>
            Properties to update for the file share.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets properties of a specified share.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account.
            File share names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-)
            character must be immediately preceded and followed by a letter or
            number.
            </param>
            <param name='expand'>
            Optional, used to expand the properties within share's properties.
            Valid values are: stats. Should be passed as a string with
            delimiter ','.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to retrieve properties of a snapshot.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes specified share under its account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account.
            File share names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-)
            character must be immediately preceded and followed by a letter or
            number.
            </param>
            <param name='xMsSnapshot'>
            Optional, used to delete a snapshot.
            </param>
            <param name='include'>
            Optional. Valid values are: snapshots, leased-snapshots, none. The
            default value is snapshots. For 'snapshots', the file share is
            deleted including all of its file share snapshots. If the file
            share contains leased-snapshots, the deletion fails. For
            'leased-snapshots', the file share is deleted included all of its
            file share snapshots (leased/unleased). For 'none', the file share
            is deleted if it has no share snapshots. If the file share contains
            any snapshots (leased or unleased), the deletion fails.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.RestoreWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restore a file share within a valid retention days if share soft
            delete is enabled
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account.
            File share names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-)
            character must be immediately preceded and followed by a letter or
            number.
            </param>
            <param name='deletedShareName'>
            Required. Identify the name of the deleted share that will be
            restored.
            </param>
            <param name='deletedShareVersion'>
            Required. Identify the version of the deleted share that will be
            restored.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.LeaseWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LeaseShareRequest,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The Lease Share operation establishes and manages a lock on a share
            for delete operations. The lock duration can be 15 to 60 seconds,
            or can be infinite.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='shareName'>
            The name of the file share within the specified storage account.
            File share names must be between 3 and 63 characters in length and
            use numbers, lower-case letters and dash (-) only. Every dash (-)
            character must be immediately preceded and followed by a letter or
            number.
            </param>
            <param name='parameters'>
            Lease Share request body.
            </param>
            <param name='xMsSnapshot'>
            Optional. Specify the snapshot time to lease a snapshot.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IFileSharesOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all shares.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ILocalUsersOperations">
            <summary>
            LocalUsersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ILocalUsersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the local users associated with the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ILocalUsersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters
            and numbers only. It must be unique only within the storage
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ILocalUsersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LocalUser,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the
            storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters
            and numbers only. It must be unique only within the storage
            account.
            </param>
            <param name='properties'>
            The local user associated with a storage account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ILocalUsersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the local user associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters
            and numbers only. It must be unique only within the storage
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ILocalUsersOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List SSH authorized keys and shared key of the local user.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters
            and numbers only. It must be unique only within the storage
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ILocalUsersOperations.RegeneratePasswordWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate the local user SSH password.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters
            and numbers only. It must be unique only within the storage
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations">
            <summary>
            ManagementPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more
            details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IManagementPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations">
            <summary>
            ObjectReplicationPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the object replication policies associated with the storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy
            ID.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure
            the policy on the destination account first. For the source
            account, provide the value of the policy ID that is returned when
            you download the policy that was defined on the destination
            account. The policy is downloaded as a JSON file.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure
            the policy on the destination account first. For the source
            account, provide the value of the policy ID that is returned when
            you download the policy that was defined on the destination
            account. The policy is downloaded as a JSON file.
            </param>
            <param name='properties'>
            The object replication policy set to a storage account. A unique
            policy ID will be created if absent.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the object replication policy associated with the specified
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure
            the policy on the destination account first. For the source
            account, provide the value of the policy ID that is returned when
            you download the policy that was defined on the destination
            account. The policy is downloaded as a JSON file.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IOperations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations">
            <summary>
            PrivateEndpointConnectionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all the private endpoint connections associated with the
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the
            Azure resource
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.PutWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection
            associated with the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the
            Azure resource
            </param>
            <param name='properties'>
            The private endpoint connection properties.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified private endpoint connection associated with
            the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the
            Azure resource
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations">
            <summary>
            PrivateLinkResourcesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations.ListByStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources that need to be created for a
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IQueueOperations">
            <summary>
            QueueOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the
            specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of lowercase
            alphanumeric and dash(-) characters only, it should begin and end
            with an alphanumeric character and it cannot have two consecutive
            dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the
            specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of lowercase
            alphanumeric and dash(-) characters only, it should begin and end
            with an alphanumeric character and it cannot have two consecutive
            dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified
            account if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of lowercase
            alphanumeric and dash(-) characters only, it should begin and end
            with an alphanumeric character and it cannot have two consecutive
            dash(-) characters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the queue with the specified queue name, under the
            specified account if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of lowercase
            alphanumeric and dash(-) characters only, it should begin and end
            with an alphanumeric character and it cannot have two consecutive
            dash(-) characters.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional, a maximum number of queues that should be included in a
            list queue response
            </param>
            <param name='filter'>
            Optional, When specified, only the queues with a name starting with
            the given filter will be listed.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IQueueServicesOperations">
            <summary>
            QueueServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all queue services for the storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Queue service. You can include up to
            five CorsRule elements in the request. If no CorsRule elements are
            included in the request body, all CORS rules will be deleted, and
            CORS will be disabled for the Queue service.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IQueueServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ISkusOperations">
            <summary>
            SkusOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ISkusOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IStorageAccountsOperations">
            <summary>
            StorageAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in
            use.
            </summary>
            <param name='name'>
            The storage account name.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified
            parameters. If an account is already created and a subsequent
            create request is issued with different properties, the account
            properties will be updated. If an account is already created and a
            subsequent create or update request is issued with the exact same
            set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.GetPropertiesWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including
            but not limited to name, SKU name, location, and account status.
            The ListKeys operation should be used to retrieve storage keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties.
            By default, data is not included when fetching properties.
            Currently we only support geoReplicationStats and
            blobRestoreStatus. Possible values include: 'geoReplicationStats',
            'blobRestoreStatus'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption,
            access tier, or tags for a storage account. It can also be used to
            map the account to a custom domain. Only one custom domain is
            supported per storage account; the replacement/change of custom
            domain is not supported. In order to replace an old custom domain,
            the old value must be cleared/unregistered before a new value can
            be set. The update of multiple properties is supported. This call
            does not change the storage keys for the account. If you want to
            change the storage account keys, use the regenerate keys operation.
            The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription.
            Note that storage keys are not returned; use the ListKeys operation
            for this.
            </summary>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource
            group. Note that storage keys are not returned; use the ListKeys
            operation for this.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys or Kerberos keys (if active directory
            enabled) for the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='expand'>
            Specifies type of the key to be listed. Possible value is kerb.
            Possible values include: 'kerb'
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys or Kerberos keys for the
            specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible
            values are key1, key2, kerb1, kerb2.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListAccountSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListServiceSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.FailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's
            primary cluster to secondary cluster for RA-GRS accounts. The
            secondary cluster will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.HierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest'
            or a hydration request 'HnsOnHydrationRequest'. The validation
            request will validate the migration whereas the hydration request
            will migrate the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.AbortHierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.RestoreBlobRangesWithHttpMessagesAsync(System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.RevokeUserDelegationKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified
            parameters. If an account is already created and a subsequent
            create request is issued with different properties, the account
            properties will be updated. If an account is already created and a
            subsequent create or update request is issued with the exact same
            set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginFailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's
            primary cluster to secondary cluster for RA-GRS accounts. The
            secondary cluster will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginHierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest'
            or a hydration request 'HnsOnHydrationRequest'. The validation
            request will validate the migration whereas the hydration request
            will migrate the account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginAbortHierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.BeginRestoreBlobRangesWithHttpMessagesAsync(System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription.
            Note that storage keys are not returned; use the ListKeys operation
            for this.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IStorageAccountsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource
            group. Note that storage keys are not returned; use the ListKeys
            operation for this.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IStorageManagementClient">
            <summary>
            The Azure Storage Management API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default
            value is 30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When
            set to true a unique x-ms-client-request-id value is generated and
            included in each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Skus">
            <summary>
            Gets the ISkusOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.StorageAccounts">
            <summary>
            Gets the IStorageAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.DeletedAccounts">
            <summary>
            Gets the IDeletedAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Usages">
            <summary>
            Gets the IUsagesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ManagementPolicies">
            <summary>
            Gets the IManagementPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BlobInventoryPolicies">
            <summary>
            Gets the IBlobInventoryPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.PrivateEndpointConnections">
            <summary>
            Gets the IPrivateEndpointConnectionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.PrivateLinkResources">
            <summary>
            Gets the IPrivateLinkResourcesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.ObjectReplicationPolicies">
            <summary>
            Gets the IObjectReplicationPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.LocalUsers">
            <summary>
            Gets the ILocalUsersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.EncryptionScopes">
            <summary>
            Gets the IEncryptionScopesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BlobServices">
            <summary>
            Gets the IBlobServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.BlobContainers">
            <summary>
            Gets the IBlobContainersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.FileServices">
            <summary>
            Gets the IFileServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.FileShares">
            <summary>
            Gets the IFileSharesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.QueueServices">
            <summary>
            Gets the IQueueServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Queue">
            <summary>
            Gets the IQueueOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.TableServices">
            <summary>
            Gets the ITableServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.IStorageManagementClient.Table">
            <summary>
            Gets the ITableOperations.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ITableOperations">
            <summary>
            TableOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the
            specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of only
            alphanumeric characters and it cannot begin with a numeric
            character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the
            specified account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of only
            alphanumeric characters and it cannot begin with a numeric
            character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified
            account if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of only
            alphanumeric characters and it cannot begin with a numeric
            character.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the specified table name, under the
            specified account if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be
            between 3 and 63 characters.The name must comprise of only
            alphanumeric characters and it cannot begin with a numeric
            character.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ITableServicesOperations">
            <summary>
            TableServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all table services for the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Table service. You can include up to
            five CorsRule elements in the request. If no CorsRule elements are
            included in the request body, all CORS rules will be deleted, and
            CORS will be disabled for the Table service.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ITableServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource
            Sharing) rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The
            name is case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource
            group. Storage account names must be between 3 and 24 characters in
            length and use numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.IUsagesOperations">
            <summary>
            UsagesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.IUsagesOperations.ListByLocationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.LocalUsersOperations">
            <summary>
            LocalUsersOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the LocalUsersOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.LocalUsersOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the local users associated with the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LocalUser,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the storage
            account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='properties'>
            The local user associated with a storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the local user associated with the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List SSH authorized keys and shared key of the local user.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperations.RegeneratePasswordWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerate the local user SSH password.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions">
            <summary>
            Extension methods for LocalUsersOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.List(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String)">
            <summary>
            List the local users associated with the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List the local users associated with the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.Get(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String)">
            <summary>
            Get the local user of the storage account by username.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the local user of the storage account by username.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LocalUser)">
            <summary>
            Create or update the properties of a local user associated with the storage
            account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='properties'>
            The local user associated with a storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.LocalUser,System.Threading.CancellationToken)">
            <summary>
            Create or update the properties of a local user associated with the storage
            account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='properties'>
            The local user associated with a storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the local user associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the local user associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.ListKeys(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String)">
            <summary>
            List SSH authorized keys and shared key of the local user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List SSH authorized keys and shared key of the local user.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.RegeneratePassword(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String)">
            <summary>
            Regenerate the local user SSH password.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.LocalUsersOperationsExtensions.RegeneratePasswordAsync(Microsoft.Azure.Management.Storage.ILocalUsersOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Regenerate the local user SSH password.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='username'>
            The name of local user. The username must contain lowercase letters and
            numbers only. It must be unique only within the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ManagementPoliciesOperations">
            <summary>
            ManagementPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the ManagementPoliciesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.ManagementPoliciesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions">
            <summary>
            Extension methods for ManagementPoliciesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the managementpolicy associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.Threading.CancellationToken)">
            <summary>
            Sets the managementpolicy to the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='policy'>
            The Storage Account ManagementPolicy, in JSON format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ManagementPoliciesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IManagementPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the managementpolicy associated with the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccessPolicy.#ctor">
            <summary>
            Initializes a new instance of the AccessPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccessPolicy.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the AccessPolicy class.
            </summary>
            <param name="startTime">Start time of the access policy</param>
            <param name="expiryTime">Expiry time of the access policy</param>
            <param name="permission">List of abbreviated permissions.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccessPolicy.StartTime">
            <summary>
            Gets or sets start time of the access policy
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccessPolicy.ExpiryTime">
            <summary>
            Gets or sets expiry time of the access policy
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccessPolicy.Permission">
            <summary>
            Gets or sets list of abbreviated permissions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AccessTier">
            <summary>
            Defines values for AccessTier.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties">
            <summary>
            This defines account-level immutability policy properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties.#ctor">
            <summary>
            Initializes a new instance of the
            AccountImmutabilityPolicyProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the
            AccountImmutabilityPolicyProperties class.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="state">The ImmutabilityPolicy state defines the mode
            of the policy. Disabled state disables the policy, Unlocked state
            allows increase and decrease of immutability retention time and
            also allows toggling allowProtectedAppendWrites property, Locked
            state only allows the increase of the immutability retention time.
            A policy can only be created in a Disabled or Unlocked state and
            can be toggled between the two states. Only a policy in an Unlocked
            state can transition to a Locked state which cannot be reverted.
            Possible values include: 'Unlocked', 'Locked', 'Disabled'</param>
            <param name="allowProtectedAppendWrites">This property can only be
            changed for disabled and unlocked time-based retention policies.
            When enabled, new blocks can be written to an append blob while
            maintaining immutability protection and compliance. Only new blocks
            can be added and any existing blocks cannot be modified or
            deleted.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets or sets the immutability period for the blobs in the container
            since the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties.State">
            <summary>
            Gets or sets the ImmutabilityPolicy state defines the mode of the
            policy. Disabled state disables the policy, Unlocked state allows
            increase and decrease of immutability retention time and also
            allows toggling allowProtectedAppendWrites property, Locked state
            only allows the increase of the immutability retention time. A
            policy can only be created in a Disabled or Unlocked state and can
            be toggled between the two states. Only a policy in an Unlocked
            state can transition to a Locked state which cannot be reverted.
            Possible values include: 'Unlocked', 'Locked', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties.AllowProtectedAppendWrites">
            <summary>
            Gets or sets this property can only be changed for disabled and
            unlocked time-based retention policies. When enabled, new blocks
            can be written to an append blob while maintaining immutability
            protection and compliance. Only new blocks can be added and any
            existing blocks cannot be modified or deleted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyState">
            <summary>
            Defines values for AccountImmutabilityPolicyState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AccountSasParameters">
            <summary>
            The parameters to list SAS credentials of a storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.#ctor">
            <summary>
            Initializes a new instance of the AccountSasParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.#ctor(System.String,System.String,System.String,System.DateTime,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the AccountSasParameters class.
            </summary>
            <param name="services">The signed services accessible with the
            account SAS. Possible values include: Blob (b), Queue (q), Table
            (t), File (f). Possible values include: 'b', 'q', 't', 'f'</param>
            <param name="resourceTypes">The signed resource types that are
            accessible with the account SAS. Service (s): Access to
            service-level APIs; Container (c): Access to container-level APIs;
            Object (o): Access to object-level APIs for blobs, queue messages,
            table entities, and files. Possible values include: 's', 'c',
            'o'</param>
            <param name="permissions">The signed permissions for the account
            SAS. Possible values include: Read (r), Write (w), Delete (d), List
            (l), Add (a), Create (c), Update (u) and Process (p). Possible
            values include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'</param>
            <param name="sharedAccessExpiryTime">The time at which the shared
            access signature becomes invalid.</param>
            <param name="iPAddressOrRange">An IP address or a range of IP
            addresses from which to accept requests.</param>
            <param name="protocols">The protocol permitted for a request made
            with the account SAS. Possible values include: 'https,http',
            'https'</param>
            <param name="sharedAccessStartTime">The time at which the SAS
            becomes valid.</param>
            <param name="keyToSign">The key to sign the account SAS token
            with.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Services">
            <summary>
            Gets or sets the signed services accessible with the account SAS.
            Possible values include: Blob (b), Queue (q), Table (t), File (f).
            Possible values include: 'b', 'q', 't', 'f'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.ResourceTypes">
            <summary>
            Gets or sets the signed resource types that are accessible with the
            account SAS. Service (s): Access to service-level APIs; Container
            (c): Access to container-level APIs; Object (o): Access to
            object-level APIs for blobs, queue messages, table entities, and
            files. Possible values include: 's', 'c', 'o'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Permissions">
            <summary>
            Gets or sets the signed permissions for the account SAS. Possible
            values include: Read (r), Write (w), Delete (d), List (l), Add (a),
            Create (c), Update (u) and Process (p). Possible values include:
            'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.IPAddressOrRange">
            <summary>
            Gets or sets an IP address or a range of IP addresses from which to
            accept requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Protocols">
            <summary>
            Gets or sets the protocol permitted for a request made with the
            account SAS. Possible values include: 'https,http', 'https'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.SharedAccessStartTime">
            <summary>
            Gets or sets the time at which the SAS becomes valid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.SharedAccessExpiryTime">
            <summary>
            Gets or sets the time at which the shared access signature becomes
            invalid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.KeyToSign">
            <summary>
            Gets or sets the key to sign the account SAS token with.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AccountSasParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AccountStatus">
            <summary>
            Defines values for AccountStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AccountType">
            <summary>
            Defines values for AccountType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Action">
            <summary>
            Defines values for Action.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties">
            <summary>
            Settings properties for Active Directory (AD).
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.#ctor">
            <summary>
            Initializes a new instance of the ActiveDirectoryProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ActiveDirectoryProperties class.
            </summary>
            <param name="domainName">Specifies the primary domain that the AD
            DNS server is authoritative for.</param>
            <param name="domainGuid">Specifies the domain GUID.</param>
            <param name="netBiosDomainName">Specifies the NetBIOS domain
            name.</param>
            <param name="forestName">Specifies the Active Directory forest to
            get.</param>
            <param name="domainSid">Specifies the security identifier
            (SID).</param>
            <param name="azureStorageSid">Specifies the security identifier
            (SID) for Azure Storage.</param>
            <param name="samAccountName">Specifies the Active Directory
            SAMAccountName for Azure Storage.</param>
            <param name="accountType">Specifies the Active Directory account
            type for Azure Storage. Possible values include: 'User',
            'Computer'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.DomainName">
            <summary>
            Gets or sets specifies the primary domain that the AD DNS server is
            authoritative for.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.NetBiosDomainName">
            <summary>
            Gets or sets specifies the NetBIOS domain name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.ForestName">
            <summary>
            Gets or sets specifies the Active Directory forest to get.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.DomainGuid">
            <summary>
            Gets or sets specifies the domain GUID.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.DomainSid">
            <summary>
            Gets or sets specifies the security identifier (SID).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.AzureStorageSid">
            <summary>
            Gets or sets specifies the security identifier (SID) for Azure
            Storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.SamAccountName">
            <summary>
            Gets or sets specifies the Active Directory SAMAccountName for
            Azure Storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.AccountType">
            <summary>
            Gets or sets specifies the Active Directory account type for Azure
            Storage. Possible values include: 'User', 'Computer'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AllowedCopyScope">
            <summary>
            Defines values for AllowedCopyScope.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AllowedMethods">
            <summary>
            Defines values for AllowedMethods.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AzureEntityResource">
            <summary>
            Entity Resource
            </summary>
            <remarks>
            The resource model definition for an Azure Resource Manager resource
            with an etag.
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AzureEntityResource.#ctor">
            <summary>
            Initializes a new instance of the AzureEntityResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AzureEntityResource.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the AzureEntityResource class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="etag">Resource Etag.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AzureEntityResource.Etag">
            <summary>
            Gets resource Etag.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication">
            <summary>
            Settings for Azure Files identity based authentication.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.#ctor">
            <summary>
            Initializes a new instance of the
            AzureFilesIdentityBasedAuthentication class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.ActiveDirectoryProperties,System.String)">
            <summary>
            Initializes a new instance of the
            AzureFilesIdentityBasedAuthentication class.
            </summary>
            <param name="directoryServiceOptions">Indicates the directory
            service used. Note that this enum may be extended in the future.
            Possible values include: 'None', 'AADDS', 'AD', 'AADKERB'</param>
            <param name="activeDirectoryProperties">Required if
            directoryServiceOptions are AD, optional if they are
            AADKERB.</param>
            <param name="defaultSharePermission">Default share permission for
            users using Kerberos authentication if RBAC role is not assigned.
            Possible values include: 'None', 'StorageFileDataSmbShareReader',
            'StorageFileDataSmbShareContributor',
            'StorageFileDataSmbShareElevatedContributor'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.DirectoryServiceOptions">
            <summary>
            Gets or sets indicates the directory service used. Note that this
            enum may be extended in the future. Possible values include:
            'None', 'AADDS', 'AD', 'AADKERB'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.ActiveDirectoryProperties">
            <summary>
            Gets or sets required if directoryServiceOptions are AD, optional
            if they are AADKERB.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.DefaultSharePermission">
            <summary>
            Gets or sets default share permission for users using Kerberos
            authentication if RBAC role is not assigned. Possible values
            include: 'None', 'StorageFileDataSmbShareReader',
            'StorageFileDataSmbShareContributor',
            'StorageFileDataSmbShareElevatedContributor'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobContainer">
            <summary>
            Properties of the blob container, including Id, resource name, resource
            type, Etag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainer.#ctor">
            <summary>
            Initializes a new instance of the BlobContainer class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainer.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the BlobContainer class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="etag">Resource Etag.</param>
            <param name="version">The version of the deleted blob
            container.</param>
            <param name="deleted">Indicates whether the blob container was
            deleted.</param>
            <param name="deletedTime">Blob container deletion time.</param>
            <param name="remainingRetentionDays">Remaining retention days for
            soft deleted blob container.</param>
            <param name="defaultEncryptionScope">Default the container to use
            specified encryption scope for all writes.</param>
            <param name="denyEncryptionScopeOverride">Block override of
            encryption scope from the container default.</param>
            <param name="publicAccess">Specifies whether data in the container
            may be accessed publicly and the level of access. Possible values
            include: 'Container', 'Blob', 'None'</param>
            <param name="lastModifiedTime">Returns the date and time the
            container was last modified.</param>
            <param name="leaseStatus">The lease status of the container.
            Possible values include: 'Locked', 'Unlocked'</param>
            <param name="leaseState">Lease state of the container. Possible
            values include: 'Available', 'Leased', 'Expired', 'Breaking',
            'Broken'</param>
            <param name="leaseDuration">Specifies whether the lease on a
            container is of infinite or fixed duration, only when the container
            is leased. Possible values include: 'Infinite', 'Fixed'</param>
            <param name="metadata">A name-value pair to associate with the
            container as metadata.</param>
            <param name="immutabilityPolicy">The ImmutabilityPolicy property of
            the container.</param>
            <param name="legalHold">The LegalHold property of the
            container.</param>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="hasImmutabilityPolicy">The hasImmutabilityPolicy
            public property is set to true by SRP if ImmutabilityPolicy has
            been created for this container. The hasImmutabilityPolicy public
            property is set to false by SRP if ImmutabilityPolicy has not been
            created for this container.</param>
            <param name="immutableStorageWithVersioning">The object level
            immutability property of the container. The property is immutable
            and can only be set to true at the container creation time.
            Existing containers must undergo a migration process.</param>
            <param name="enableNfsV3RootSquash">Enable NFSv3 root squash on
            blob container.</param>
            <param name="enableNfsV3AllSquash">Enable NFSv3 all squash on blob
            container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.Version">
            <summary>
            Gets the version of the deleted blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.Deleted">
            <summary>
            Gets indicates whether the blob container was deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.DeletedTime">
            <summary>
            Gets blob container deletion time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.RemainingRetentionDays">
            <summary>
            Gets remaining retention days for soft deleted blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.DefaultEncryptionScope">
            <summary>
            Gets or sets default the container to use specified encryption
            scope for all writes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.DenyEncryptionScopeOverride">
            <summary>
            Gets or sets block override of encryption scope from the container
            default.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.PublicAccess">
            <summary>
            Gets or sets specifies whether data in the container may be
            accessed publicly and the level of access. Possible values include:
            'Container', 'Blob', 'None'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LastModifiedTime">
            <summary>
            Gets returns the date and time the container was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LeaseStatus">
            <summary>
            Gets the lease status of the container. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LeaseState">
            <summary>
            Gets lease state of the container. Possible values include:
            'Available', 'Leased', 'Expired', 'Breaking', 'Broken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LeaseDuration">
            <summary>
            Gets specifies whether the lease on a container is of infinite or
            fixed duration, only when the container is leased. Possible values
            include: 'Infinite', 'Fixed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.Metadata">
            <summary>
            Gets or sets a name-value pair to associate with the container as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.ImmutabilityPolicy">
            <summary>
            Gets the ImmutabilityPolicy property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.LegalHold">
            <summary>
            Gets the LegalHold property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.HasImmutabilityPolicy">
            <summary>
            Gets the hasImmutabilityPolicy public property is set to true by
            SRP if ImmutabilityPolicy has been created for this container. The
            hasImmutabilityPolicy public property is set to false by SRP if
            ImmutabilityPolicy has not been created for this container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.ImmutableStorageWithVersioning">
            <summary>
            Gets or sets the object level immutability property of the
            container. The property is immutable and can only be set to true at
            the container creation time. Existing containers must undergo a
            migration process.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.EnableNfsV3RootSquash">
            <summary>
            Gets or sets enable NFSv3 root squash on blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainer.EnableNfsV3AllSquash">
            <summary>
            Gets or sets enable NFSv3 all squash on blob container.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders">
            <summary>
            Defines headers for CreateOrUpdateImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersCreateOrUpdateImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersCreateOrUpdateImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainersCreateOrUpdateImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders">
            <summary>
            Defines headers for DeleteImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersDeleteImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersDeleteImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainersDeleteImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders">
            <summary>
            Defines headers for ExtendImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersExtendImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersExtendImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainersExtendImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders">
            <summary>
            Defines headers for GetImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersGetImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersGetImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainersGetImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders">
            <summary>
            Defines headers for LockImmutabilityPolicy operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor">
            <summary>
            Initializes a new instance of the
            BlobContainersLockImmutabilityPolicyHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            BlobContainersLockImmutabilityPolicyHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobContainersLockImmutabilityPolicyHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy">
            <summary>
            The storage account blob inventory policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy.#ctor">
            <summary>
            Initializes a new instance of the BlobInventoryPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy.#ctor(Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema,System.String,System.String,System.String,System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.SystemData)">
            <summary>
            Initializes a new instance of the BlobInventoryPolicy class.
            </summary>
            <param name="policy">The storage account blob inventory policy
            object. It is composed of policy rules.</param>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="lastModifiedTime">Returns the last modified date and
            time of the blob inventory policy.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy.LastModifiedTime">
            <summary>
            Gets returns the last modified date and time of the blob inventory
            policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy.Policy">
            <summary>
            Gets or sets the storage account blob inventory policy object. It
            is composed of policy rules.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy.SystemData">
            <summary>
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition">
            <summary>
            An object that defines the blob inventory rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.#ctor">
            <summary>
            Initializes a new instance of the BlobInventoryPolicyDefinition
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{System.String},Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter)">
            <summary>
            Initializes a new instance of the BlobInventoryPolicyDefinition
            class.
            </summary>
            <param name="format">This is a required field, it specifies the
            format for the inventory files. Possible values include: 'Csv',
            'Parquet'</param>
            <param name="schedule">This is a required field. This field is used
            to schedule an inventory formation. Possible values include:
            'Daily', 'Weekly'</param>
            <param name="objectType">This is a required field. This field
            specifies the scope of the inventory created either at the blob or
            container level. Possible values include: 'Blob',
            'Container'</param>
            <param name="schemaFields">This is a required field. This field
            specifies the fields and properties of the object to be included in
            the inventory. The Schema field value 'Name' is always required.
            The valid values for this field for the 'Blob'
            definition.objectType include 'Name, Creation-Time, Last-Modified,
            Content-Length, Content-MD5, BlobType, AccessTier,
            AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time,
            hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId,
            IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag,
            ContentType, ContentEncoding, ContentLanguage, ContentCRC64,
            CacheControl, ContentDisposition, LeaseStatus, LeaseState,
            LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime,
            RemainingRetentionDays, ImmutabilityPolicyUntilDate,
            ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource,
            CopyProgress, CopyCompletionTime, CopyStatusDescription,
            CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus,
            XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'.
            For Blob object type schema field value 'DeletedTime' is applicable
            only for Hns enabled accounts. The valid values for 'Container'
            definition.objectType include 'Name, Last-Modified, Metadata,
            LeaseStatus, LeaseState, LeaseDuration, PublicAccess,
            HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope,
            DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled,
            Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema
            field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions,
            Acl, DeletionId' are valid only for Hns enabled accounts.Schema
            field values 'Tags, TagCount' are only valid for Non-Hns
            accounts.</param>
            <param name="filters">An object that defines the filter
            set.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.Filters">
            <summary>
            Gets or sets an object that defines the filter set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.Format">
            <summary>
            Gets or sets this is a required field, it specifies the format for
            the inventory files. Possible values include: 'Csv', 'Parquet'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.Schedule">
            <summary>
            Gets or sets this is a required field. This field is used to
            schedule an inventory formation. Possible values include: 'Daily',
            'Weekly'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.ObjectType">
            <summary>
            Gets or sets this is a required field. This field specifies the
            scope of the inventory created either at the blob or container
            level. Possible values include: 'Blob', 'Container'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.SchemaFields">
            <summary>
            Gets or sets this is a required field. This field specifies the
            fields and properties of the object to be included in the
            inventory. The Schema field value 'Name' is always required. The
            valid values for this field for the 'Blob' definition.objectType
            include 'Name, Creation-Time, Last-Modified, Content-Length,
            Content-MD5, BlobType, AccessTier, AccessTierChangeTime,
            AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group,
            Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata,
            LastAccessTime, Tags, Etag, ContentType, ContentEncoding,
            ContentLanguage, ContentCRC64, CacheControl, ContentDisposition,
            LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted,
            DeletionId, DeletedTime, RemainingRetentionDays,
            ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold,
            CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime,
            CopyStatusDescription, CustomerProvidedKeySha256,
            RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber,
            EncryptionScope, IncrementalCopy, TagCount'. For Blob object type
            schema field value 'DeletedTime' is applicable only for Hns enabled
            accounts. The valid values for 'Container' definition.objectType
            include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState,
            LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold,
            Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride,
            ImmutableStorageWithVersioningEnabled, Deleted, Version,
            DeletedTime, RemainingRetentionDays'. Schema field values
            'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl,
            DeletionId' are valid only for Hns enabled accounts.Schema field
            values 'Tags, TagCount' are only valid for Non-Hns accounts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter">
            <summary>
            An object that defines the blob inventory rule filter conditions. For
            'Blob' definition.objectType all filter properties are applicable,
            'blobTypes' is required and others are optional. For 'Container'
            definition.objectType only prefixMatch is applicable and is optional.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.#ctor">
            <summary>
            Initializes a new instance of the BlobInventoryPolicyFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the BlobInventoryPolicyFilter class.
            </summary>
            <param name="prefixMatch">An array of strings with maximum 10 blob
            prefixes to be included in the inventory.</param>
            <param name="excludePrefix">An array of strings with maximum 10
            blob prefixes to be excluded from the inventory.</param>
            <param name="blobTypes">An array of predefined enum values. Valid
            values include blockBlob, appendBlob, pageBlob. Hns accounts does
            not support pageBlobs. This field is required when
            definition.objectType property is set to 'Blob'.</param>
            <param name="includeBlobVersions">Includes blob versions in blob
            inventory when value is set to true. The definition.schemaFields
            values 'VersionId and IsCurrentVersion' are required if this
            property is set to true, else they must be excluded.</param>
            <param name="includeSnapshots">Includes blob snapshots in blob
            inventory when value is set to true. The definition.schemaFields
            value 'Snapshot' is required if this property is set to true, else
            it must be excluded.</param>
            <param name="includeDeleted">For 'Container' definition.objectType
            the definition.schemaFields must include 'Deleted, Version,
            DeletedTime and RemainingRetentionDays'. For 'Blob'
            definition.objectType and HNS enabled storage accounts the
            definition.schemaFields must include 'DeletionId, Deleted,
            DeletedTime and RemainingRetentionDays' and for Hns disabled
            accounts the definition.schemaFields must include 'Deleted and
            RemainingRetentionDays', else it must be excluded.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.PrefixMatch">
            <summary>
            Gets or sets an array of strings with maximum 10 blob prefixes to
            be included in the inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.ExcludePrefix">
            <summary>
            Gets or sets an array of strings with maximum 10 blob prefixes to
            be excluded from the inventory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.BlobTypes">
            <summary>
            Gets or sets an array of predefined enum values. Valid values
            include blockBlob, appendBlob, pageBlob. Hns accounts does not
            support pageBlobs. This field is required when
            definition.objectType property is set to 'Blob'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.IncludeBlobVersions">
            <summary>
            Gets or sets includes blob versions in blob inventory when value is
            set to true. The definition.schemaFields values 'VersionId and
            IsCurrentVersion' are required if this property is set to true,
            else they must be excluded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.IncludeSnapshots">
            <summary>
            Gets or sets includes blob snapshots in blob inventory when value
            is set to true. The definition.schemaFields value 'Snapshot' is
            required if this property is set to true, else it must be excluded.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyFilter.IncludeDeleted">
            <summary>
            Gets or sets for 'Container' definition.objectType the
            definition.schemaFields must include 'Deleted, Version, DeletedTime
            and RemainingRetentionDays'. For 'Blob' definition.objectType and
            HNS enabled storage accounts the definition.schemaFields must
            include 'DeletionId, Deleted, DeletedTime and
            RemainingRetentionDays' and for Hns disabled accounts the
            definition.schemaFields must include 'Deleted and
            RemainingRetentionDays', else it must be excluded.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule">
            <summary>
            An object that wraps the blob inventory rule. Each rule is uniquely
            defined by name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.#ctor">
            <summary>
            Initializes a new instance of the BlobInventoryPolicyRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.#ctor(System.Boolean,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyDefinition)">
            <summary>
            Initializes a new instance of the BlobInventoryPolicyRule class.
            </summary>
            <param name="enabled">Rule is enabled when set to true.</param>
            <param name="name">A rule name can contain any combination of alpha
            numeric characters. Rule name is case-sensitive. It must be unique
            within a policy.</param>
            <param name="destination">Container name where blob inventory files
            are stored. Must be pre-created.</param>
            <param name="definition">An object that defines the blob inventory
            policy rule.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.Enabled">
            <summary>
            Gets or sets rule is enabled when set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.Name">
            <summary>
            Gets or sets a rule name can contain any combination of alpha
            numeric characters. Rule name is case-sensitive. It must be unique
            within a policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.Destination">
            <summary>
            Gets or sets container name where blob inventory files are stored.
            Must be pre-created.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.Definition">
            <summary>
            Gets or sets an object that defines the blob inventory policy rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema">
            <summary>
            The storage account blob inventory policy rules.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.#ctor">
            <summary>
            Initializes a new instance of the BlobInventoryPolicySchema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.#ctor(System.Boolean,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicyRule},System.String)">
            <summary>
            Initializes a new instance of the BlobInventoryPolicySchema class.
            </summary>
            <param name="enabled">Policy is enabled if set to true.</param>
            <param name="rules">The storage account blob inventory policy
            rules. The rule is applied when it is enabled.</param>
            <param name="destination">Deprecated Property from API version
            2021-04-01 onwards, the required destination container name must be
            specified at the rule level 'policy.rule.destination'</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.#cctor">
            <summary>
            Static constructor for BlobInventoryPolicySchema class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.Enabled">
            <summary>
            Gets or sets policy is enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.Destination">
            <summary>
            Gets deprecated Property from API version 2021-04-01 onwards, the
            required destination container name must be specified at the rule
            level 'policy.rule.destination'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.Rules">
            <summary>
            Gets or sets the storage account blob inventory policy rules. The
            rule is applied when it is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.Type">
            <summary>
            The valid value is Inventory
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobInventoryPolicySchema.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters">
            <summary>
            Blob restore parameters
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.#ctor">
            <summary>
            Initializes a new instance of the BlobRestoreParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.#ctor(System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange})">
            <summary>
            Initializes a new instance of the BlobRestoreParameters class.
            </summary>
            <param name="timeToRestore">Restore blob to the specified
            time.</param>
            <param name="blobRanges">Blob ranges to restore.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.TimeToRestore">
            <summary>
            Gets or sets restore blob to the specified time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.BlobRanges">
            <summary>
            Gets or sets blob ranges to restore.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreProgressStatus">
            <summary>
            Defines values for BlobRestoreProgressStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange">
            <summary>
            Blob range
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.#ctor">
            <summary>
            Initializes a new instance of the BlobRestoreRange class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the BlobRestoreRange class.
            </summary>
            <param name="startRange">Blob start range. This is inclusive. Empty
            means account start.</param>
            <param name="endRange">Blob end range. This is exclusive. Empty
            means account end.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.StartRange">
            <summary>
            Gets or sets blob start range. This is inclusive. Empty means
            account start.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.EndRange">
            <summary>
            Gets or sets blob end range. This is exclusive. Empty means account
            end.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreRange.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus">
            <summary>
            Blob restore status.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.#ctor">
            <summary>
            Initializes a new instance of the BlobRestoreStatus class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.BlobRestoreParameters)">
            <summary>
            Initializes a new instance of the BlobRestoreStatus class.
            </summary>
            <param name="status">The status of blob restore progress. Possible
            values are: - InProgress: Indicates that blob restore is ongoing. -
            Complete: Indicates that blob restore has been completed
            successfully. - Failed: Indicates that blob restore is failed.
            Possible values include: 'InProgress', 'Complete', 'Failed'</param>
            <param name="failureReason">Failure reason when blob restore is
            failed.</param>
            <param name="restoreId">Id for tracking blob restore
            request.</param>
            <param name="parameters">Blob restore request parameters.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.Status">
            <summary>
            Gets the status of blob restore progress. Possible values are: -
            InProgress: Indicates that blob restore is ongoing. - Complete:
            Indicates that blob restore has been completed successfully. -
            Failed: Indicates that blob restore is failed. Possible values
            include: 'InProgress', 'Complete', 'Failed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.FailureReason">
            <summary>
            Gets failure reason when blob restore is failed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.RestoreId">
            <summary>
            Gets id for tracking blob restore request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.Parameters">
            <summary>
            Gets blob restore request parameters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties">
            <summary>
            The properties of a storage account’s Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.#ctor">
            <summary>
            Initializes a new instance of the BlobServiceProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.String,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.ChangeFeed,Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy,Microsoft.Azure.Management.Storage.Models.Sku)">
            <summary>
            Initializes a new instance of the BlobServiceProperties class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="cors">Specifies CORS rules for the Blob service. You
            can include up to five CorsRule elements in the request. If no
            CorsRule elements are included in the request body, all CORS rules
            will be deleted, and CORS will be disabled for the Blob
            service.</param>
            <param name="defaultServiceVersion">DefaultServiceVersion indicates
            the default version to use for requests to the Blob service if an
            incoming request’s version is not specified. Possible values
            include version 2008-10-27 and all more recent versions.</param>
            <param name="deleteRetentionPolicy">The blob service properties for
            blob soft delete.</param>
            <param name="isVersioningEnabled">Versioning is enabled if set to
            true.</param>
            <param name="automaticSnapshotPolicyEnabled">Deprecated in favor of
            isVersioningEnabled property.</param>
            <param name="changeFeed">The blob service properties for change
            feed events.</param>
            <param name="restorePolicy">The blob service properties for blob
            restore policy.</param>
            <param name="containerDeleteRetentionPolicy">The blob service
            properties for container soft delete.</param>
            <param name="lastAccessTimeTrackingPolicy">The blob service
            property to configure last access time based tracking
            policy.</param>
            <param name="sku">Sku name and tier.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.Cors">
            <summary>
            Gets or sets specifies CORS rules for the Blob service. You can
            include up to five CorsRule elements in the request. If no CorsRule
            elements are included in the request body, all CORS rules will be
            deleted, and CORS will be disabled for the Blob service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.DefaultServiceVersion">
            <summary>
            Gets or sets defaultServiceVersion indicates the default version to
            use for requests to the Blob service if an incoming request’s
            version is not specified. Possible values include version
            2008-10-27 and all more recent versions.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.DeleteRetentionPolicy">
            <summary>
            Gets or sets the blob service properties for blob soft delete.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.IsVersioningEnabled">
            <summary>
            Gets or sets versioning is enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.AutomaticSnapshotPolicyEnabled">
            <summary>
            Gets or sets deprecated in favor of isVersioningEnabled property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.ChangeFeed">
            <summary>
            Gets or sets the blob service properties for change feed events.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.RestorePolicy">
            <summary>
            Gets or sets the blob service properties for blob restore policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.ContainerDeleteRetentionPolicy">
            <summary>
            Gets or sets the blob service properties for container soft delete.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.LastAccessTimeTrackingPolicy">
            <summary>
            Gets or sets the blob service property to configure last access
            time based tracking policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.Sku">
            <summary>
            Gets sku name and tier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.BlobServiceProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Bypass">
            <summary>
            Defines values for Bypass.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ChangeFeed">
            <summary>
            The blob service properties for change feed events.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ChangeFeed.#ctor">
            <summary>
            Initializes a new instance of the ChangeFeed class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ChangeFeed.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the ChangeFeed class.
            </summary>
            <param name="enabled">Indicates whether change feed event logging
            is enabled for the Blob service.</param>
            <param name="retentionInDays">Indicates the duration of changeFeed
            retention in days. Minimum value is 1 day and maximum value is
            146000 days (400 years). A null value indicates an infinite
            retention of the change feed.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ChangeFeed.Enabled">
            <summary>
            Gets or sets indicates whether change feed event logging is enabled
            for the Blob service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ChangeFeed.RetentionInDays">
            <summary>
            Gets or sets indicates the duration of changeFeed retention in
            days. Minimum value is 1 day and maximum value is 146000 days (400
            years). A null value indicates an infinite retention of the change
            feed.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ChangeFeed.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult">
            <summary>
            The CheckNameAvailability operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.#ctor(System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.Reason},System.String)">
            <summary>
            Initializes a new instance of the CheckNameAvailabilityResult
            class.
            </summary>
            <param name="nameAvailable">Gets a boolean value that indicates
            whether the name is available for you to use. If true, the name is
            available. If false, the name has already been taken or is invalid
            and cannot be used.</param>
            <param name="reason">Gets the reason that a storage account name
            could not be used. The Reason element is only returned if
            NameAvailable is false. Possible values include:
            'AccountNameInvalid', 'AlreadyExists'</param>
            <param name="message">Gets an error message explaining the Reason
            value in more detail.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.NameAvailable">
            <summary>
            Gets a boolean value that indicates whether the name is available
            for you to use. If true, the name is available. If false, the name
            has already been taken or is invalid and cannot be used.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Reason">
            <summary>
            Gets the reason that a storage account name could not be used. The
            Reason element is only returned if NameAvailable is false. Possible
            values include: 'AccountNameInvalid', 'AlreadyExists'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CheckNameAvailabilityResult.Message">
            <summary>
            Gets an error message explaining the Reason value in more detail.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.CorsRule">
            <summary>
            Specifies a CORS rule for the Blob service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CorsRule.#ctor">
            <summary>
            Initializes a new instance of the CorsRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CorsRule.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Int32,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the CorsRule class.
            </summary>
            <param name="allowedOrigins">Required if CorsRule element is
            present. A list of origin domains that will be allowed via CORS, or
            "*" to allow all domains</param>
            <param name="allowedMethods">Required if CorsRule element is
            present. A list of HTTP methods that are allowed to be executed by
            the origin.</param>
            <param name="maxAgeInSeconds">Required if CorsRule element is
            present. The number of seconds that the client/browser should cache
            a preflight response.</param>
            <param name="exposedHeaders">Required if CorsRule element is
            present. A list of response headers to expose to CORS
            clients.</param>
            <param name="allowedHeaders">Required if CorsRule element is
            present. A list of headers allowed to be part of the cross-origin
            request.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CorsRule.AllowedOrigins">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            origin domains that will be allowed via CORS, or "*" to allow all
            domains
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CorsRule.AllowedMethods">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            HTTP methods that are allowed to be executed by the origin.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CorsRule.MaxAgeInSeconds">
            <summary>
            Gets or sets required if CorsRule element is present. The number of
            seconds that the client/browser should cache a preflight response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CorsRule.ExposedHeaders">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            response headers to expose to CORS clients.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CorsRule.AllowedHeaders">
            <summary>
            Gets or sets required if CorsRule element is present. A list of
            headers allowed to be part of the cross-origin request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CorsRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.CorsRules">
            <summary>
            Sets the CORS rules. You can include up to five CorsRule elements in
            the request.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CorsRules.#ctor">
            <summary>
            Initializes a new instance of the CorsRules class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CorsRules.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.CorsRule})">
            <summary>
            Initializes a new instance of the CorsRules class.
            </summary>
            <param name="corsRulesProperty">The List of CORS rules. You can
            include up to five CorsRule elements in the request. </param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CorsRules.CorsRulesProperty">
            <summary>
            Gets or sets the List of CORS rules. You can include up to five
            CorsRule elements in the request.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.CreatedByType">
            <summary>
            Defines values for CreatedByType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.CustomDomain">
            <summary>
            The custom domain assigned to this storage account. This can be set via
            Update.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CustomDomain.#ctor">
            <summary>
            Initializes a new instance of the CustomDomain class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CustomDomain.#ctor(System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the CustomDomain class.
            </summary>
            <param name="name">Gets or sets the custom domain name assigned to
            the storage account. Name is the CNAME source.</param>
            <param name="useSubDomainName">Indicates whether indirect CName
            validation is enabled. Default value is false. This should only be
            set on updates.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CustomDomain.Name">
            <summary>
            Gets or sets the custom domain name assigned to the storage
            account. Name is the CNAME source.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.CustomDomain.UseSubDomainName">
            <summary>
            Gets or sets indicates whether indirect CName validation is
            enabled. Default value is false. This should only be set on
            updates.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.CustomDomain.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DateAfterCreation">
            <summary>
            Object to define snapshot and version action conditions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.#ctor">
            <summary>
            Initializes a new instance of the DateAfterCreation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.#ctor(System.Double,System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the DateAfterCreation class.
            </summary>
            <param name="daysAfterCreationGreaterThan">Value indicating the age
            in days after creation</param>
            <param name="daysAfterLastTierChangeGreaterThan">Value indicating
            the age in days after last blob tier change time. This property is
            only applicable for tierToArchive actions and requires
            daysAfterCreationGreaterThan to be set for snapshots and blob
            version based actions. The blob will be archived if both the
            conditions are satisfied.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.DaysAfterCreationGreaterThan">
            <summary>
            Gets or sets value indicating the age in days after creation
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.DaysAfterLastTierChangeGreaterThan">
            <summary>
            Gets or sets value indicating the age in days after last blob tier
            change time. This property is only applicable for tierToArchive
            actions and requires daysAfterCreationGreaterThan to be set for
            snapshots and blob version based actions. The blob will be archived
            if both the conditions are satisfied.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DateAfterCreation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DateAfterModification">
            <summary>
            Object to define the base blob action conditions. Properties
            daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan
            and daysAfterCreationGreaterThan are mutually exclusive. The
            daysAfterLastTierChangeGreaterThan property is only applicable for
            tierToArchive actions which requires daysAfterModificationGreaterThan
            to be set, also it cannot be used in conjunction with
            daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DateAfterModification.#ctor">
            <summary>
            Initializes a new instance of the DateAfterModification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DateAfterModification.#ctor(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            Initializes a new instance of the DateAfterModification class.
            </summary>
            <param name="daysAfterModificationGreaterThan">Value indicating the
            age in days after last modification</param>
            <param name="daysAfterLastAccessTimeGreaterThan">Value indicating
            the age in days after last blob access. This property can only be
            used in conjunction with last access time tracking policy</param>
            <param name="daysAfterLastTierChangeGreaterThan">Value indicating
            the age in days after last blob tier change time. This property is
            only applicable for tierToArchive actions and requires
            daysAfterModificationGreaterThan to be set for baseBlobs based
            actions. The blob will be archived if both the conditions are
            satisfied.</param>
            <param name="daysAfterCreationGreaterThan">Value indicating the age
            in days after blob creation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DateAfterModification.DaysAfterModificationGreaterThan">
            <summary>
            Gets or sets value indicating the age in days after last
            modification
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DateAfterModification.DaysAfterLastAccessTimeGreaterThan">
            <summary>
            Gets or sets value indicating the age in days after last blob
            access. This property can only be used in conjunction with last
            access time tracking policy
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DateAfterModification.DaysAfterLastTierChangeGreaterThan">
            <summary>
            Gets or sets value indicating the age in days after last blob tier
            change time. This property is only applicable for tierToArchive
            actions and requires daysAfterModificationGreaterThan to be set for
            baseBlobs based actions. The blob will be archived if both the
            conditions are satisfied.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DateAfterModification.DaysAfterCreationGreaterThan">
            <summary>
            Gets or sets value indicating the age in days after blob creation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DateAfterModification.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DefaultAction">
            <summary>
            Defines values for DefaultAction.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DefaultSharePermission">
            <summary>
            Defines values for DefaultSharePermission.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DeletedAccount">
            <summary>
            Deleted storage account
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeletedAccount.#ctor">
            <summary>
            Initializes a new instance of the DeletedAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeletedAccount.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the DeletedAccount class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="storageAccountResourceId">Full resource id of the
            original storage account.</param>
            <param name="location">Location of the deleted account.</param>
            <param name="restoreReference">Can be used to attempt recovering
            this deleted account via PutStorageAccount API.</param>
            <param name="creationTime">Creation time of the deleted
            account.</param>
            <param name="deletionTime">Deletion time of the deleted
            account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedAccount.StorageAccountResourceId">
            <summary>
            Gets full resource id of the original storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedAccount.Location">
            <summary>
            Gets location of the deleted account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedAccount.RestoreReference">
            <summary>
            Gets can be used to attempt recovering this deleted account via
            PutStorageAccount API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedAccount.CreationTime">
            <summary>
            Gets creation time of the deleted account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedAccount.DeletionTime">
            <summary>
            Gets deletion time of the deleted account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DeletedShare">
            <summary>
            The deleted share to be restored.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeletedShare.#ctor">
            <summary>
            Initializes a new instance of the DeletedShare class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeletedShare.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the DeletedShare class.
            </summary>
            <param name="deletedShareName">Required. Identify the name of the
            deleted share that will be restored.</param>
            <param name="deletedShareVersion">Required. Identify the version of
            the deleted share that will be restored.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedShare.DeletedShareName">
            <summary>
            Gets or sets required. Identify the name of the deleted share that
            will be restored.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeletedShare.DeletedShareVersion">
            <summary>
            Gets or sets required. Identify the version of the deleted share
            that will be restored.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeletedShare.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy">
            <summary>
            The service properties for soft delete.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.#ctor">
            <summary>
            Initializes a new instance of the DeleteRetentionPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the DeleteRetentionPolicy class.
            </summary>
            <param name="enabled">Indicates whether DeleteRetentionPolicy is
            enabled.</param>
            <param name="days">Indicates the number of days that the deleted
            item should be retained. The minimum specified value can be 1 and
            the maximum value can be 365.</param>
            <param name="allowPermanentDelete">This property when set to true
            allows deletion of the soft deleted blob versions and snapshots.
            This property cannot be used blob restore policy. This property
            only applies to blob service and does not apply to containers or
            file share.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.Enabled">
            <summary>
            Gets or sets indicates whether DeleteRetentionPolicy is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.Days">
            <summary>
            Gets or sets indicates the number of days that the deleted item
            should be retained. The minimum specified value can be 1 and the
            maximum value can be 365.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.AllowPermanentDelete">
            <summary>
            Gets or sets this property when set to true allows deletion of the
            soft deleted blob versions and snapshots. This property cannot be
            used blob restore policy. This property only applies to blob
            service and does not apply to containers or file share.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Dimension">
            <summary>
            Dimension of blobs, possibly be blob type or access tier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Dimension.#ctor">
            <summary>
            Initializes a new instance of the Dimension class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Dimension.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the Dimension class.
            </summary>
            <param name="name">Display name of dimension.</param>
            <param name="displayName">Display name of dimension.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Dimension.Name">
            <summary>
            Gets or sets display name of dimension.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Dimension.DisplayName">
            <summary>
            Gets or sets display name of dimension.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DirectoryServiceOptions">
            <summary>
            Defines values for DirectoryServiceOptions.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.DnsEndpointType">
            <summary>
            Defines values for DnsEndpointType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EnabledProtocols">
            <summary>
            Defines values for EnabledProtocols.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Encryption">
            <summary>
            The encryption settings on the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Encryption.#ctor">
            <summary>
            Initializes a new instance of the Encryption class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Encryption.#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionServices,System.String,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.KeyVaultProperties,Microsoft.Azure.Management.Storage.Models.EncryptionIdentity)">
            <summary>
            Initializes a new instance of the Encryption class.
            </summary>
            <param name="services">List of services which support
            encryption.</param>
            <param name="keySource">The encryption keySource (provider).
            Possible values (case-insensitive):  Microsoft.Storage,
            Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
            'Microsoft.Keyvault'</param>
            <param name="requireInfrastructureEncryption">A boolean indicating
            whether or not the service applies a secondary layer of encryption
            with platform managed keys for data at rest.</param>
            <param name="keyVaultProperties">Properties provided by key
            vault.</param>
            <param name="encryptionIdentity">The identity to be used with
            service-side encryption at rest.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Encryption.Services">
            <summary>
            Gets or sets list of services which support encryption.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Encryption.KeySource">
            <summary>
            Gets or sets the encryption keySource (provider). Possible values
            (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault.
            Possible values include: 'Microsoft.Storage', 'Microsoft.Keyvault'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Encryption.RequireInfrastructureEncryption">
            <summary>
            Gets or sets a boolean indicating whether or not the service
            applies a secondary layer of encryption with platform managed keys
            for data at rest.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Encryption.KeyVaultProperties">
            <summary>
            Gets or sets properties provided by key vault.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Encryption.EncryptionIdentity">
            <summary>
            Gets or sets the identity to be used with service-side encryption
            at rest.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionIdentity">
            <summary>
            Encryption identity for the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionIdentity.#ctor">
            <summary>
            Initializes a new instance of the EncryptionIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the EncryptionIdentity class.
            </summary>
            <param name="encryptionUserAssignedIdentity">Resource identifier of
            the UserAssigned identity to be associated with server-side
            encryption on the storage account.</param>
            <param name="encryptionFederatedIdentityClientId">ClientId of the
            multi-tenant application to be used in conjunction with the
            user-assigned identity for cross-tenant customer-managed-keys
            server-side encryption on the storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionIdentity.EncryptionUserAssignedIdentity">
            <summary>
            Gets or sets resource identifier of the UserAssigned identity to be
            associated with server-side encryption on the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionIdentity.EncryptionFederatedIdentityClientId">
            <summary>
            Gets or sets clientId of the multi-tenant application to be used in
            conjunction with the user-assigned identity for cross-tenant
            customer-managed-keys server-side encryption on the storage
            account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionScope">
            <summary>
            The Encryption Scope resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionScope.#ctor">
            <summary>
            Initializes a new instance of the EncryptionScope class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionScope.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the EncryptionScope class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="source">The provider for the encryption scope.
            Possible values (case-insensitive):  Microsoft.Storage,
            Microsoft.KeyVault. Possible values include: 'Microsoft.Storage',
            'Microsoft.KeyVault'</param>
            <param name="state">The state of the encryption scope. Possible
            values (case-insensitive):  Enabled, Disabled. Possible values
            include: 'Enabled', 'Disabled'</param>
            <param name="creationTime">Gets the creation date and time of the
            encryption scope in UTC.</param>
            <param name="lastModifiedTime">Gets the last modification date and
            time of the encryption scope in UTC.</param>
            <param name="keyVaultProperties">The key vault properties for the
            encryption scope. This is a required field if encryption scope
            'source' attribute is set to 'Microsoft.KeyVault'.</param>
            <param name="requireInfrastructureEncryption">A boolean indicating
            whether or not the service applies a secondary layer of encryption
            with platform managed keys for data at rest.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScope.Source">
            <summary>
            Gets or sets the provider for the encryption scope. Possible values
            (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.
            Possible values include: 'Microsoft.Storage', 'Microsoft.KeyVault'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScope.State">
            <summary>
            Gets or sets the state of the encryption scope. Possible values
            (case-insensitive):  Enabled, Disabled. Possible values include:
            'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScope.CreationTime">
            <summary>
            Gets the creation date and time of the encryption scope in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScope.LastModifiedTime">
            <summary>
            Gets the last modification date and time of the encryption scope in
            UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScope.KeyVaultProperties">
            <summary>
            Gets or sets the key vault properties for the encryption scope.
            This is a required field if encryption scope 'source' attribute is
            set to 'Microsoft.KeyVault'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScope.RequireInfrastructureEncryption">
            <summary>
            Gets or sets a boolean indicating whether or not the service
            applies a secondary layer of encryption with platform managed keys
            for data at rest.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties">
            <summary>
            The key vault properties for the encryption scope. This is a required
            field if encryption scope 'source' attribute is set to
            'Microsoft.KeyVault'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties.#ctor">
            <summary>
            Initializes a new instance of the EncryptionScopeKeyVaultProperties
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties.#ctor(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the EncryptionScopeKeyVaultProperties
            class.
            </summary>
            <param name="keyUri">The object identifier for a key vault key
            object. When applied, the encryption scope will use the key
            referenced by the identifier to enable customer-managed key support
            on this encryption scope.</param>
            <param name="currentVersionedKeyIdentifier">The object identifier
            of the current versioned Key Vault Key in use.</param>
            <param name="lastKeyRotationTimestamp">Timestamp of last rotation
            of the Key Vault Key.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties.KeyUri">
            <summary>
            Gets or sets the object identifier for a key vault key object. When
            applied, the encryption scope will use the key referenced by the
            identifier to enable customer-managed key support on this
            encryption scope.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties.CurrentVersionedKeyIdentifier">
            <summary>
            Gets the object identifier of the current versioned Key Vault Key
            in use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionScopeKeyVaultProperties.LastKeyRotationTimestamp">
            <summary>
            Gets timestamp of last rotation of the Key Vault Key.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionScopeSource">
            <summary>
            Defines values for EncryptionScopeSource.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionScopeState">
            <summary>
            Defines values for EncryptionScopeState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionService">
            <summary>
            A service that allows server-side encryption to be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionService.#ctor">
            <summary>
            Initializes a new instance of the EncryptionService class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionService.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the EncryptionService class.
            </summary>
            <param name="enabled">A boolean indicating whether or not the
            service encrypts the data as it is stored. Encryption at rest is
            enabled by default today and cannot be disabled.</param>
            <param name="lastEnabledTime">Gets a rough estimate of the
            date/time when the encryption was last enabled by the user. Data is
            encrypted at rest by default today and cannot be disabled.</param>
            <param name="keyType">Encryption key type to be used for the
            encryption service. 'Account' key type implies that an
            account-scoped encryption key will be used. 'Service' key type
            implies that a default service key is used. Possible values
            include: 'Service', 'Account'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionService.Enabled">
            <summary>
            Gets or sets a boolean indicating whether or not the service
            encrypts the data as it is stored. Encryption at rest is enabled by
            default today and cannot be disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionService.LastEnabledTime">
            <summary>
            Gets a rough estimate of the date/time when the encryption was last
            enabled by the user. Data is encrypted at rest by default today and
            cannot be disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionService.KeyType">
            <summary>
            Gets or sets encryption key type to be used for the encryption
            service. 'Account' key type implies that an account-scoped
            encryption key will be used. 'Service' key type implies that a
            default service key is used. Possible values include: 'Service',
            'Account'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.EncryptionServices">
            <summary>
            A list of services that support encryption.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor">
            <summary>
            Initializes a new instance of the EncryptionServices class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.EncryptionServices.#ctor(Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService,Microsoft.Azure.Management.Storage.Models.EncryptionService)">
            <summary>
            Initializes a new instance of the EncryptionServices class.
            </summary>
            <param name="blob">The encryption function of the blob storage
            service.</param>
            <param name="file">The encryption function of the file storage
            service.</param>
            <param name="table">The encryption function of the table storage
            service.</param>
            <param name="queue">The encryption function of the queue storage
            service.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Blob">
            <summary>
            Gets or sets the encryption function of the blob storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.File">
            <summary>
            Gets or sets the encryption function of the file storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Table">
            <summary>
            Gets or sets the encryption function of the table storage service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.EncryptionServices.Queue">
            <summary>
            Gets or sets the encryption function of the queue storage service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Endpoints">
            <summary>
            The URIs that are used to perform a retrieval of a public blob, queue,
            table, web or dfs object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor">
            <summary>
            Initializes a new instance of the Endpoints class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Endpoints.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints,Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints)">
            <summary>
            Initializes a new instance of the Endpoints class.
            </summary>
            <param name="blob">Gets the blob endpoint.</param>
            <param name="queue">Gets the queue endpoint.</param>
            <param name="table">Gets the table endpoint.</param>
            <param name="file">Gets the file endpoint.</param>
            <param name="web">Gets the web endpoint.</param>
            <param name="dfs">Gets the dfs endpoint.</param>
            <param name="microsoftEndpoints">Gets the microsoft routing storage
            endpoints.</param>
            <param name="internetEndpoints">Gets the internet routing storage
            endpoints</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Blob">
            <summary>
            Gets the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Queue">
            <summary>
            Gets the queue endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Table">
            <summary>
            Gets the table endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.File">
            <summary>
            Gets the file endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Web">
            <summary>
            Gets the web endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.Dfs">
            <summary>
            Gets the dfs endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.MicrosoftEndpoints">
            <summary>
            Gets the microsoft routing storage endpoints.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Endpoints.InternetEndpoints">
            <summary>
            Gets the internet routing storage endpoints
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ErrorResponse">
            <summary>
            An error response from the storage resource provider.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponse.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponse.#ctor(Microsoft.Azure.Management.Storage.Models.ErrorResponseBody)">
            <summary>
            Initializes a new instance of the ErrorResponse class.
            </summary>
            <param name="error">Azure Storage Resource Provider error response
            body.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ErrorResponse.Error">
            <summary>
            Gets or sets azure Storage Resource Provider error response body.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseBody">
            <summary>
            Error response body contract.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseBody.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseBody.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ErrorResponseBody class.
            </summary>
            <param name="code">An identifier for the error. Codes are invariant
            and are intended to be consumed programmatically.</param>
            <param name="message">A message describing the error, intended to
            be suitable for display in a user interface.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseBody.Code">
            <summary>
            Gets or sets an identifier for the error. Codes are invariant and
            are intended to be consumed programmatically.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseBody.Message">
            <summary>
            Gets or sets a message describing the error, intended to be
            suitable for display in a user interface.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            <summary>
            Exception thrown for an invalid response with ErrorResponse
            information.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.Request">
            <summary>
            Gets information about the associated HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.Response">
            <summary>
            Gets information about the associated HTTP response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.Body">
            <summary>
            Gets or sets the body object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.#ctor">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ErrorResponseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ErrorResponseException class.
            </summary>
            <param name="message">The exception message.</param>
            <param name="innerException">Inner exception.</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ExtendedLocation">
            <summary>
            The complex type of the extended location.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ExtendedLocation.#ctor">
            <summary>
            Initializes a new instance of the ExtendedLocation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ExtendedLocation.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ExtendedLocation class.
            </summary>
            <param name="name">The name of the extended location.</param>
            <param name="type">The type of the extended location. Possible
            values include: 'EdgeZone'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ExtendedLocation.Name">
            <summary>
            Gets or sets the name of the extended location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ExtendedLocation.Type">
            <summary>
            Gets or sets the type of the extended location. Possible values
            include: 'EdgeZone'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ExtendedLocationTypes">
            <summary>
            Defines values for ExtendedLocationTypes.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileServiceItems.#ctor">
            <summary>
            Initializes a new instance of the FileServiceItems class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileServiceItems.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.FileServiceProperties})">
            <summary>
            Initializes a new instance of the FileServiceItems class.
            </summary>
            <param name="value">List of file services returned.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileServiceItems.Value">
            <summary>
            Gets list of file services returned.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.FileServiceProperties">
            <summary>
            The properties of File services in storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.#ctor">
            <summary>
            Initializes a new instance of the FileServiceProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,Microsoft.Azure.Management.Storage.Models.DeleteRetentionPolicy,Microsoft.Azure.Management.Storage.Models.ProtocolSettings,Microsoft.Azure.Management.Storage.Models.Sku)">
            <summary>
            Initializes a new instance of the FileServiceProperties class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="cors">Specifies CORS rules for the File service. You
            can include up to five CorsRule elements in the request. If no
            CorsRule elements are included in the request body, all CORS rules
            will be deleted, and CORS will be disabled for the File
            service.</param>
            <param name="shareDeleteRetentionPolicy">The file service
            properties for share soft delete.</param>
            <param name="protocolSettings">Protocol settings for file
            service</param>
            <param name="sku">Sku name and tier.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.Cors">
            <summary>
            Gets or sets specifies CORS rules for the File service. You can
            include up to five CorsRule elements in the request. If no CorsRule
            elements are included in the request body, all CORS rules will be
            deleted, and CORS will be disabled for the File service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.ShareDeleteRetentionPolicy">
            <summary>
            Gets or sets the file service properties for share soft delete.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.ProtocolSettings">
            <summary>
            Gets or sets protocol settings for file service
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.Sku">
            <summary>
            Gets sku name and tier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileServiceProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.FileShare">
            <summary>
            Properties of the file share, including Id, resource name, resource
            type, Etag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileShare.#ctor">
            <summary>
            Initializes a new instance of the FileShare class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileShare.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int64},System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.SignedIdentifier},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileShare class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="etag">Resource Etag.</param>
            <param name="lastModifiedTime">Returns the date and time the share
            was last modified.</param>
            <param name="metadata">A name-value pair to associate with the
            share as metadata.</param>
            <param name="shareQuota">The maximum size of the share, in
            gigabytes. Must be greater than 0, and less than or equal to 5TB
            (5120). For Large File Shares, the maximum size is 102400.</param>
            <param name="enabledProtocols">The authentication protocol that is
            used for the file share. Can only be specified when creating a
            share. Possible values include: 'SMB', 'NFS'</param>
            <param name="rootSquash">The property is for NFS share only. The
            default is NoRootSquash. Possible values include: 'NoRootSquash',
            'RootSquash', 'AllSquash'</param>
            <param name="version">The version of the share.</param>
            <param name="deleted">Indicates whether the share was
            deleted.</param>
            <param name="deletedTime">The deleted time if the share was
            deleted.</param>
            <param name="remainingRetentionDays">Remaining retention days for
            share that was soft deleted.</param>
            <param name="accessTier">Access tier for specific share. GpV2
            account can choose between TransactionOptimized (default), Hot, and
            Cool. FileStorage account can choose Premium. Possible values
            include: 'TransactionOptimized', 'Hot', 'Cool', 'Premium'</param>
            <param name="accessTierChangeTime">Indicates the last modification
            time for share access tier.</param>
            <param name="accessTierStatus">Indicates if there is a pending
            transition for access tier.</param>
            <param name="shareUsageBytes">The approximate size of the data
            stored on the share. Note that this value may not include all
            recently created or recently resized files.</param>
            <param name="leaseStatus">The lease status of the share. Possible
            values include: 'Locked', 'Unlocked'</param>
            <param name="leaseState">Lease state of the share. Possible values
            include: 'Available', 'Leased', 'Expired', 'Breaking',
            'Broken'</param>
            <param name="leaseDuration">Specifies whether the lease on a share
            is of infinite or fixed duration, only when the share is leased.
            Possible values include: 'Infinite', 'Fixed'</param>
            <param name="signedIdentifiers">List of stored access policies
            specified on the share.</param>
            <param name="snapshotTime">Creation time of share snapshot returned
            in the response of list shares with expand param
            "snapshots".</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.LastModifiedTime">
            <summary>
            Gets returns the date and time the share was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.Metadata">
            <summary>
            Gets or sets a name-value pair to associate with the share as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.ShareQuota">
            <summary>
            Gets or sets the maximum size of the share, in gigabytes. Must be
            greater than 0, and less than or equal to 5TB (5120). For Large
            File Shares, the maximum size is 102400.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.EnabledProtocols">
            <summary>
            Gets or sets the authentication protocol that is used for the file
            share. Can only be specified when creating a share. Possible values
            include: 'SMB', 'NFS'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.RootSquash">
            <summary>
            Gets or sets the property is for NFS share only. The default is
            NoRootSquash. Possible values include: 'NoRootSquash',
            'RootSquash', 'AllSquash'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.Version">
            <summary>
            Gets the version of the share.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.Deleted">
            <summary>
            Gets indicates whether the share was deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.DeletedTime">
            <summary>
            Gets the deleted time if the share was deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.RemainingRetentionDays">
            <summary>
            Gets remaining retention days for share that was soft deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.AccessTier">
            <summary>
            Gets or sets access tier for specific share. GpV2 account can
            choose between TransactionOptimized (default), Hot, and Cool.
            FileStorage account can choose Premium. Possible values include:
            'TransactionOptimized', 'Hot', 'Cool', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.AccessTierChangeTime">
            <summary>
            Gets indicates the last modification time for share access tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.AccessTierStatus">
            <summary>
            Gets indicates if there is a pending transition for access tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.ShareUsageBytes">
            <summary>
            Gets the approximate size of the data stored on the share. Note
            that this value may not include all recently created or recently
            resized files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.LeaseStatus">
            <summary>
            Gets the lease status of the share. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.LeaseState">
            <summary>
            Gets lease state of the share. Possible values include:
            'Available', 'Leased', 'Expired', 'Breaking', 'Broken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.LeaseDuration">
            <summary>
            Gets specifies whether the lease on a share is of infinite or fixed
            duration, only when the share is leased. Possible values include:
            'Infinite', 'Fixed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.SignedIdentifiers">
            <summary>
            Gets or sets list of stored access policies specified on the share.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShare.SnapshotTime">
            <summary>
            Gets creation time of share snapshot returned in the response of
            list shares with expand param "snapshots".
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileShare.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.FileShareItem">
            <summary>
            The file share properties be listed out.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileShareItem.#ctor">
            <summary>
            Initializes a new instance of the FileShareItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileShareItem.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int64},System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.SignedIdentifier},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the FileShareItem class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="etag">Resource Etag.</param>
            <param name="lastModifiedTime">Returns the date and time the share
            was last modified.</param>
            <param name="metadata">A name-value pair to associate with the
            share as metadata.</param>
            <param name="shareQuota">The maximum size of the share, in
            gigabytes. Must be greater than 0, and less than or equal to 5TB
            (5120). For Large File Shares, the maximum size is 102400.</param>
            <param name="enabledProtocols">The authentication protocol that is
            used for the file share. Can only be specified when creating a
            share. Possible values include: 'SMB', 'NFS'</param>
            <param name="rootSquash">The property is for NFS share only. The
            default is NoRootSquash. Possible values include: 'NoRootSquash',
            'RootSquash', 'AllSquash'</param>
            <param name="version">The version of the share.</param>
            <param name="deleted">Indicates whether the share was
            deleted.</param>
            <param name="deletedTime">The deleted time if the share was
            deleted.</param>
            <param name="remainingRetentionDays">Remaining retention days for
            share that was soft deleted.</param>
            <param name="accessTier">Access tier for specific share. GpV2
            account can choose between TransactionOptimized (default), Hot, and
            Cool. FileStorage account can choose Premium. Possible values
            include: 'TransactionOptimized', 'Hot', 'Cool', 'Premium'</param>
            <param name="accessTierChangeTime">Indicates the last modification
            time for share access tier.</param>
            <param name="accessTierStatus">Indicates if there is a pending
            transition for access tier.</param>
            <param name="shareUsageBytes">The approximate size of the data
            stored on the share. Note that this value may not include all
            recently created or recently resized files.</param>
            <param name="leaseStatus">The lease status of the share. Possible
            values include: 'Locked', 'Unlocked'</param>
            <param name="leaseState">Lease state of the share. Possible values
            include: 'Available', 'Leased', 'Expired', 'Breaking',
            'Broken'</param>
            <param name="leaseDuration">Specifies whether the lease on a share
            is of infinite or fixed duration, only when the share is leased.
            Possible values include: 'Infinite', 'Fixed'</param>
            <param name="signedIdentifiers">List of stored access policies
            specified on the share.</param>
            <param name="snapshotTime">Creation time of share snapshot returned
            in the response of list shares with expand param
            "snapshots".</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.LastModifiedTime">
            <summary>
            Gets returns the date and time the share was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.Metadata">
            <summary>
            Gets or sets a name-value pair to associate with the share as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.ShareQuota">
            <summary>
            Gets or sets the maximum size of the share, in gigabytes. Must be
            greater than 0, and less than or equal to 5TB (5120). For Large
            File Shares, the maximum size is 102400.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.EnabledProtocols">
            <summary>
            Gets or sets the authentication protocol that is used for the file
            share. Can only be specified when creating a share. Possible values
            include: 'SMB', 'NFS'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.RootSquash">
            <summary>
            Gets or sets the property is for NFS share only. The default is
            NoRootSquash. Possible values include: 'NoRootSquash',
            'RootSquash', 'AllSquash'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.Version">
            <summary>
            Gets the version of the share.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.Deleted">
            <summary>
            Gets indicates whether the share was deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.DeletedTime">
            <summary>
            Gets the deleted time if the share was deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.RemainingRetentionDays">
            <summary>
            Gets remaining retention days for share that was soft deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.AccessTier">
            <summary>
            Gets or sets access tier for specific share. GpV2 account can
            choose between TransactionOptimized (default), Hot, and Cool.
            FileStorage account can choose Premium. Possible values include:
            'TransactionOptimized', 'Hot', 'Cool', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.AccessTierChangeTime">
            <summary>
            Gets indicates the last modification time for share access tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.AccessTierStatus">
            <summary>
            Gets indicates if there is a pending transition for access tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.ShareUsageBytes">
            <summary>
            Gets the approximate size of the data stored on the share. Note
            that this value may not include all recently created or recently
            resized files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.LeaseStatus">
            <summary>
            Gets the lease status of the share. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.LeaseState">
            <summary>
            Gets lease state of the share. Possible values include:
            'Available', 'Leased', 'Expired', 'Breaking', 'Broken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.LeaseDuration">
            <summary>
            Gets specifies whether the lease on a share is of infinite or fixed
            duration, only when the share is leased. Possible values include:
            'Infinite', 'Fixed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.SignedIdentifiers">
            <summary>
            Gets or sets list of stored access policies specified on the share.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileShareItem.SnapshotTime">
            <summary>
            Gets creation time of share snapshot returned in the response of
            list shares with expand param "snapshots".
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileShareItem.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.FileSharesLeaseHeaders">
            <summary>
            Defines headers for Lease operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileSharesLeaseHeaders.#ctor">
            <summary>
            Initializes a new instance of the FileSharesLeaseHeaders class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.FileSharesLeaseHeaders.#ctor(System.String)">
            <summary>
            Initializes a new instance of the FileSharesLeaseHeaders class.
            </summary>
            <param name="eTag">The ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.FileSharesLeaseHeaders.ETag">
            <summary>
            Gets or sets the ETag HTTP response header. This is an opaque
            string. You can use it to detect whether the resource has changed
            between requests. In particular, you can pass the ETag to one of
            the If-Match or If-None-Match headers.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Format">
            <summary>
            Defines values for Format.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats">
            <summary>
            Statistics related to replication for storage account's Blob, Table,
            Queue and File services. It is only available when geo-redundant
            replication is enabled for the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.#ctor">
            <summary>
            Initializes a new instance of the GeoReplicationStats class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the GeoReplicationStats class.
            </summary>
            <param name="status">The status of the secondary location. Possible
            values are: - Live: Indicates that the secondary location is active
            and operational. - Bootstrap: Indicates initial synchronization
            from the primary location to the secondary location is in
            progress.This typically occurs when replication is first enabled. -
            Unavailable: Indicates that the secondary location is temporarily
            unavailable. Possible values include: 'Live', 'Bootstrap',
            'Unavailable'</param>
            <param name="lastSyncTime">All primary writes preceding this UTC
            date/time value are guaranteed to be available for read operations.
            Primary writes following this point in time may or may not be
            available for reads. Element may be default value if value of
            LastSyncTime is not available, this can happen if secondary is
            offline or we are in bootstrap.</param>
            <param name="canFailover">A boolean flag which indicates whether or
            not account failover is supported for the account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.Status">
            <summary>
            Gets the status of the secondary location. Possible values are: -
            Live: Indicates that the secondary location is active and
            operational. - Bootstrap: Indicates initial synchronization from
            the primary location to the secondary location is in progress.This
            typically occurs when replication is first enabled. - Unavailable:
            Indicates that the secondary location is temporarily unavailable.
            Possible values include: 'Live', 'Bootstrap', 'Unavailable'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.LastSyncTime">
            <summary>
            Gets all primary writes preceding this UTC date/time value are
            guaranteed to be available for read operations. Primary writes
            following this point in time may or may not be available for reads.
            Element may be default value if value of LastSyncTime is not
            available, this can happen if secondary is offline or we are in
            bootstrap.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.GeoReplicationStats.CanFailover">
            <summary>
            Gets a boolean flag which indicates whether or not account failover
            is supported for the account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.GeoReplicationStatus">
            <summary>
            Defines values for GeoReplicationStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.HttpProtocol">
            <summary>
            Defines values for HttpProtocol.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Identity">
            <summary>
            Identity for the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Identity.#ctor">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Identity.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Azure.Management.Storage.Models.UserAssignedIdentity})">
            <summary>
            Initializes a new instance of the Identity class.
            </summary>
            <param name="type">The identity type. Possible values include:
            'None', 'SystemAssigned', 'UserAssigned',
            'SystemAssigned,UserAssigned'</param>
            <param name="principalId">The principal ID of resource
            identity.</param>
            <param name="tenantId">The tenant ID of resource.</param>
            <param name="userAssignedIdentities">Gets or sets a list of key
            value pairs that describe the set of User Assigned identities that
            will be used with this storage account. The key is the ARM resource
            identifier of the identity. Only 1 User Assigned identity is
            permitted here.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Identity.PrincipalId">
            <summary>
            Gets the principal ID of resource identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Identity.TenantId">
            <summary>
            Gets the tenant ID of resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Identity.Type">
            <summary>
            Gets or sets the identity type. Possible values include: 'None',
            'SystemAssigned', 'UserAssigned', 'SystemAssigned,UserAssigned'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Identity.UserAssignedIdentities">
            <summary>
            Gets or sets a list of key value pairs that describe the set of
            User Assigned identities that will be used with this storage
            account. The key is the ARM resource identifier of the identity.
            Only 1 User Assigned identity is permitted here.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Identity.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.IdentityType">
            <summary>
            Defines values for IdentityType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy">
            <summary>
            The ImmutabilityPolicy property of a blob container, including Id,
            resource name, resource type, Etag.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.#ctor">
            <summary>
            Initializes a new instance of the ImmutabilityPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ImmutabilityPolicy class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="etag">Resource Etag.</param>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="state">The ImmutabilityPolicy state of a blob
            container, possible values include: Locked and Unlocked. Possible
            values include: 'Locked', 'Unlocked'</param>
            <param name="allowProtectedAppendWrites">This property can only be
            changed for unlocked time-based retention policies. When enabled,
            new blocks can be written to an append blob while maintaining
            immutability protection and compliance. Only new blocks can be
            added and any existing blocks cannot be modified or deleted. This
            property cannot be changed with ExtendImmutabilityPolicy
            API.</param>
            <param name="allowProtectedAppendWritesAll">This property can only
            be changed for unlocked time-based retention policies. When
            enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining immutability protection and compliance. Only new
            blocks can be added and any existing blocks cannot be modified or
            deleted. This property cannot be changed with
            ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and
            'allowProtectedAppendWritesAll' properties are mutually
            exclusive.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets or sets the immutability period for the blobs in the container
            since the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.State">
            <summary>
            Gets the ImmutabilityPolicy state of a blob container, possible
            values include: Locked and Unlocked. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.AllowProtectedAppendWrites">
            <summary>
            Gets or sets this property can only be changed for unlocked
            time-based retention policies. When enabled, new blocks can be
            written to an append blob while maintaining immutability protection
            and compliance. Only new blocks can be added and any existing
            blocks cannot be modified or deleted. This property cannot be
            changed with ExtendImmutabilityPolicy API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicy.AllowProtectedAppendWritesAll">
            <summary>
            Gets or sets this property can only be changed for unlocked
            time-based retention policies. When enabled, new blocks can be
            written to both 'Append and Bock Blobs' while maintaining
            immutability protection and compliance. Only new blocks can be
            added and any existing blocks cannot be modified or deleted. This
            property cannot be changed with ExtendImmutabilityPolicy API. The
            'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll'
            properties are mutually exclusive.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties">
            <summary>
            The properties of an ImmutabilityPolicy of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.#ctor">
            <summary>
            Initializes a new instance of the ImmutabilityPolicyProperties
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.#ctor(System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty})">
            <summary>
            Initializes a new instance of the ImmutabilityPolicyProperties
            class.
            </summary>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="state">The ImmutabilityPolicy state of a blob
            container, possible values include: Locked and Unlocked. Possible
            values include: 'Locked', 'Unlocked'</param>
            <param name="allowProtectedAppendWrites">This property can only be
            changed for unlocked time-based retention policies. When enabled,
            new blocks can be written to an append blob while maintaining
            immutability protection and compliance. Only new blocks can be
            added and any existing blocks cannot be modified or deleted. This
            property cannot be changed with ExtendImmutabilityPolicy
            API.</param>
            <param name="allowProtectedAppendWritesAll">This property can only
            be changed for unlocked time-based retention policies. When
            enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining immutability protection and compliance. Only new
            blocks can be added and any existing blocks cannot be modified or
            deleted. This property cannot be changed with
            ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and
            'allowProtectedAppendWritesAll' properties are mutually
            exclusive.</param>
            <param name="etag">ImmutabilityPolicy Etag.</param>
            <param name="updateHistory">The ImmutabilityPolicy update history
            of the blob container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets or sets the immutability period for the blobs in the container
            since the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.State">
            <summary>
            Gets the ImmutabilityPolicy state of a blob container, possible
            values include: Locked and Unlocked. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.AllowProtectedAppendWrites">
            <summary>
            Gets or sets this property can only be changed for unlocked
            time-based retention policies. When enabled, new blocks can be
            written to an append blob while maintaining immutability protection
            and compliance. Only new blocks can be added and any existing
            blocks cannot be modified or deleted. This property cannot be
            changed with ExtendImmutabilityPolicy API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.AllowProtectedAppendWritesAll">
            <summary>
            Gets or sets this property can only be changed for unlocked
            time-based retention policies. When enabled, new blocks can be
            written to both 'Append and Bock Blobs' while maintaining
            immutability protection and compliance. Only new blocks can be
            added and any existing blocks cannot be modified or deleted. This
            property cannot be changed with ExtendImmutabilityPolicy API. The
            'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll'
            properties are mutually exclusive.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.Etag">
            <summary>
            Gets immutabilityPolicy Etag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties.UpdateHistory">
            <summary>
            Gets the ImmutabilityPolicy update history of the blob container.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyState">
            <summary>
            Defines values for ImmutabilityPolicyState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyUpdateType">
            <summary>
            Defines values for ImmutabilityPolicyUpdateType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount">
            <summary>
            This property enables and defines account-level immutability. Enabling
            the feature auto-enables Blob Versioning.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount.#ctor">
            <summary>
            Initializes a new instance of the ImmutableStorageAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount.#ctor(System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.AccountImmutabilityPolicyProperties)">
            <summary>
            Initializes a new instance of the ImmutableStorageAccount class.
            </summary>
            <param name="enabled">A boolean flag which enables account-level
            immutability. All the containers under such an account have
            object-level immutability enabled by default.</param>
            <param name="immutabilityPolicy">Specifies the default
            account-level immutability policy which is inherited and applied to
            objects that do not possess an explicit immutability policy at the
            object level. The object-level immutability policy has higher
            precedence than the container-level immutability policy, which has
            a higher precedence than the account-level immutability
            policy.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount.Enabled">
            <summary>
            Gets or sets a boolean flag which enables account-level
            immutability. All the containers under such an account have
            object-level immutability enabled by default.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount.ImmutabilityPolicy">
            <summary>
            Gets or sets specifies the default account-level immutability
            policy which is inherited and applied to objects that do not
            possess an explicit immutability policy at the object level. The
            object-level immutability policy has higher precedence than the
            container-level immutability policy, which has a higher precedence
            than the account-level immutability policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning">
            <summary>
            Object level immutability properties of the container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning.#ctor">
            <summary>
            Initializes a new instance of the ImmutableStorageWithVersioning
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.String)">
            <summary>
            Initializes a new instance of the ImmutableStorageWithVersioning
            class.
            </summary>
            <param name="enabled">This is an immutable property, when set to
            true it enables object level immutability at the container
            level.</param>
            <param name="timeStamp">Returns the date and time the object level
            immutability was enabled.</param>
            <param name="migrationState">This property denotes the container
            level immutability to object level immutability migration state.
            Possible values include: 'InProgress', 'Completed'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning.Enabled">
            <summary>
            Gets or sets this is an immutable property, when set to true it
            enables object level immutability at the container level.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning.TimeStamp">
            <summary>
            Gets returns the date and time the object level immutability was
            enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning.MigrationState">
            <summary>
            Gets this property denotes the container level immutability to
            object level immutability migration state. Possible values include:
            'InProgress', 'Completed'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.IPRule">
            <summary>
            IP rule with specific IP or IP range in CIDR format.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.IPRule.#ctor">
            <summary>
            Initializes a new instance of the IPRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.IPRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.Action})">
            <summary>
            Initializes a new instance of the IPRule class.
            </summary>
            <param name="iPAddressOrRange">Specifies the IP or IP range in CIDR
            format. Only IPV4 address is allowed.</param>
            <param name="action">The action of IP ACL rule. Possible values
            include: 'Allow'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.IPRule.IPAddressOrRange">
            <summary>
            Gets or sets specifies the IP or IP range in CIDR format. Only IPV4
            address is allowed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.IPRule.Action">
            <summary>
            Gets or sets the action of IP ACL rule. Possible values include:
            'Allow'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.IPRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.KeyCreationTime">
            <summary>
            Storage account keys creation time.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyCreationTime.#ctor">
            <summary>
            Initializes a new instance of the KeyCreationTime class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyCreationTime.#ctor(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the KeyCreationTime class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyCreationTime.Key1">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyCreationTime.Key2">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.KeyPermission">
            <summary>
            Defines values for KeyPermission.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.KeyPolicy">
            <summary>
            KeyPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyPolicy.#ctor">
            <summary>
            Initializes a new instance of the KeyPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyPolicy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the KeyPolicy class.
            </summary>
            <param name="keyExpirationPeriodInDays">The key expiration period
            in days.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyPolicy.KeyExpirationPeriodInDays">
            <summary>
            Gets or sets the key expiration period in days.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.KeySource">
            <summary>
            Defines values for KeySource.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.KeyType">
            <summary>
            Defines values for KeyType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties">
            <summary>
            Properties of key vault.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.#ctor">
            <summary>
            Initializes a new instance of the KeyVaultProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the KeyVaultProperties class.
            </summary>
            <param name="keyName">The name of KeyVault key.</param>
            <param name="keyVersion">The version of KeyVault key.</param>
            <param name="keyVaultUri">The Uri of KeyVault.</param>
            <param name="currentVersionedKeyIdentifier">The object identifier
            of the current versioned Key Vault Key in use.</param>
            <param name="lastKeyRotationTimestamp">Timestamp of last rotation
            of the Key Vault Key.</param>
            <param name="currentVersionedKeyExpirationTimestamp">This is a read
            only property that represents the expiration time of the current
            version of the customer managed key used for encryption.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.KeyName">
            <summary>
            Gets or sets the name of KeyVault key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.KeyVersion">
            <summary>
            Gets or sets the version of KeyVault key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.KeyVaultUri">
            <summary>
            Gets or sets the Uri of KeyVault.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.CurrentVersionedKeyIdentifier">
            <summary>
            Gets the object identifier of the current versioned Key Vault Key
            in use.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.LastKeyRotationTimestamp">
            <summary>
            Gets timestamp of last rotation of the Key Vault Key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.KeyVaultProperties.CurrentVersionedKeyExpirationTimestamp">
            <summary>
            Gets this is a read only property that represents the expiration
            time of the current version of the customer managed key used for
            encryption.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Kind">
            <summary>
            Defines values for Kind.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LargeFileSharesState">
            <summary>
            Defines values for LargeFileSharesState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy">
            <summary>
            The blob service properties for Last access time based tracking policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.#ctor">
            <summary>
            Initializes a new instance of the LastAccessTimeTrackingPolicy
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.#ctor(System.Boolean,System.String,System.Nullable{System.Int32},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the LastAccessTimeTrackingPolicy
            class.
            </summary>
            <param name="enable">When set to true last access time based
            tracking is enabled.</param>
            <param name="name">Name of the policy. The valid value is
            AccessTimeTracking. This field is currently read only. Possible
            values include: 'AccessTimeTracking'</param>
            <param name="trackingGranularityInDays">The field specifies blob
            object tracking granularity in days, typically how often the blob
            object should be tracked.This field is currently read only with
            value as 1</param>
            <param name="blobType">An array of predefined supported blob types.
            Only blockBlob is the supported value. This field is currently read
            only</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.Enable">
            <summary>
            Gets or sets when set to true last access time based tracking is
            enabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.Name">
            <summary>
            Gets or sets name of the policy. The valid value is
            AccessTimeTracking. This field is currently read only. Possible
            values include: 'AccessTimeTracking'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.TrackingGranularityInDays">
            <summary>
            Gets or sets the field specifies blob object tracking granularity
            in days, typically how often the blob object should be tracked.This
            field is currently read only with value as 1
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.BlobType">
            <summary>
            Gets or sets an array of predefined supported blob types. Only
            blockBlob is the supported value. This field is currently read only
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LastAccessTimeTrackingPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest">
            <summary>
            Lease Container request schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.#ctor">
            <summary>
            Initializes a new instance of the LeaseContainerRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the LeaseContainerRequest class.
            </summary>
            <param name="action">Specifies the lease action. Can be one of the
            available actions. Possible values include: 'Acquire', 'Renew',
            'Change', 'Release', 'Break'</param>
            <param name="leaseId">Identifies the lease. Can be specified in any
            valid GUID string format.</param>
            <param name="breakPeriod">Optional. For a break action, proposed
            duration the lease should continue before it is broken, in seconds,
            between 0 and 60.</param>
            <param name="leaseDuration">Required for acquire. Specifies the
            duration of the lease, in seconds, or negative one (-1) for a lease
            that never expires.</param>
            <param name="proposedLeaseId">Optional for acquire, required for
            change. Proposed lease ID, in a GUID string format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.Action">
            <summary>
            Gets or sets specifies the lease action. Can be one of the
            available actions. Possible values include: 'Acquire', 'Renew',
            'Change', 'Release', 'Break'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.LeaseId">
            <summary>
            Gets or sets identifies the lease. Can be specified in any valid
            GUID string format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.BreakPeriod">
            <summary>
            Gets or sets optional. For a break action, proposed duration the
            lease should continue before it is broken, in seconds, between 0
            and 60.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.LeaseDuration">
            <summary>
            Gets or sets required for acquire. Specifies the duration of the
            lease, in seconds, or negative one (-1) for a lease that never
            expires.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.ProposedLeaseId">
            <summary>
            Gets or sets optional for acquire, required for change. Proposed
            lease ID, in a GUID string format.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseContainerRequestAction">
            <summary>
            Defines values for LeaseContainerRequestAction.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse">
            <summary>
            Lease Container response schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.#ctor">
            <summary>
            Initializes a new instance of the LeaseContainerResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the LeaseContainerResponse class.
            </summary>
            <param name="leaseId">Returned unique lease ID that must be
            included with any request to delete the container, or to renew,
            change, or release the lease.</param>
            <param name="leaseTimeSeconds">Approximate time remaining in the
            lease period, in seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.LeaseId">
            <summary>
            Gets or sets returned unique lease ID that must be included with
            any request to delete the container, or to renew, change, or
            release the lease.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseContainerResponse.LeaseTimeSeconds">
            <summary>
            Gets or sets approximate time remaining in the lease period, in
            seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseDuration">
            <summary>
            Defines values for LeaseDuration.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseShareAction">
            <summary>
            Defines values for LeaseShareAction.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest">
            <summary>
            Lease Share request schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.#ctor">
            <summary>
            Initializes a new instance of the LeaseShareRequest class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Initializes a new instance of the LeaseShareRequest class.
            </summary>
            <param name="action">Specifies the lease action. Can be one of the
            available actions. Possible values include: 'Acquire', 'Renew',
            'Change', 'Release', 'Break'</param>
            <param name="leaseId">Identifies the lease. Can be specified in any
            valid GUID string format.</param>
            <param name="breakPeriod">Optional. For a break action, proposed
            duration the lease should continue before it is broken, in seconds,
            between 0 and 60.</param>
            <param name="leaseDuration">Required for acquire. Specifies the
            duration of the lease, in seconds, or negative one (-1) for a lease
            that never expires.</param>
            <param name="proposedLeaseId">Optional for acquire, required for
            change. Proposed lease ID, in a GUID string format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.Action">
            <summary>
            Gets or sets specifies the lease action. Can be one of the
            available actions. Possible values include: 'Acquire', 'Renew',
            'Change', 'Release', 'Break'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.LeaseId">
            <summary>
            Gets or sets identifies the lease. Can be specified in any valid
            GUID string format.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.BreakPeriod">
            <summary>
            Gets or sets optional. For a break action, proposed duration the
            lease should continue before it is broken, in seconds, between 0
            and 60.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.LeaseDuration">
            <summary>
            Gets or sets required for acquire. Specifies the duration of the
            lease, in seconds, or negative one (-1) for a lease that never
            expires.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.ProposedLeaseId">
            <summary>
            Gets or sets optional for acquire, required for change. Proposed
            lease ID, in a GUID string format.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseShareRequest.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseShareResponse">
            <summary>
            Lease Share response schema.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseShareResponse.#ctor">
            <summary>
            Initializes a new instance of the LeaseShareResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LeaseShareResponse.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the LeaseShareResponse class.
            </summary>
            <param name="leaseId">Returned unique lease ID that must be
            included with any request to delete the share, or to renew, change,
            or release the lease.</param>
            <param name="leaseTimeSeconds">Approximate time remaining in the
            lease period, in seconds.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareResponse.LeaseId">
            <summary>
            Gets or sets returned unique lease ID that must be included with
            any request to delete the share, or to renew, change, or release
            the lease.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LeaseShareResponse.LeaseTimeSeconds">
            <summary>
            Gets or sets approximate time remaining in the lease period, in
            seconds.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseState">
            <summary>
            Defines values for LeaseState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LeaseStatus">
            <summary>
            Defines values for LeaseStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LegalHold">
            <summary>
            The LegalHold property of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LegalHold.#ctor">
            <summary>
            Initializes a new instance of the LegalHold class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LegalHold.#ctor(System.Collections.Generic.IList{System.String},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the LegalHold class.
            </summary>
            <param name="tags">Each tag should be 3 to 23 alphanumeric
            characters and is normalized to lower case at SRP.</param>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="allowProtectedAppendWritesAll">When enabled, new
            blocks can be written to both 'Append and Bock Blobs' while
            maintaining legal hold protection and compliance. Only new blocks
            can be added and any existing blocks cannot be modified or
            deleted.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LegalHold.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LegalHold.Tags">
            <summary>
            Gets or sets each tag should be 3 to 23 alphanumeric characters and
            is normalized to lower case at SRP.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LegalHold.AllowProtectedAppendWritesAll">
            <summary>
            Gets or sets when enabled, new blocks can be written to both
            'Append and Bock Blobs' while maintaining legal hold protection and
            compliance. Only new blocks can be added and any existing blocks
            cannot be modified or deleted.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LegalHold.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties">
            <summary>
            The LegalHold property of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.#ctor">
            <summary>
            Initializes a new instance of the LegalHoldProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TagProperty},Microsoft.Azure.Management.Storage.Models.ProtectedAppendWritesHistory)">
            <summary>
            Initializes a new instance of the LegalHoldProperties class.
            </summary>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="tags">The list of LegalHold tags of a blob
            container.</param>
            <param name="protectedAppendWritesHistory">Protected append blob
            writes history.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.Tags">
            <summary>
            Gets or sets the list of LegalHold tags of a blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LegalHoldProperties.ProtectedAppendWritesHistory">
            <summary>
            Gets or sets protected append blob writes history.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse">
            <summary>
            The List SAS credentials operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse.#ctor">
            <summary>
            Initializes a new instance of the ListAccountSasResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListAccountSasResponse class.
            </summary>
            <param name="accountSasToken">List SAS credentials of storage
            account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListAccountSasResponse.AccountSasToken">
            <summary>
            Gets list SAS credentials of storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ListContainerItem">
            <summary>
            The blob container properties be listed out.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListContainerItem.#ctor">
            <summary>
            Initializes a new instance of the ListContainerItem class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListContainerItem.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.Azure.Management.Storage.Models.PublicAccess},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.ImmutabilityPolicyProperties,Microsoft.Azure.Management.Storage.Models.LegalHoldProperties,System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.ImmutableStorageWithVersioning,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ListContainerItem class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="etag">Resource Etag.</param>
            <param name="version">The version of the deleted blob
            container.</param>
            <param name="deleted">Indicates whether the blob container was
            deleted.</param>
            <param name="deletedTime">Blob container deletion time.</param>
            <param name="remainingRetentionDays">Remaining retention days for
            soft deleted blob container.</param>
            <param name="defaultEncryptionScope">Default the container to use
            specified encryption scope for all writes.</param>
            <param name="denyEncryptionScopeOverride">Block override of
            encryption scope from the container default.</param>
            <param name="publicAccess">Specifies whether data in the container
            may be accessed publicly and the level of access. Possible values
            include: 'Container', 'Blob', 'None'</param>
            <param name="lastModifiedTime">Returns the date and time the
            container was last modified.</param>
            <param name="leaseStatus">The lease status of the container.
            Possible values include: 'Locked', 'Unlocked'</param>
            <param name="leaseState">Lease state of the container. Possible
            values include: 'Available', 'Leased', 'Expired', 'Breaking',
            'Broken'</param>
            <param name="leaseDuration">Specifies whether the lease on a
            container is of infinite or fixed duration, only when the container
            is leased. Possible values include: 'Infinite', 'Fixed'</param>
            <param name="metadata">A name-value pair to associate with the
            container as metadata.</param>
            <param name="immutabilityPolicy">The ImmutabilityPolicy property of
            the container.</param>
            <param name="legalHold">The LegalHold property of the
            container.</param>
            <param name="hasLegalHold">The hasLegalHold public property is set
            to true by SRP if there are at least one existing tag. The
            hasLegalHold public property is set to false by SRP if all existing
            legal hold tags are cleared out. There can be a maximum of 1000
            blob containers with hasLegalHold=true for a given account.</param>
            <param name="hasImmutabilityPolicy">The hasImmutabilityPolicy
            public property is set to true by SRP if ImmutabilityPolicy has
            been created for this container. The hasImmutabilityPolicy public
            property is set to false by SRP if ImmutabilityPolicy has not been
            created for this container.</param>
            <param name="immutableStorageWithVersioning">The object level
            immutability property of the container. The property is immutable
            and can only be set to true at the container creation time.
            Existing containers must undergo a migration process.</param>
            <param name="enableNfsV3RootSquash">Enable NFSv3 root squash on
            blob container.</param>
            <param name="enableNfsV3AllSquash">Enable NFSv3 all squash on blob
            container.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.Version">
            <summary>
            Gets the version of the deleted blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.Deleted">
            <summary>
            Gets indicates whether the blob container was deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.DeletedTime">
            <summary>
            Gets blob container deletion time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.RemainingRetentionDays">
            <summary>
            Gets remaining retention days for soft deleted blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.DefaultEncryptionScope">
            <summary>
            Gets or sets default the container to use specified encryption
            scope for all writes.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.DenyEncryptionScopeOverride">
            <summary>
            Gets or sets block override of encryption scope from the container
            default.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.PublicAccess">
            <summary>
            Gets or sets specifies whether data in the container may be
            accessed publicly and the level of access. Possible values include:
            'Container', 'Blob', 'None'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LastModifiedTime">
            <summary>
            Gets returns the date and time the container was last modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LeaseStatus">
            <summary>
            Gets the lease status of the container. Possible values include:
            'Locked', 'Unlocked'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LeaseState">
            <summary>
            Gets lease state of the container. Possible values include:
            'Available', 'Leased', 'Expired', 'Breaking', 'Broken'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LeaseDuration">
            <summary>
            Gets specifies whether the lease on a container is of infinite or
            fixed duration, only when the container is leased. Possible values
            include: 'Infinite', 'Fixed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.Metadata">
            <summary>
            Gets or sets a name-value pair to associate with the container as
            metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.ImmutabilityPolicy">
            <summary>
            Gets the ImmutabilityPolicy property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.LegalHold">
            <summary>
            Gets the LegalHold property of the container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.HasLegalHold">
            <summary>
            Gets the hasLegalHold public property is set to true by SRP if
            there are at least one existing tag. The hasLegalHold public
            property is set to false by SRP if all existing legal hold tags are
            cleared out. There can be a maximum of 1000 blob containers with
            hasLegalHold=true for a given account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.HasImmutabilityPolicy">
            <summary>
            Gets the hasImmutabilityPolicy public property is set to true by
            SRP if ImmutabilityPolicy has been created for this container. The
            hasImmutabilityPolicy public property is set to false by SRP if
            ImmutabilityPolicy has not been created for this container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.ImmutableStorageWithVersioning">
            <summary>
            Gets or sets the object level immutability property of the
            container. The property is immutable and can only be set to true at
            the container creation time. Existing containers must undergo a
            migration process.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.EnableNfsV3RootSquash">
            <summary>
            Gets or sets enable NFSv3 root squash on blob container.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListContainerItem.EnableNfsV3AllSquash">
            <summary>
            Gets or sets enable NFSv3 all squash on blob container.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ListContainersInclude">
            <summary>
            Defines values for ListContainersInclude.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ListKeyExpand">
            <summary>
            Defines values for ListKeyExpand.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListQueue.#ctor">
            <summary>
            Initializes a new instance of the ListQueue class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListQueue.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the ListQueue class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="metadata">A name-value pair that represents queue
            metadata.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListQueue.Metadata">
            <summary>
            Gets or sets a name-value pair that represents queue metadata.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListQueueServices.#ctor">
            <summary>
            Initializes a new instance of the ListQueueServices class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListQueueServices.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.QueueServiceProperties})">
            <summary>
            Initializes a new instance of the ListQueueServices class.
            </summary>
            <param name="value">List of queue services returned.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListQueueServices.Value">
            <summary>
            Gets list of queue services returned.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse">
            <summary>
            The List service SAS credentials operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse.#ctor">
            <summary>
            Initializes a new instance of the ListServiceSasResponse class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ListServiceSasResponse class.
            </summary>
            <param name="serviceSasToken">List service SAS credentials of
            specific resource.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListServiceSasResponse.ServiceSasToken">
            <summary>
            Gets list service SAS credentials of specific resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListTableServices.#ctor">
            <summary>
            Initializes a new instance of the ListTableServices class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ListTableServices.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableServiceProperties})">
            <summary>
            Initializes a new instance of the ListTableServices class.
            </summary>
            <param name="value">List of table services returned.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ListTableServices.Value">
            <summary>
            Gets list of table services returned.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LocalUser">
            <summary>
            The local user associated with the storage accounts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LocalUser.#ctor">
            <summary>
            Initializes a new instance of the LocalUser class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LocalUser.#ctor(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.PermissionScope},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.SshPublicKey},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.SystemData)">
            <summary>
            Initializes a new instance of the LocalUser class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="permissionScopes">The permission scopes of the local
            user.</param>
            <param name="homeDirectory">Optional, local user home
            directory.</param>
            <param name="sid">A unique Security Identifier that is generated by
            the server.</param>
            <param name="hasSharedKey">Indicates whether shared key exists. Set
            it to false to remove existing shared key.</param>
            <param name="hasSshKey">Indicates whether ssh key exists. Set it to
            false to remove existing SSH key.</param>
            <param name="hasSshPassword">Indicates whether ssh password exists.
            Set it to false to remove existing SSH password.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.PermissionScopes">
            <summary>
            Gets or sets the permission scopes of the local user.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.HomeDirectory">
            <summary>
            Gets or sets optional, local user home directory.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.SshAuthorizedKeys">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.Sid">
            <summary>
            Gets a unique Security Identifier that is generated by the server.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.HasSharedKey">
            <summary>
            Gets or sets indicates whether shared key exists. Set it to false
            to remove existing shared key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.HasSshKey">
            <summary>
            Gets or sets indicates whether ssh key exists. Set it to false to
            remove existing SSH key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.HasSshPassword">
            <summary>
            Gets or sets indicates whether ssh password exists. Set it to false
            to remove existing SSH password.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUser.SystemData">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LocalUserKeys">
            <summary>
            The Storage Account Local User keys.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LocalUserKeys.#ctor">
            <summary>
            Initializes a new instance of the LocalUserKeys class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LocalUserKeys.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.SshPublicKey},System.String)">
            <summary>
            Initializes a new instance of the LocalUserKeys class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUserKeys.SshAuthorizedKeys">
            <summary>
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUserKeys.SharedKey">
            <summary>
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.LocalUserRegeneratePasswordResult">
            <summary>
            The secrets of Storage Account Local User.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LocalUserRegeneratePasswordResult.#ctor">
            <summary>
            Initializes a new instance of the LocalUserRegeneratePasswordResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.LocalUserRegeneratePasswordResult.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LocalUserRegeneratePasswordResult
            class.
            </summary>
            <param name="sshPassword">Auto generated password by the server for
            SSH authentication if hasSshPassword is set to true on the creation
            of local user.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.LocalUserRegeneratePasswordResult.SshPassword">
            <summary>
            Gets auto generated password by the server for SSH authentication
            if hasSshPassword is set to true on the creation of local user.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicy">
            <summary>
            The Get Storage Account ManagementPolicies operation response.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.#ctor(Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ManagementPolicy class.
            </summary>
            <param name="policy">The Storage Account ManagementPolicy, in JSON
            format. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.</param>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="lastModifiedTime">Returns the date and time the
            ManagementPolicies was last modified.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.LastModifiedTime">
            <summary>
            Gets returns the date and time the ManagementPolicies was last
            modified.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.Policy">
            <summary>
            Gets or sets the Storage Account ManagementPolicy, in JSON format.
            See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction">
            <summary>
            Actions are applied to the filtered blobs when the execution condition
            is met.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyAction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.#ctor(Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob,Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot,Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion)">
            <summary>
            Initializes a new instance of the ManagementPolicyAction class.
            </summary>
            <param name="baseBlob">The management policy action for base
            blob</param>
            <param name="snapshot">The management policy action for
            snapshot</param>
            <param name="version">The management policy action for
            version</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.BaseBlob">
            <summary>
            Gets or sets the management policy action for base blob
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.Snapshot">
            <summary>
            Gets or sets the management policy action for snapshot
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.Version">
            <summary>
            Gets or sets the management policy action for version
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob">
            <summary>
            Management policy action for base blob.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyBaseBlob class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.#ctor(Microsoft.Azure.Management.Storage.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Models.DateAfterModification,Microsoft.Azure.Management.Storage.Models.DateAfterModification,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ManagementPolicyBaseBlob class.
            </summary>
            <param name="tierToCool">The function to tier blobs to cool
            storage. Support blobs currently at Hot tier</param>
            <param name="tierToArchive">The function to tier blobs to archive
            storage. Support blobs currently at Hot or Cool tier</param>
            <param name="delete">The function to delete the blob</param>
            <param name="enableAutoTierToHotFromCool">This property enables
            auto tiering of a blob from cool to hot on a blob access. This
            property requires
            tierToCool.daysAfterLastAccessTimeGreaterThan.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.TierToCool">
            <summary>
            Gets or sets the function to tier blobs to cool storage. Support
            blobs currently at Hot tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.TierToArchive">
            <summary>
            Gets or sets the function to tier blobs to archive storage. Support
            blobs currently at Hot or Cool tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.Delete">
            <summary>
            Gets or sets the function to delete the blob
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.EnableAutoTierToHotFromCool">
            <summary>
            Gets or sets this property enables auto tiering of a blob from cool
            to hot on a blob access. This property requires
            tierToCool.daysAfterLastAccessTimeGreaterThan.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyBaseBlob.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition">
            <summary>
            An object that defines the Lifecycle rule. Each definition is made up
            with a filters set and an actions set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyDefinition class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.#ctor(Microsoft.Azure.Management.Storage.Models.ManagementPolicyAction,Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter)">
            <summary>
            Initializes a new instance of the ManagementPolicyDefinition class.
            </summary>
            <param name="actions">An object that defines the action
            set.</param>
            <param name="filters">An object that defines the filter
            set.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.Actions">
            <summary>
            Gets or sets an object that defines the action set.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.Filters">
            <summary>
            Gets or sets an object that defines the filter set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter">
            <summary>
            Filters limit rule actions to a subset of blobs within the storage
            account. If multiple filters are defined, a logical AND is performed on
            all filters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TagFilter})">
            <summary>
            Initializes a new instance of the ManagementPolicyFilter class.
            </summary>
            <param name="blobTypes">An array of predefined enum values.
            Currently blockBlob supports all tiering and delete actions. Only
            delete actions are supported for appendBlob.</param>
            <param name="prefixMatch">An array of strings for prefixes to be
            match.</param>
            <param name="blobIndexMatch">An array of blob index tag based
            filters, there can be at most 10 tag filters</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.PrefixMatch">
            <summary>
            Gets or sets an array of strings for prefixes to be match.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.BlobTypes">
            <summary>
            Gets or sets an array of predefined enum values. Currently
            blockBlob supports all tiering and delete actions. Only delete
            actions are supported for appendBlob.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.BlobIndexMatch">
            <summary>
            Gets or sets an array of blob index tag based filters, there can be
            at most 10 tag filters
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule">
            <summary>
            An object that wraps the Lifecycle rule. Each rule is uniquely defined
            by name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.ManagementPolicyDefinition,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the ManagementPolicyRule class.
            </summary>
            <param name="name">A rule name can contain any combination of alpha
            numeric characters. Rule name is case-sensitive. It must be unique
            within a policy.</param>
            <param name="definition">An object that defines the Lifecycle
            rule.</param>
            <param name="enabled">Rule is enabled if set to true.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.#cctor">
            <summary>
            Static constructor for ManagementPolicyRule class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Enabled">
            <summary>
            Gets or sets rule is enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Name">
            <summary>
            Gets or sets a rule name can contain any combination of alpha
            numeric characters. Rule name is case-sensitive. It must be unique
            within a policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Definition">
            <summary>
            Gets or sets an object that defines the Lifecycle rule.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Type">
            <summary>
            The valid value is Lifecycle
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema">
            <summary>
            The Storage Account ManagementPolicies Rules. See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicySchema class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.ManagementPolicyRule})">
            <summary>
            Initializes a new instance of the ManagementPolicySchema class.
            </summary>
            <param name="rules">The Storage Account ManagementPolicies Rules.
            See more details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.Rules">
            <summary>
            Gets or sets the Storage Account ManagementPolicies Rules. See more
            details in:
            https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySchema.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot">
            <summary>
            Management policy action for snapshot.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicySnapShot class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.#ctor(Microsoft.Azure.Management.Storage.Models.DateAfterCreation,Microsoft.Azure.Management.Storage.Models.DateAfterCreation,Microsoft.Azure.Management.Storage.Models.DateAfterCreation)">
            <summary>
            Initializes a new instance of the ManagementPolicySnapShot class.
            </summary>
            <param name="tierToCool">The function to tier blob snapshot to cool
            storage. Support blob snapshot currently at Hot tier</param>
            <param name="tierToArchive">The function to tier blob snapshot to
            archive storage. Support blob snapshot currently at Hot or Cool
            tier</param>
            <param name="delete">The function to delete the blob
            snapshot</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.TierToCool">
            <summary>
            Gets or sets the function to tier blob snapshot to cool storage.
            Support blob snapshot currently at Hot tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.TierToArchive">
            <summary>
            Gets or sets the function to tier blob snapshot to archive storage.
            Support blob snapshot currently at Hot or Cool tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.Delete">
            <summary>
            Gets or sets the function to delete the blob snapshot
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicySnapShot.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion">
            <summary>
            Management policy action for blob version.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion.#ctor">
            <summary>
            Initializes a new instance of the ManagementPolicyVersion class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion.#ctor(Microsoft.Azure.Management.Storage.Models.DateAfterCreation,Microsoft.Azure.Management.Storage.Models.DateAfterCreation,Microsoft.Azure.Management.Storage.Models.DateAfterCreation)">
            <summary>
            Initializes a new instance of the ManagementPolicyVersion class.
            </summary>
            <param name="tierToCool">The function to tier blob version to cool
            storage. Support blob version currently at Hot tier</param>
            <param name="tierToArchive">The function to tier blob version to
            archive storage. Support blob version currently at Hot or Cool
            tier</param>
            <param name="delete">The function to delete the blob
            version</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion.TierToCool">
            <summary>
            Gets or sets the function to tier blob version to cool storage.
            Support blob version currently at Hot tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion.TierToArchive">
            <summary>
            Gets or sets the function to tier blob version to archive storage.
            Support blob version currently at Hot or Cool tier
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion.Delete">
            <summary>
            Gets or sets the function to delete the blob version
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ManagementPolicyVersion.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.MetricSpecification">
            <summary>
            Metric specification of operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.MetricSpecification.#ctor">
            <summary>
            Initializes a new instance of the MetricSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.MetricSpecification.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.Dimension},System.String,System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Initializes a new instance of the MetricSpecification class.
            </summary>
            <param name="name">Name of metric specification.</param>
            <param name="displayName">Display name of metric
            specification.</param>
            <param name="displayDescription">Display description of metric
            specification.</param>
            <param name="unit">Unit could be Bytes or Count.</param>
            <param name="dimensions">Dimensions of blobs, including blob type
            and access tier.</param>
            <param name="aggregationType">Aggregation type could be
            Average.</param>
            <param name="fillGapWithZero">The property to decide fill gap with
            zero or not.</param>
            <param name="category">The category this metric specification
            belong to, could be Capacity.</param>
            <param name="resourceIdDimensionNameOverride">Account Resource
            Id.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Name">
            <summary>
            Gets or sets name of metric specification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.DisplayName">
            <summary>
            Gets or sets display name of metric specification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.DisplayDescription">
            <summary>
            Gets or sets display description of metric specification.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Unit">
            <summary>
            Gets or sets unit could be Bytes or Count.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Dimensions">
            <summary>
            Gets or sets dimensions of blobs, including blob type and access
            tier.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.AggregationType">
            <summary>
            Gets or sets aggregation type could be Average.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.FillGapWithZero">
            <summary>
            Gets or sets the property to decide fill gap with zero or not.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.Category">
            <summary>
            Gets or sets the category this metric specification belong to,
            could be Capacity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.MetricSpecification.ResourceIdDimensionNameOverride">
            <summary>
            Gets or sets account Resource Id.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.MigrationState">
            <summary>
            Defines values for MigrationState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.MinimumTlsVersion">
            <summary>
            Defines values for MinimumTlsVersion.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Multichannel">
            <summary>
            Multichannel setting. Applies to Premium FileStorage only.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Multichannel.#ctor">
            <summary>
            Initializes a new instance of the Multichannel class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Multichannel.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the Multichannel class.
            </summary>
            <param name="enabled">Indicates whether multichannel is
            enabled</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Multichannel.Enabled">
            <summary>
            Gets or sets indicates whether multichannel is enabled
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Name">
            <summary>
            Defines values for Name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet">
            <summary>
            Network rule set
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.#ctor">
            <summary>
            Initializes a new instance of the NetworkRuleSet class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.#ctor(Microsoft.Azure.Management.Storage.Models.DefaultAction,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.ResourceAccessRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.IPRule})">
            <summary>
            Initializes a new instance of the NetworkRuleSet class.
            </summary>
            <param name="defaultAction">Specifies the default action of allow
            or deny when no other rules match. Possible values include:
            'Allow', 'Deny'</param>
            <param name="bypass">Specifies whether traffic is bypassed for
            Logging/Metrics/AzureServices. Possible values are any combination
            of Logging|Metrics|AzureServices (For example, "Logging, Metrics"),
            or None to bypass none of those traffics. Possible values include:
            'None', 'Logging', 'Metrics', 'AzureServices'</param>
            <param name="resourceAccessRules">Sets the resource access
            rules</param>
            <param name="virtualNetworkRules">Sets the virtual network
            rules</param>
            <param name="ipRules">Sets the IP ACL rules</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.Bypass">
            <summary>
            Gets or sets specifies whether traffic is bypassed for
            Logging/Metrics/AzureServices. Possible values are any combination
            of Logging|Metrics|AzureServices (For example, "Logging, Metrics"),
            or None to bypass none of those traffics. Possible values include:
            'None', 'Logging', 'Metrics', 'AzureServices'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.ResourceAccessRules">
            <summary>
            Gets or sets sets the resource access rules
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.VirtualNetworkRules">
            <summary>
            Gets or sets sets the virtual network rules
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.IpRules">
            <summary>
            Gets or sets sets the IP ACL rules
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.DefaultAction">
            <summary>
            Gets or sets specifies the default action of allow or deny when no
            other rules match. Possible values include: 'Allow', 'Deny'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.NetworkRuleSet.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy">
            <summary>
            The replication policy between two storage accounts. Multiple rules can
            be defined in one policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.#ctor">
            <summary>
            Initializes a new instance of the ObjectReplicationPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule})">
            <summary>
            Initializes a new instance of the ObjectReplicationPolicy class.
            </summary>
            <param name="sourceAccount">Required. Source account name. It
            should be full resource id if allowCrossTenantReplication set to
            false.</param>
            <param name="destinationAccount">Required. Destination account
            name. It should be full resource id if allowCrossTenantReplication
            set to false.</param>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="policyId">A unique id for object replication
            policy.</param>
            <param name="enabledTime">Indicates when the policy is enabled on
            the source account.</param>
            <param name="rules">The storage account object replication
            rules.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.PolicyId">
            <summary>
            Gets a unique id for object replication policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.EnabledTime">
            <summary>
            Gets indicates when the policy is enabled on the source account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.SourceAccount">
            <summary>
            Gets or sets required. Source account name. It should be full
            resource id if allowCrossTenantReplication set to false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.DestinationAccount">
            <summary>
            Gets or sets required. Destination account name. It should be full
            resource id if allowCrossTenantReplication set to false.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.Rules">
            <summary>
            Gets or sets the storage account object replication rules.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyFilter">
            <summary>
            Filters limit replication to a subset of blobs within the storage
            account. A logical OR is performed on values in the filter. If multiple
            filters are defined, a logical AND is performed on all filters.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyFilter.#ctor">
            <summary>
            Initializes a new instance of the ObjectReplicationPolicyFilter
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyFilter.#ctor(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the ObjectReplicationPolicyFilter
            class.
            </summary>
            <param name="prefixMatch">Optional. Filters the results to
            replicate only blobs whose names begin with the specified
            prefix.</param>
            <param name="minCreationTime">Blobs created after the time will be
            replicated to the destination. It must be in datetime format
            'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyFilter.PrefixMatch">
            <summary>
            Gets or sets optional. Filters the results to replicate only blobs
            whose names begin with the specified prefix.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyFilter.MinCreationTime">
            <summary>
            Gets or sets blobs created after the time will be replicated to the
            destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'.
            Example: 2020-02-19T16:05:00Z
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule">
            <summary>
            The replication policy rule between two containers.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.#ctor">
            <summary>
            Initializes a new instance of the ObjectReplicationPolicyRule
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyFilter)">
            <summary>
            Initializes a new instance of the ObjectReplicationPolicyRule
            class.
            </summary>
            <param name="sourceContainer">Required. Source container
            name.</param>
            <param name="destinationContainer">Required. Destination container
            name.</param>
            <param name="ruleId">Rule Id is auto-generated for each new rule on
            destination account. It is required for put policy on source
            account.</param>
            <param name="filters">Optional. An object that defines the filter
            set.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.RuleId">
            <summary>
            Gets or sets rule Id is auto-generated for each new rule on
            destination account. It is required for put policy on source
            account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.SourceContainer">
            <summary>
            Gets or sets required. Source container name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.DestinationContainer">
            <summary>
            Gets or sets required. Destination container name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.Filters">
            <summary>
            Gets or sets optional. An object that defines the filter set.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicyRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ObjectType">
            <summary>
            Defines values for ObjectType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Operation">
            <summary>
            Storage REST API operation definition.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Operation.#ctor">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Operation.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.OperationDisplay,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSpecification)">
            <summary>
            Initializes a new instance of the Operation class.
            </summary>
            <param name="name">Operation name:
            {provider}/{resource}/{operation}</param>
            <param name="display">Display metadata associated with the
            operation.</param>
            <param name="origin">The origin of operations.</param>
            <param name="serviceSpecification">One property of operation,
            include metric specifications.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Operation.Name">
            <summary>
            Gets or sets operation name: {provider}/{resource}/{operation}
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Operation.Display">
            <summary>
            Gets or sets display metadata associated with the operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Operation.Origin">
            <summary>
            Gets or sets the origin of operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Operation.ServiceSpecification">
            <summary>
            Gets or sets one property of operation, include metric
            specifications.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.OperationDisplay">
            <summary>
            Display metadata associated with the operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.OperationDisplay.#ctor">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.OperationDisplay.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the OperationDisplay class.
            </summary>
            <param name="provider">Service provider: Microsoft Storage.</param>
            <param name="resource">Resource on which the operation is performed
            etc.</param>
            <param name="operation">Type of operation: get, read, delete,
            etc.</param>
            <param name="description">Description of the operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Provider">
            <summary>
            Gets or sets service provider: Microsoft Storage.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Resource">
            <summary>
            Gets or sets resource on which the operation is performed etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Operation">
            <summary>
            Gets or sets type of operation: get, read, delete, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.OperationDisplay.Description">
            <summary>
            Gets or sets description of the operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Page`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Page`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Page`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Page`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Page1`1">
            <summary>
            Defines a page in Azure responses.
            </summary>
            <typeparam name="T">Type of the page content items</typeparam>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Page1`1.NextPageLink">
            <summary>
            Gets the link to the next page.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Page1`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Page1`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A an enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Permissions">
            <summary>
            Defines values for Permissions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PermissionScope.#ctor">
            <summary>
            Initializes a new instance of the PermissionScope class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PermissionScope.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PermissionScope class.
            </summary>
            <param name="permissions">The permissions for the local user.
            Possible values include: Read (r), Write (w), Delete (d), List (l),
            and Create (c).</param>
            <param name="service">The service used by the local user, e.g.
            blob, file.</param>
            <param name="resourceName">The name of resource, normally the
            container name or the file share name, used by the local
            user.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PermissionScope.Permissions">
            <summary>
            Gets or sets the permissions for the local user. Possible values
            include: Read (r), Write (w), Delete (d), List (l), and Create (c).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PermissionScope.Service">
            <summary>
            Gets or sets the service used by the local user, e.g. blob, file.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PermissionScope.ResourceName">
            <summary>
            Gets or sets the name of resource, normally the container name or
            the file share name, used by the local user.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PermissionScope.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint">
            <summary>
            The Private Endpoint resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint.#ctor">
            <summary>
            Initializes a new instance of the PrivateEndpoint class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PrivateEndpoint class.
            </summary>
            <param name="id">The ARM identifier for Private Endpoint</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpoint.Id">
            <summary>
            Gets the ARM identifier for Private Endpoint
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection">
            <summary>
            The Private Endpoint Connection resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.#ctor">
            <summary>
            Initializes a new instance of the PrivateEndpointConnection class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.#ctor(Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpoint,System.String)">
            <summary>
            Initializes a new instance of the PrivateEndpointConnection class.
            </summary>
            <param name="privateLinkServiceConnectionState">A collection of
            information about the state of the connection between service
            consumer and provider.</param>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="privateEndpoint">The resource of private end
            point.</param>
            <param name="provisioningState">The provisioning state of the
            private endpoint connection resource. Possible values include:
            'Succeeded', 'Creating', 'Deleting', 'Failed'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.PrivateEndpoint">
            <summary>
            Gets or sets the resource of private end point.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.PrivateLinkServiceConnectionState">
            <summary>
            Gets or sets a collection of information about the state of the
            connection between service consumer and provider.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.ProvisioningState">
            <summary>
            Gets or sets the provisioning state of the private endpoint
            connection resource. Possible values include: 'Succeeded',
            'Creating', 'Deleting', 'Failed'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnectionProvisioningState">
            <summary>
            Defines values for PrivateEndpointConnectionProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateEndpointServiceConnectionStatus">
            <summary>
            Defines values for PrivateEndpointServiceConnectionStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource">
            <summary>
            A private link resource
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes a new instance of the PrivateLinkResource class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="groupId">The private link resource group id.</param>
            <param name="requiredMembers">The private link resource required
            member names.</param>
            <param name="requiredZoneNames">The private link resource Private
            link DNS zone name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.GroupId">
            <summary>
            Gets the private link resource group id.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.RequiredMembers">
            <summary>
            Gets the private link resource required member names.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResource.RequiredZoneNames">
            <summary>
            Gets or sets the private link resource Private link DNS zone name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult">
            <summary>
            A list of private link resources
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkResourceListResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.PrivateLinkResource})">
            <summary>
            Initializes a new instance of the PrivateLinkResourceListResult
            class.
            </summary>
            <param name="value">Array of private link resources</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkResourceListResult.Value">
            <summary>
            Gets or sets array of private link resources
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState">
            <summary>
            A collection of information about the state of the connection between
            service consumer and provider.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.#ctor">
            <summary>
            Initializes a new instance of the PrivateLinkServiceConnectionState
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the PrivateLinkServiceConnectionState
            class.
            </summary>
            <param name="status">Indicates whether the connection has been
            Approved/Rejected/Removed by the owner of the service. Possible
            values include: 'Pending', 'Approved', 'Rejected'</param>
            <param name="description">The reason for approval/rejection of the
            connection.</param>
            <param name="actionRequired">A message indicating if changes on the
            service provider require any updates on the consumer.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.Status">
            <summary>
            Gets or sets indicates whether the connection has been
            Approved/Rejected/Removed by the owner of the service. Possible
            values include: 'Pending', 'Approved', 'Rejected'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.Description">
            <summary>
            Gets or sets the reason for approval/rejection of the connection.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.PrivateLinkServiceConnectionState.ActionRequired">
            <summary>
            Gets or sets a message indicating if changes on the service
            provider require any updates on the consumer.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ProtectedAppendWritesHistory">
            <summary>
            Protected append writes history setting for the blob container with
            Legal holds.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ProtectedAppendWritesHistory.#ctor">
            <summary>
            Initializes a new instance of the ProtectedAppendWritesHistory
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ProtectedAppendWritesHistory.#ctor(System.Nullable{System.Boolean},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the ProtectedAppendWritesHistory
            class.
            </summary>
            <param name="allowProtectedAppendWritesAll">When enabled, new
            blocks can be written to both 'Append and Bock Blobs' while
            maintaining legal hold protection and compliance. Only new blocks
            can be added and any existing blocks cannot be modified or
            deleted.</param>
            <param name="timestamp">Returns the date and time the tag was
            added.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ProtectedAppendWritesHistory.AllowProtectedAppendWritesAll">
            <summary>
            Gets or sets when enabled, new blocks can be written to both
            'Append and Bock Blobs' while maintaining legal hold protection and
            compliance. Only new blocks can be added and any existing blocks
            cannot be modified or deleted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ProtectedAppendWritesHistory.Timestamp">
            <summary>
            Gets returns the date and time the tag was added.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ProtocolSettings">
            <summary>
            Protocol settings for file service
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ProtocolSettings.#ctor">
            <summary>
            Initializes a new instance of the ProtocolSettings class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ProtocolSettings.#ctor(Microsoft.Azure.Management.Storage.Models.SmbSetting)">
            <summary>
            Initializes a new instance of the ProtocolSettings class.
            </summary>
            <param name="smb">Setting for SMB protocol</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ProtocolSettings.Smb">
            <summary>
            Gets or sets setting for SMB protocol
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ProvisioningState">
            <summary>
            Defines values for ProvisioningState.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ProxyResource">
            <summary>
            Proxy Resource
            </summary>
            <remarks>
            The resource model definition for a Azure Resource Manager proxy
            resource. It will not have tags and a location
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ProxyResource.#ctor">
            <summary>
            Initializes a new instance of the ProxyResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ProxyResource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ProxyResource class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PublicAccess">
            <summary>
            Defines values for PublicAccess.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.PublicNetworkAccess">
            <summary>
            Defines values for PublicNetworkAccess.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.QueueServiceProperties">
            <summary>
            The properties of a storage account’s Queue service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.QueueServiceProperties.#ctor">
            <summary>
            Initializes a new instance of the QueueServiceProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.QueueServiceProperties.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules)">
            <summary>
            Initializes a new instance of the QueueServiceProperties class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="cors">Specifies CORS rules for the Queue service. You
            can include up to five CorsRule elements in the request. If no
            CorsRule elements are included in the request body, all CORS rules
            will be deleted, and CORS will be disabled for the Queue
            service.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.QueueServiceProperties.Cors">
            <summary>
            Gets or sets specifies CORS rules for the Queue service. You can
            include up to five CorsRule elements in the request. If no CorsRule
            elements are included in the request body, all CORS rules will be
            deleted, and CORS will be disabled for the Queue service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Reason">
            <summary>
            Defines values for Reason.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ReasonCode">
            <summary>
            Defines values for ReasonCode.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Resource">
            <summary>
            Resource
            </summary>
            <remarks>
            Common fields that are returned in the response for all Azure Resource
            Manager resources
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Resource.#ctor">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Resource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the Resource class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Resource.Id">
            <summary>
            Gets fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Resource.Name">
            <summary>
            Gets the name of the resource
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Resource.Type">
            <summary>
            Gets the type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ResourceAccessRule">
            <summary>
            Resource Access Rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ResourceAccessRule.#ctor">
            <summary>
            Initializes a new instance of the ResourceAccessRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ResourceAccessRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ResourceAccessRule class.
            </summary>
            <param name="tenantId">Tenant Id</param>
            <param name="resourceId">Resource Id</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ResourceAccessRule.TenantId">
            <summary>
            Gets or sets tenant Id
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ResourceAccessRule.ResourceId">
            <summary>
            Gets or sets resource Id
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties">
            <summary>
            The blob service properties for blob restore policy
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.#ctor">
            <summary>
            Initializes a new instance of the RestorePolicyProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.#ctor(System.Boolean,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the RestorePolicyProperties class.
            </summary>
            <param name="enabled">Blob restore is enabled if set to
            true.</param>
            <param name="days">how long this blob can be restored. It should be
            great than zero and less than DeleteRetentionPolicy.days.</param>
            <param name="lastEnabledTime">Deprecated in favor of minRestoreTime
            property.</param>
            <param name="minRestoreTime">Returns the minimum date and time that
            the restore can be started.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.Enabled">
            <summary>
            Gets or sets blob restore is enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.Days">
            <summary>
            Gets or sets how long this blob can be restored. It should be great
            than zero and less than DeleteRetentionPolicy.days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.LastEnabledTime">
            <summary>
            Gets deprecated in favor of minRestoreTime property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.MinRestoreTime">
            <summary>
            Gets returns the minimum date and time that the restore can be
            started.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.RestorePolicyProperties.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Restriction">
            <summary>
            The restriction because of which SKU cannot be used.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Restriction.#ctor">
            <summary>
            Initializes a new instance of the Restriction class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Restriction.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Initializes a new instance of the Restriction class.
            </summary>
            <param name="type">The type of restrictions. As of now only
            possible value for this is location.</param>
            <param name="values">The value of restrictions. If the restriction
            type is set to location. This would be different locations where
            the SKU is restricted.</param>
            <param name="reasonCode">The reason for the restriction. As of now
            this can be "QuotaId" or "NotAvailableForSubscription". Quota Id is
            set when the SKU has requiredQuotas parameter as the subscription
            does not belong to that quota. The "NotAvailableForSubscription" is
            related to capacity at DC. Possible values include: 'QuotaId',
            'NotAvailableForSubscription'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Restriction.Type">
            <summary>
            Gets the type of restrictions. As of now only possible value for
            this is location.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Restriction.Values">
            <summary>
            Gets the value of restrictions. If the restriction type is set to
            location. This would be different locations where the SKU is
            restricted.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Restriction.ReasonCode">
            <summary>
            Gets or sets the reason for the restriction. As of now this can be
            "QuotaId" or "NotAvailableForSubscription". Quota Id is set when
            the SKU has requiredQuotas parameter as the subscription does not
            belong to that quota. The "NotAvailableForSubscription" is related
            to capacity at DC. Possible values include: 'QuotaId',
            'NotAvailableForSubscription'
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.RootSquashType">
            <summary>
            Defines values for RootSquashType.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.RoutingChoice">
            <summary>
            Defines values for RoutingChoice.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.RoutingPreference">
            <summary>
            Routing preference defines the type of network, either microsoft or
            internet routing to be used to deliver the user data, the default
            option is microsoft routing
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.RoutingPreference.#ctor">
            <summary>
            Initializes a new instance of the RoutingPreference class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.RoutingPreference.#ctor(System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the RoutingPreference class.
            </summary>
            <param name="routingChoice">Routing Choice defines the kind of
            network routing opted by the user. Possible values include:
            'MicrosoftRouting', 'InternetRouting'</param>
            <param name="publishMicrosoftEndpoints">A boolean flag which
            indicates whether microsoft routing storage endpoints are to be
            published</param>
            <param name="publishInternetEndpoints">A boolean flag which
            indicates whether internet routing storage endpoints are to be
            published</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RoutingPreference.RoutingChoice">
            <summary>
            Gets or sets routing Choice defines the kind of network routing
            opted by the user. Possible values include: 'MicrosoftRouting',
            'InternetRouting'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RoutingPreference.PublishMicrosoftEndpoints">
            <summary>
            Gets or sets a boolean flag which indicates whether microsoft
            routing storage endpoints are to be published
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.RoutingPreference.PublishInternetEndpoints">
            <summary>
            Gets or sets a boolean flag which indicates whether internet
            routing storage endpoints are to be published
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SasPolicy">
            <summary>
            SasPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SasPolicy.#ctor">
            <summary>
            Initializes a new instance of the SasPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SasPolicy.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SasPolicy class.
            </summary>
            <param name="sasExpirationPeriod">The SAS expiration period,
            DD.HH:MM:SS.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SasPolicy.#cctor">
            <summary>
            Static constructor for SasPolicy class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SasPolicy.SasExpirationPeriod">
            <summary>
            Gets or sets the SAS expiration period, DD.HH:MM:SS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SasPolicy.ExpirationAction">
            <summary>
            The SAS expiration action. Can only be Log.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SasPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Schedule">
            <summary>
            Defines values for Schedule.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Services">
            <summary>
            Defines values for Services.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters">
            <summary>
            The parameters to list service SAS credentials of a specific resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor">
            <summary>
            Initializes a new instance of the ServiceSasParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.#ctor(System.String,System.String,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.HttpProtocol},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the ServiceSasParameters class.
            </summary>
            <param name="canonicalizedResource">The canonical path to the
            signed resource.</param>
            <param name="resource">The signed services accessible with the
            service SAS. Possible values include: Blob (b), Container (c), File
            (f), Share (s). Possible values include: 'b', 'c', 'f', 's'</param>
            <param name="permissions">The signed permissions for the service
            SAS. Possible values include: Read (r), Write (w), Delete (d), List
            (l), Add (a), Create (c), Update (u) and Process (p). Possible
            values include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'</param>
            <param name="iPAddressOrRange">An IP address or a range of IP
            addresses from which to accept requests.</param>
            <param name="protocols">The protocol permitted for a request made
            with the account SAS. Possible values include: 'https,http',
            'https'</param>
            <param name="sharedAccessStartTime">The time at which the SAS
            becomes valid.</param>
            <param name="sharedAccessExpiryTime">The time at which the shared
            access signature becomes invalid.</param>
            <param name="identifier">A unique value up to 64 characters in
            length that correlates to an access policy specified for the
            container, queue, or table.</param>
            <param name="partitionKeyStart">The start of partition key.</param>
            <param name="partitionKeyEnd">The end of partition key.</param>
            <param name="rowKeyStart">The start of row key.</param>
            <param name="rowKeyEnd">The end of row key.</param>
            <param name="keyToSign">The key to sign the account SAS token
            with.</param>
            <param name="cacheControl">The response header override for cache
            control.</param>
            <param name="contentDisposition">The response header override for
            content disposition.</param>
            <param name="contentEncoding">The response header override for
            content encoding.</param>
            <param name="contentLanguage">The response header override for
            content language.</param>
            <param name="contentType">The response header override for content
            type.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CanonicalizedResource">
            <summary>
            Gets or sets the canonical path to the signed resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Resource">
            <summary>
            Gets or sets the signed services accessible with the service SAS.
            Possible values include: Blob (b), Container (c), File (f), Share
            (s). Possible values include: 'b', 'c', 'f', 's'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Permissions">
            <summary>
            Gets or sets the signed permissions for the service SAS. Possible
            values include: Read (r), Write (w), Delete (d), List (l), Add (a),
            Create (c), Update (u) and Process (p). Possible values include:
            'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.IPAddressOrRange">
            <summary>
            Gets or sets an IP address or a range of IP addresses from which to
            accept requests.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Protocols">
            <summary>
            Gets or sets the protocol permitted for a request made with the
            account SAS. Possible values include: 'https,http', 'https'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessStartTime">
            <summary>
            Gets or sets the time at which the SAS becomes valid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.SharedAccessExpiryTime">
            <summary>
            Gets or sets the time at which the shared access signature becomes
            invalid.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Identifier">
            <summary>
            Gets or sets a unique value up to 64 characters in length that
            correlates to an access policy specified for the container, queue,
            or table.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyStart">
            <summary>
            Gets or sets the start of partition key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.PartitionKeyEnd">
            <summary>
            Gets or sets the end of partition key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyStart">
            <summary>
            Gets or sets the start of row key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.RowKeyEnd">
            <summary>
            Gets or sets the end of row key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.KeyToSign">
            <summary>
            Gets or sets the key to sign the account SAS token with.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.CacheControl">
            <summary>
            Gets or sets the response header override for cache control.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentDisposition">
            <summary>
            Gets or sets the response header override for content disposition.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentEncoding">
            <summary>
            Gets or sets the response header override for content encoding.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentLanguage">
            <summary>
            Gets or sets the response header override for content language.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.ContentType">
            <summary>
            Gets or sets the response header override for content type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ServiceSasParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ServiceSpecification">
            <summary>
            One property of operation, include metric specifications.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ServiceSpecification.#ctor">
            <summary>
            Initializes a new instance of the ServiceSpecification class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.ServiceSpecification.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.MetricSpecification})">
            <summary>
            Initializes a new instance of the ServiceSpecification class.
            </summary>
            <param name="metricSpecifications">Metric specifications of
            operation.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.ServiceSpecification.MetricSpecifications">
            <summary>
            Gets or sets metric specifications of operation.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.ShareAccessTier">
            <summary>
            Defines values for ShareAccessTier.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SignedIdentifier.#ctor">
            <summary>
            Initializes a new instance of the SignedIdentifier class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SignedIdentifier.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.AccessPolicy)">
            <summary>
            Initializes a new instance of the SignedIdentifier class.
            </summary>
            <param name="id">An unique identifier of the stored access
            policy.</param>
            <param name="accessPolicy">Access policy</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SignedIdentifier.Id">
            <summary>
            Gets or sets an unique identifier of the stored access policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SignedIdentifier.AccessPolicy">
            <summary>
            Gets or sets access policy
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SignedResource">
            <summary>
            Defines values for SignedResource.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SignedResourceTypes">
            <summary>
            Defines values for SignedResourceTypes.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Sku">
            <summary>
            The SKU of the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Sku.#ctor">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Sku.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.SkuTier})">
            <summary>
            Initializes a new instance of the Sku class.
            </summary>
            <param name="name">Possible values include: 'Standard_LRS',
            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
            'Premium_ZRS', 'Standard_GZRS', 'Standard_RAGZRS'</param>
            <param name="tier">Possible values include: 'Standard',
            'Premium'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Sku.Name">
            <summary>
            Gets or sets possible values include: 'Standard_LRS',
            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
            'Premium_ZRS', 'Standard_GZRS', 'Standard_RAGZRS'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Sku.Tier">
            <summary>
            Gets or sets possible values include: 'Standard', 'Premium'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Sku.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SKUCapability">
            <summary>
            The capability information in the specified SKU, including file
            encryption, network ACLs, change notification, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SKUCapability.#ctor">
            <summary>
            Initializes a new instance of the SKUCapability class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SKUCapability.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SKUCapability class.
            </summary>
            <param name="name">The name of capability, The capability
            information in the specified SKU, including file encryption,
            network ACLs, change notification, etc.</param>
            <param name="value">A string value to indicate states of given
            capability. Possibly 'true' or 'false'.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SKUCapability.Name">
            <summary>
            Gets the name of capability, The capability information in the
            specified SKU, including file encryption, network ACLs, change
            notification, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SKUCapability.Value">
            <summary>
            Gets a string value to indicate states of given capability.
            Possibly 'true' or 'false'.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SkuConversionStatus">
            <summary>
            Defines values for SkuConversionStatus.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SkuInformation">
            <summary>
            Storage SKU and its properties
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SkuInformation.#ctor">
            <summary>
            Initializes a new instance of the SkuInformation class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SkuInformation.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.SkuTier},System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.SKUCapability},System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.Restriction})">
            <summary>
            Initializes a new instance of the SkuInformation class.
            </summary>
            <param name="name">Possible values include: 'Standard_LRS',
            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
            'Premium_ZRS', 'Standard_GZRS', 'Standard_RAGZRS'</param>
            <param name="tier">Possible values include: 'Standard',
            'Premium'</param>
            <param name="resourceType">The type of the resource, usually it is
            'storageAccounts'.</param>
            <param name="kind">Indicates the type of storage account. Possible
            values include: 'Storage', 'StorageV2', 'BlobStorage',
            'FileStorage', 'BlockBlobStorage'</param>
            <param name="locations">The set of locations that the SKU is
            available. This will be supported and registered Azure Geo Regions
            (e.g. West US, East US, Southeast Asia, etc.).</param>
            <param name="capabilities">The capability information in the
            specified SKU, including file encryption, network ACLs, change
            notification, etc.</param>
            <param name="restrictions">The restrictions because of which SKU
            cannot be used. This is empty if there are no restrictions.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Name">
            <summary>
            Gets or sets possible values include: 'Standard_LRS',
            'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
            'Premium_ZRS', 'Standard_GZRS', 'Standard_RAGZRS'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Tier">
            <summary>
            Gets or sets possible values include: 'Standard', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.ResourceType">
            <summary>
            Gets the type of the resource, usually it is 'storageAccounts'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Kind">
            <summary>
            Gets indicates the type of storage account. Possible values
            include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Locations">
            <summary>
            Gets the set of locations that the SKU is available. This will be
            supported and registered Azure Geo Regions (e.g. West US, East US,
            Southeast Asia, etc.).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Capabilities">
            <summary>
            Gets the capability information in the specified SKU, including
            file encryption, network ACLs, change notification, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SkuInformation.Restrictions">
            <summary>
            Gets or sets the restrictions because of which SKU cannot be used.
            This is empty if there are no restrictions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SkuInformation.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SkuName">
            <summary>
            Defines values for SkuName.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SkuTier">
            <summary>
            Defines values for SkuTier.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SmbSetting">
            <summary>
            Setting for SMB protocol
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SmbSetting.#ctor">
            <summary>
            Initializes a new instance of the SmbSetting class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SmbSetting.#ctor(Microsoft.Azure.Management.Storage.Models.Multichannel,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the SmbSetting class.
            </summary>
            <param name="multichannel">Multichannel setting. Applies to Premium
            FileStorage only.</param>
            <param name="versions">SMB protocol versions supported by server.
            Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a
            string with delimiter ';'.</param>
            <param name="authenticationMethods">SMB authentication methods
            supported by server. Valid values are NTLMv2, Kerberos. Should be
            passed as a string with delimiter ';'.</param>
            <param name="kerberosTicketEncryption">Kerberos ticket encryption
            supported by server. Valid values are RC4-HMAC, AES-256. Should be
            passed as a string with delimiter ';'</param>
            <param name="channelEncryption">SMB channel encryption supported by
            server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM.
            Should be passed as a string with delimiter ';'.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SmbSetting.Multichannel">
            <summary>
            Gets or sets multichannel setting. Applies to Premium FileStorage
            only.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SmbSetting.Versions">
            <summary>
            Gets or sets SMB protocol versions supported by server. Valid
            values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string
            with delimiter ';'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SmbSetting.AuthenticationMethods">
            <summary>
            Gets or sets SMB authentication methods supported by server. Valid
            values are NTLMv2, Kerberos. Should be passed as a string with
            delimiter ';'.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SmbSetting.KerberosTicketEncryption">
            <summary>
            Gets or sets kerberos ticket encryption supported by server. Valid
            values are RC4-HMAC, AES-256. Should be passed as a string with
            delimiter ';'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SmbSetting.ChannelEncryption">
            <summary>
            Gets or sets SMB channel encryption supported by server. Valid
            values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed
            as a string with delimiter ';'.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SshPublicKey.#ctor">
            <summary>
            Initializes a new instance of the SshPublicKey class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SshPublicKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the SshPublicKey class.
            </summary>
            <param name="description">Optional. It is used to store the
            function/usage of the key</param>
            <param name="key">Ssh public key base64 encoded. The format should
            be: '&lt;keyType&gt; &lt;keyData&gt;', e.g. ssh-rsa
            AAAABBBB</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SshPublicKey.Description">
            <summary>
            Gets or sets optional. It is used to store the function/usage of
            the key
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SshPublicKey.Key">
            <summary>
            Gets or sets ssh public key base64 encoded. The format should be:
            '&amp;lt;keyType&amp;gt; &amp;lt;keyData&amp;gt;', e.g. ssh-rsa
            AAAABBBB
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.State">
            <summary>
            Defines values for State.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccount">
            <summary>
            The storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor">
            <summary>
            Initializes a new instance of the StorageAccount class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccount.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Sku,System.String,Microsoft.Azure.Management.Storage.Models.Identity,Microsoft.Azure.Management.Storage.Models.ExtendedLocation,System.Nullable{Microsoft.Azure.Management.Storage.Models.ProvisioningState},Microsoft.Azure.Management.Storage.Models.Endpoints,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccountStatus},System.Nullable{System.DateTime},Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.SasPolicy,Microsoft.Azure.Management.Storage.Models.KeyPolicy,Microsoft.Azure.Management.Storage.Models.KeyCreationTime,Microsoft.Azure.Management.Storage.Models.Endpoints,Microsoft.Azure.Management.Storage.Models.Encryption,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier},Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication,System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.NetworkRuleSet,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.GeoReplicationStats,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection},Microsoft.Azure.Management.Storage.Models.RoutingPreference,Microsoft.Azure.Management.Storage.Models.BlobRestoreStatus,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus,System.String)">
            <summary>
            Initializes a new instance of the StorageAccount class.
            </summary>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="tags">Resource tags.</param>
            <param name="sku">Gets the SKU.</param>
            <param name="kind">Gets the Kind. Possible values include:
            'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'</param>
            <param name="identity">The identity of the resource.</param>
            <param name="extendedLocation">The extendedLocation of the
            resource.</param>
            <param name="provisioningState">Gets the status of the storage
            account at the time the operation was called. Possible values
            include: 'Creating', 'ResolvingDNS', 'Succeeded'</param>
            <param name="primaryEndpoints">Gets the URLs that are used to
            perform a retrieval of a public blob, queue, or table object. Note
            that Standard_ZRS and Premium_LRS accounts only return the blob
            endpoint.</param>
            <param name="primaryLocation">Gets the location of the primary data
            center for the storage account.</param>
            <param name="statusOfPrimary">Gets the status indicating whether
            the primary location of the storage account is available or
            unavailable. Possible values include: 'available',
            'unavailable'</param>
            <param name="lastGeoFailoverTime">Gets the timestamp of the most
            recent instance of a failover to the secondary location. Only the
            most recent timestamp is retained. This element is not returned if
            there has never been a failover instance. Only available if the
            accountType is Standard_GRS or Standard_RAGRS.</param>
            <param name="secondaryLocation">Gets the location of the
            geo-replicated secondary for the storage account. Only available if
            the accountType is Standard_GRS or Standard_RAGRS.</param>
            <param name="statusOfSecondary">Gets the status indicating whether
            the secondary location of the storage account is available or
            unavailable. Only available if the SKU name is Standard_GRS or
            Standard_RAGRS. Possible values include: 'available',
            'unavailable'</param>
            <param name="creationTime">Gets the creation date and time of the
            storage account in UTC.</param>
            <param name="customDomain">Gets the custom domain the user assigned
            to this storage account.</param>
            <param name="sasPolicy">SasPolicy assigned to the storage
            account.</param>
            <param name="keyPolicy">KeyPolicy assigned to the storage
            account.</param>
            <param name="keyCreationTime">Storage account keys creation
            time.</param>
            <param name="secondaryEndpoints">Gets the URLs that are used to
            perform a retrieval of a public blob, queue, or table object from
            the secondary location of the storage account. Only available if
            the SKU name is Standard_RAGRS.</param>
            <param name="encryption">Encryption settings to be used for
            server-side encryption for the storage account.</param>
            <param name="accessTier">Required for storage accounts where kind =
            BlobStorage. The access tier is used for billing. The 'Premium'
            access tier is the default value for premium block blobs storage
            account type and it cannot be changed for the premium block blobs
            storage account type. Possible values include: 'Hot', 'Cool',
            'Premium'</param>
            <param name="azureFilesIdentityBasedAuthentication">Provides the
            identity based authentication settings for Azure Files.</param>
            <param name="enableHttpsTrafficOnly">Allows https traffic only to
            storage service if sets to true.</param>
            <param name="networkRuleSet">Network rule set</param>
            <param name="isSftpEnabled">Enables Secure File Transfer Protocol,
            if set to true</param>
            <param name="isLocalUserEnabled">Enables local users feature, if
            set to true</param>
            <param name="isHnsEnabled">Account HierarchicalNamespace enabled if
            sets to true.</param>
            <param name="geoReplicationStats">Geo Replication Stats</param>
            <param name="failoverInProgress">If the failover is in progress,
            the value will be true, otherwise, it will be null.</param>
            <param name="largeFileSharesState">Allow large file shares if sets
            to Enabled. It cannot be disabled once it is enabled. Possible
            values include: 'Disabled', 'Enabled'</param>
            <param name="privateEndpointConnections">List of private endpoint
            connection associated with the specified storage account</param>
            <param name="routingPreference">Maintains information about the
            network routing choice opted by the user for data transfer</param>
            <param name="blobRestoreStatus">Blob restore status</param>
            <param name="allowBlobPublicAccess">Allow or disallow public access
            to all blobs or containers in the storage account. The default
            interpretation is true for this property.</param>
            <param name="minimumTlsVersion">Set the minimum TLS version to be
            permitted on requests to storage. The default interpretation is TLS
            1.0 for this property. Possible values include: 'TLS1_0', 'TLS1_1',
            'TLS1_2'</param>
            <param name="allowSharedKeyAccess">Indicates whether the storage
            account permits requests to be authorized with the account access
            key via Shared Key. If false, then all requests, including shared
            access signatures, must be authorized with Azure Active Directory
            (Azure AD). The default value is null, which is equivalent to
            true.</param>
            <param name="enableNfsV3">NFS 3.0 protocol support enabled if set
            to true.</param>
            <param name="allowCrossTenantReplication">Allow or disallow cross
            AAD tenant object replication. The default interpretation is true
            for this property.</param>
            <param name="defaultToOAuthAuthentication">A boolean flag which
            indicates whether the default authentication is OAuth or not. The
            default interpretation is false for this property.</param>
            <param name="publicNetworkAccess">Allow or disallow public network
            access to Storage Account. Value is optional but if passed in, must
            be 'Enabled' or 'Disabled'. Possible values include: 'Enabled',
            'Disabled'</param>
            <param name="immutableStorageWithVersioning">The property is
            immutable and can only be set to true at the account creation time.
            When set to true, it enables object level immutability for all the
            containers in the account by default.</param>
            <param name="allowedCopyScope">Restrict copy to and from Storage
            Accounts within an AAD tenant or with Private Links to the same
            VNet. Possible values include: 'PrivateLink', 'AAD'</param>
            <param name="storageAccountSkuConversionStatus">This property is
            readOnly and is set by server during asynchronous storage account
            sku conversion operations.</param>
            <param name="dnsEndpointType">Allows you to specify the type of
            endpoint. Set this to AzureDNSZone to create a large number of
            accounts in a single subscription, which creates accounts in an
            Azure DNS Zone and the endpoint URL will have an alphanumeric DNS
            Zone identifier. Possible values include: 'Standard',
            'AzureDnsZone'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Sku">
            <summary>
            Gets the SKU.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Kind">
            <summary>
            Gets the Kind. Possible values include: 'Storage', 'StorageV2',
            'BlobStorage', 'FileStorage', 'BlockBlobStorage'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.ExtendedLocation">
            <summary>
            Gets or sets the extendedLocation of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.ProvisioningState">
            <summary>
            Gets the status of the storage account at the time the operation
            was called. Possible values include: 'Creating', 'ResolvingDNS',
            'Succeeded'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryEndpoints">
            <summary>
            Gets the URLs that are used to perform a retrieval of a public
            blob, queue, or table object. Note that Standard_ZRS and
            Premium_LRS accounts only return the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrimaryLocation">
            <summary>
            Gets the location of the primary data center for the storage
            account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfPrimary">
            <summary>
            Gets the status indicating whether the primary location of the
            storage account is available or unavailable. Possible values
            include: 'available', 'unavailable'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.LastGeoFailoverTime">
            <summary>
            Gets the timestamp of the most recent instance of a failover to the
            secondary location. Only the most recent timestamp is retained.
            This element is not returned if there has never been a failover
            instance. Only available if the accountType is Standard_GRS or
            Standard_RAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryLocation">
            <summary>
            Gets the location of the geo-replicated secondary for the storage
            account. Only available if the accountType is Standard_GRS or
            Standard_RAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StatusOfSecondary">
            <summary>
            Gets the status indicating whether the secondary location of the
            storage account is available or unavailable. Only available if the
            SKU name is Standard_GRS or Standard_RAGRS. Possible values
            include: 'available', 'unavailable'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CreationTime">
            <summary>
            Gets the creation date and time of the storage account in UTC.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.CustomDomain">
            <summary>
            Gets the custom domain the user assigned to this storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SasPolicy">
            <summary>
            Gets sasPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.KeyPolicy">
            <summary>
            Gets keyPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.KeyCreationTime">
            <summary>
            Gets storage account keys creation time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.SecondaryEndpoints">
            <summary>
            Gets the URLs that are used to perform a retrieval of a public
            blob, queue, or table object from the secondary location of the
            storage account. Only available if the SKU name is Standard_RAGRS.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.Encryption">
            <summary>
            Gets encryption settings to be used for server-side encryption for
            the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AccessTier">
            <summary>
            Gets required for storage accounts where kind = BlobStorage. The
            access tier is used for billing. The 'Premium' access tier is the
            default value for premium block blobs storage account type and it
            cannot be changed for the premium block blobs storage account type.
            Possible values include: 'Hot', 'Cool', 'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AzureFilesIdentityBasedAuthentication">
            <summary>
            Gets or sets provides the identity based authentication settings
            for Azure Files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.EnableHttpsTrafficOnly">
            <summary>
            Gets or sets allows https traffic only to storage service if sets
            to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.NetworkRuleSet">
            <summary>
            Gets network rule set
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.IsSftpEnabled">
            <summary>
            Gets or sets enables Secure File Transfer Protocol, if set to true
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.IsLocalUserEnabled">
            <summary>
            Gets or sets enables local users feature, if set to true
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.IsHnsEnabled">
            <summary>
            Gets or sets account HierarchicalNamespace enabled if sets to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.GeoReplicationStats">
            <summary>
            Gets geo Replication Stats
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.FailoverInProgress">
            <summary>
            Gets if the failover is in progress, the value will be true,
            otherwise, it will be null.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.LargeFileSharesState">
            <summary>
            Gets or sets allow large file shares if sets to Enabled. It cannot
            be disabled once it is enabled. Possible values include:
            'Disabled', 'Enabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PrivateEndpointConnections">
            <summary>
            Gets list of private endpoint connection associated with the
            specified storage account
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.RoutingPreference">
            <summary>
            Gets or sets maintains information about the network routing choice
            opted by the user for data transfer
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.BlobRestoreStatus">
            <summary>
            Gets blob restore status
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AllowBlobPublicAccess">
            <summary>
            Gets or sets allow or disallow public access to all blobs or
            containers in the storage account. The default interpretation is
            true for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.MinimumTlsVersion">
            <summary>
            Gets or sets set the minimum TLS version to be permitted on
            requests to storage. The default interpretation is TLS 1.0 for this
            property. Possible values include: 'TLS1_0', 'TLS1_1', 'TLS1_2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AllowSharedKeyAccess">
            <summary>
            Gets or sets indicates whether the storage account permits requests
            to be authorized with the account access key via Shared Key. If
            false, then all requests, including shared access signatures, must
            be authorized with Azure Active Directory (Azure AD). The default
            value is null, which is equivalent to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.EnableNfsV3">
            <summary>
            Gets or sets NFS 3.0 protocol support enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AllowCrossTenantReplication">
            <summary>
            Gets or sets allow or disallow cross AAD tenant object replication.
            The default interpretation is true for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.DefaultToOAuthAuthentication">
            <summary>
            Gets or sets a boolean flag which indicates whether the default
            authentication is OAuth or not. The default interpretation is false
            for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.PublicNetworkAccess">
            <summary>
            Gets or sets allow or disallow public network access to Storage
            Account. Value is optional but if passed in, must be 'Enabled' or
            'Disabled'. Possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.ImmutableStorageWithVersioning">
            <summary>
            Gets or sets the property is immutable and can only be set to true
            at the account creation time. When set to true, it enables object
            level immutability for all the containers in the account by
            default.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.AllowedCopyScope">
            <summary>
            Gets or sets restrict copy to and from Storage Accounts within an
            AAD tenant or with Private Links to the same VNet. Possible values
            include: 'PrivateLink', 'AAD'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.StorageAccountSkuConversionStatus">
            <summary>
            Gets or sets this property is readOnly and is set by server during
            asynchronous storage account sku conversion operations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccount.DnsEndpointType">
            <summary>
            Gets or sets allows you to specify the type of endpoint. Set this
            to AzureDNSZone to create a large number of accounts in a single
            subscription, which creates accounts in an Azure DNS Zone and the
            endpoint URL will have an alphanumeric DNS Zone identifier.
            Possible values include: 'Standard', 'AzureDnsZone'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccount.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters">
            <summary>
            The parameters used to check the availability of the storage account
            name.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.#ctor">
            <summary>
            Initializes a new instance of the
            StorageAccountCheckNameAvailabilityParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            StorageAccountCheckNameAvailabilityParameters class.
            </summary>
            <param name="name">The storage account name.</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.#cctor">
            <summary>
            Static constructor for
            StorageAccountCheckNameAvailabilityParameters class.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.Name">
            <summary>
            Gets or sets the storage account name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.Type">
            <summary>
            The type of resource, Microsoft.Storage/storageAccounts
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCheckNameAvailabilityParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters">
            <summary>
            The parameters used when creating a storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountCreateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ExtendedLocation,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Identity,System.String,System.String,Microsoft.Azure.Management.Storage.Models.SasPolicy,Microsoft.Azure.Management.Storage.Models.KeyPolicy,Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,Microsoft.Azure.Management.Storage.Models.NetworkRuleSet,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier},Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.Storage.Models.RoutingPreference,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount,System.String)">
            <summary>
            Initializes a new instance of the StorageAccountCreateParameters
            class.
            </summary>
            <param name="sku">Required. Gets or sets the SKU name.</param>
            <param name="kind">Required. Indicates the type of storage account.
            Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
            'FileStorage', 'BlockBlobStorage'</param>
            <param name="location">Required. Gets or sets the location of the
            resource. This will be one of the supported and registered Azure
            Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo
            region of a resource cannot be changed once it is created, but if
            an identical geo region is specified on update, the request will
            succeed.</param>
            <param name="extendedLocation">Optional. Set the extended location
            of the resource. If not set, the storage account will be created in
            Azure main region. Otherwise it will be created in the specified
            extended location</param>
            <param name="tags">Gets or sets a list of key value pairs that
            describe the resource. These tags can be used for viewing and
            grouping this resource (across resource groups). A maximum of 15
            tags can be provided for a resource. Each tag must have a key with
            a length no greater than 128 characters and a value with a length
            no greater than 256 characters.</param>
            <param name="identity">The identity of the resource.</param>
            <param name="allowedCopyScope">Restrict copy to and from Storage
            Accounts within an AAD tenant or with Private Links to the same
            VNet. Possible values include: 'PrivateLink', 'AAD'</param>
            <param name="publicNetworkAccess">Allow or disallow public network
            access to Storage Account. Value is optional but if passed in, must
            be 'Enabled' or 'Disabled'. Possible values include: 'Enabled',
            'Disabled'</param>
            <param name="sasPolicy">SasPolicy assigned to the storage
            account.</param>
            <param name="keyPolicy">KeyPolicy assigned to the storage
            account.</param>
            <param name="customDomain">User domain assigned to the storage
            account. Name is the CNAME source. Only one custom domain is
            supported per storage account at this time. To clear the existing
            custom domain, use an empty string for the custom domain name
            property.</param>
            <param name="encryption">Encryption settings to be used for
            server-side encryption for the storage account.</param>
            <param name="networkRuleSet">Network rule set</param>
            <param name="accessTier">Required for storage accounts where kind =
            BlobStorage. The access tier is used for billing. The 'Premium'
            access tier is the default value for premium block blobs storage
            account type and it cannot be changed for the premium block blobs
            storage account type. Possible values include: 'Hot', 'Cool',
            'Premium'</param>
            <param name="azureFilesIdentityBasedAuthentication">Provides the
            identity based authentication settings for Azure Files.</param>
            <param name="enableHttpsTrafficOnly">Allows https traffic only to
            storage service if sets to true. The default value is true since
            API version 2019-04-01.</param>
            <param name="isSftpEnabled">Enables Secure File Transfer Protocol,
            if set to true</param>
            <param name="isLocalUserEnabled">Enables local users feature, if
            set to true</param>
            <param name="isHnsEnabled">Account HierarchicalNamespace enabled if
            sets to true.</param>
            <param name="largeFileSharesState">Allow large file shares if sets
            to Enabled. It cannot be disabled once it is enabled. Possible
            values include: 'Disabled', 'Enabled'</param>
            <param name="routingPreference">Maintains information about the
            network routing choice opted by the user for data transfer</param>
            <param name="allowBlobPublicAccess">Allow or disallow public access
            to all blobs or containers in the storage account. The default
            interpretation is true for this property.</param>
            <param name="minimumTlsVersion">Set the minimum TLS version to be
            permitted on requests to storage. The default interpretation is TLS
            1.0 for this property. Possible values include: 'TLS1_0', 'TLS1_1',
            'TLS1_2'</param>
            <param name="allowSharedKeyAccess">Indicates whether the storage
            account permits requests to be authorized with the account access
            key via Shared Key. If false, then all requests, including shared
            access signatures, must be authorized with Azure Active Directory
            (Azure AD). The default value is null, which is equivalent to
            true.</param>
            <param name="enableNfsV3">NFS 3.0 protocol support enabled if set
            to true.</param>
            <param name="allowCrossTenantReplication">Allow or disallow cross
            AAD tenant object replication. The default interpretation is true
            for this property.</param>
            <param name="defaultToOAuthAuthentication">A boolean flag which
            indicates whether the default authentication is OAuth or not. The
            default interpretation is false for this property.</param>
            <param name="immutableStorageWithVersioning">The property is
            immutable and can only be set to true at the account creation time.
            When set to true, it enables object level immutability for all the
            new containers in the account by default.</param>
            <param name="dnsEndpointType">Allows you to specify the type of
            endpoint. Set this to AzureDNSZone to create a large number of
            accounts in a single subscription, which creates accounts in an
            Azure DNS Zone and the endpoint URL will have an alphanumeric DNS
            Zone identifier. Possible values include: 'Standard',
            'AzureDnsZone'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Sku">
            <summary>
            Gets or sets required. Gets or sets the SKU name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Kind">
            <summary>
            Gets or sets required. Indicates the type of storage account.
            Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
            'FileStorage', 'BlockBlobStorage'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Location">
            <summary>
            Gets or sets required. Gets or sets the location of the resource.
            This will be one of the supported and registered Azure Geo Regions
            (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
            resource cannot be changed once it is created, but if an identical
            geo region is specified on update, the request will succeed.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.ExtendedLocation">
            <summary>
            Gets or sets optional. Set the extended location of the resource.
            If not set, the storage account will be created in Azure main
            region. Otherwise it will be created in the specified extended
            location
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Tags">
            <summary>
            Gets or sets a list of key value pairs that describe the resource.
            These tags can be used for viewing and grouping this resource
            (across resource groups). A maximum of 15 tags can be provided for
            a resource. Each tag must have a key with a length no greater than
            128 characters and a value with a length no greater than 256
            characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AllowedCopyScope">
            <summary>
            Gets or sets restrict copy to and from Storage Accounts within an
            AAD tenant or with Private Links to the same VNet. Possible values
            include: 'PrivateLink', 'AAD'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.PublicNetworkAccess">
            <summary>
            Gets or sets allow or disallow public network access to Storage
            Account. Value is optional but if passed in, must be 'Enabled' or
            'Disabled'. Possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.SasPolicy">
            <summary>
            Gets or sets sasPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.KeyPolicy">
            <summary>
            Gets or sets keyPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.CustomDomain">
            <summary>
            Gets or sets user domain assigned to the storage account. Name is
            the CNAME source. Only one custom domain is supported per storage
            account at this time. To clear the existing custom domain, use an
            empty string for the custom domain name property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Encryption">
            <summary>
            Gets or sets encryption settings to be used for server-side
            encryption for the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.NetworkRuleSet">
            <summary>
            Gets or sets network rule set
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AccessTier">
            <summary>
            Gets or sets required for storage accounts where kind =
            BlobStorage. The access tier is used for billing. The 'Premium'
            access tier is the default value for premium block blobs storage
            account type and it cannot be changed for the premium block blobs
            storage account type. Possible values include: 'Hot', 'Cool',
            'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AzureFilesIdentityBasedAuthentication">
            <summary>
            Gets or sets provides the identity based authentication settings
            for Azure Files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.EnableHttpsTrafficOnly">
            <summary>
            Gets or sets allows https traffic only to storage service if sets
            to true. The default value is true since API version 2019-04-01.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.IsSftpEnabled">
            <summary>
            Gets or sets enables Secure File Transfer Protocol, if set to true
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.IsLocalUserEnabled">
            <summary>
            Gets or sets enables local users feature, if set to true
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.IsHnsEnabled">
            <summary>
            Gets or sets account HierarchicalNamespace enabled if sets to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.LargeFileSharesState">
            <summary>
            Gets or sets allow large file shares if sets to Enabled. It cannot
            be disabled once it is enabled. Possible values include:
            'Disabled', 'Enabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.RoutingPreference">
            <summary>
            Gets or sets maintains information about the network routing choice
            opted by the user for data transfer
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AllowBlobPublicAccess">
            <summary>
            Gets or sets allow or disallow public access to all blobs or
            containers in the storage account. The default interpretation is
            true for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.MinimumTlsVersion">
            <summary>
            Gets or sets set the minimum TLS version to be permitted on
            requests to storage. The default interpretation is TLS 1.0 for this
            property. Possible values include: 'TLS1_0', 'TLS1_1', 'TLS1_2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AllowSharedKeyAccess">
            <summary>
            Gets or sets indicates whether the storage account permits requests
            to be authorized with the account access key via Shared Key. If
            false, then all requests, including shared access signatures, must
            be authorized with Azure Active Directory (Azure AD). The default
            value is null, which is equivalent to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.EnableNfsV3">
            <summary>
            Gets or sets NFS 3.0 protocol support enabled if set to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.AllowCrossTenantReplication">
            <summary>
            Gets or sets allow or disallow cross AAD tenant object replication.
            The default interpretation is true for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.DefaultToOAuthAuthentication">
            <summary>
            Gets or sets a boolean flag which indicates whether the default
            authentication is OAuth or not. The default interpretation is false
            for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.ImmutableStorageWithVersioning">
            <summary>
            Gets or sets the property is immutable and can only be set to true
            at the account creation time. When set to true, it enables object
            level immutability for all the new containers in the account by
            default.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.DnsEndpointType">
            <summary>
            Gets or sets allows you to specify the type of endpoint. Set this
            to AzureDNSZone to create a large number of accounts in a single
            subscription, which creates accounts in an Azure DNS Zone and the
            endpoint URL will have an alphanumeric DNS Zone identifier.
            Possible values include: 'Standard', 'AzureDnsZone'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountExpand">
            <summary>
            Defines values for StorageAccountExpand.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints">
            <summary>
            The URIs that are used to perform a retrieval of a public blob, file,
            web or dfs object via a internet routing endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountInternetEndpoints
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StorageAccountInternetEndpoints
            class.
            </summary>
            <param name="blob">Gets the blob endpoint.</param>
            <param name="file">Gets the file endpoint.</param>
            <param name="web">Gets the web endpoint.</param>
            <param name="dfs">Gets the dfs endpoint.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.Blob">
            <summary>
            Gets the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.File">
            <summary>
            Gets the file endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.Web">
            <summary>
            Gets the web endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountInternetEndpoints.Dfs">
            <summary>
            Gets the dfs endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountKey">
            <summary>
            An access key for the storage account.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountKey class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.#ctor(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.KeyPermission},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the StorageAccountKey class.
            </summary>
            <param name="keyName">Name of the key.</param>
            <param name="value">Base 64-encoded value of the key.</param>
            <param name="permissions">Permissions for the key -- read-only or
            full permissions. Possible values include: 'Read', 'Full'</param>
            <param name="creationTime">Creation time of the key, in round trip
            date format.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.KeyName">
            <summary>
            Gets name of the key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.Value">
            <summary>
            Gets base 64-encoded value of the key.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.Permissions">
            <summary>
            Gets permissions for the key -- read-only or full permissions.
            Possible values include: 'Read', 'Full'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountKey.CreationTime">
            <summary>
            Gets creation time of the key, in round trip date format.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult">
            <summary>
            The response from the ListKeys operation.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountListKeysResult
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult.#ctor(System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.StorageAccountKey})">
            <summary>
            Initializes a new instance of the StorageAccountListKeysResult
            class.
            </summary>
            <param name="keys">Gets the list of storage account keys and their
            properties for the specified storage account.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountListKeysResult.Keys">
            <summary>
            Gets the list of storage account keys and their properties for the
            specified storage account.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints">
            <summary>
            The URIs that are used to perform a retrieval of a public blob, queue,
            table, web or dfs object via a microsoft routing endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountMicrosoftEndpoints
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StorageAccountMicrosoftEndpoints
            class.
            </summary>
            <param name="blob">Gets the blob endpoint.</param>
            <param name="queue">Gets the queue endpoint.</param>
            <param name="table">Gets the table endpoint.</param>
            <param name="file">Gets the file endpoint.</param>
            <param name="web">Gets the web endpoint.</param>
            <param name="dfs">Gets the dfs endpoint.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Blob">
            <summary>
            Gets the blob endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Queue">
            <summary>
            Gets the queue endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Table">
            <summary>
            Gets the table endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.File">
            <summary>
            Gets the file endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Web">
            <summary>
            Gets the web endpoint.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountMicrosoftEndpoints.Dfs">
            <summary>
            Gets the dfs endpoint.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters">
            <summary>
            The parameters used to regenerate the storage account key.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.#ctor">
            <summary>
            Initializes a new instance of the
            StorageAccountRegenerateKeyParameters class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            StorageAccountRegenerateKeyParameters class.
            </summary>
            <param name="keyName">The name of storage keys that want to be
            regenerated, possible values are key1, key2, kerb1, kerb2.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.KeyName">
            <summary>
            Gets or sets the name of storage keys that want to be regenerated,
            possible values are key1, key2, kerb1, kerb2.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountRegenerateKeyParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus">
            <summary>
            This defines the sku conversion status object for asynchronous sku
            conversions.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountSkuConversionStatus
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StorageAccountSkuConversionStatus
            class.
            </summary>
            <param name="skuConversionStatus">This property indicates the
            current sku conversion status. Possible values include:
            'InProgress', 'Succeeded', 'Failed'</param>
            <param name="targetSkuName">This property represents the target sku
            name to which the account sku is being converted asynchronously.
            Possible values include: 'Standard_LRS', 'Standard_GRS',
            'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS', 'Premium_ZRS',
            'Standard_GZRS', 'Standard_RAGZRS'</param>
            <param name="startTime">This property represents the sku conversion
            start time.</param>
            <param name="endTime">This property represents the sku conversion
            end time.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus.SkuConversionStatus">
            <summary>
            Gets this property indicates the current sku conversion status.
            Possible values include: 'InProgress', 'Succeeded', 'Failed'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus.TargetSkuName">
            <summary>
            Gets or sets this property represents the target sku name to which
            the account sku is being converted asynchronously. Possible values
            include: 'Standard_LRS', 'Standard_GRS', 'Standard_RAGRS',
            'Standard_ZRS', 'Premium_LRS', 'Premium_ZRS', 'Standard_GZRS',
            'Standard_RAGZRS'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus.StartTime">
            <summary>
            Gets this property represents the sku conversion start time.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountSkuConversionStatus.EndTime">
            <summary>
            Gets this property represents the sku conversion end time.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters">
            <summary>
            The parameters that can be provided when updating the storage account
            properties.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor">
            <summary>
            Initializes a new instance of the StorageAccountUpdateParameters
            class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.#ctor(Microsoft.Azure.Management.Storage.Models.Sku,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Azure.Management.Storage.Models.Identity,Microsoft.Azure.Management.Storage.Models.CustomDomain,Microsoft.Azure.Management.Storage.Models.Encryption,Microsoft.Azure.Management.Storage.Models.SasPolicy,Microsoft.Azure.Management.Storage.Models.KeyPolicy,System.Nullable{Microsoft.Azure.Management.Storage.Models.AccessTier},Microsoft.Azure.Management.Storage.Models.AzureFilesIdentityBasedAuthentication,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},Microsoft.Azure.Management.Storage.Models.NetworkRuleSet,System.String,Microsoft.Azure.Management.Storage.Models.RoutingPreference,System.Nullable{System.Boolean},System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,Microsoft.Azure.Management.Storage.Models.ImmutableStorageAccount,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the StorageAccountUpdateParameters
            class.
            </summary>
            <param name="sku">Gets or sets the SKU name. Note that the SKU name
            cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor
            can accounts of those SKU names be updated to any other
            value.</param>
            <param name="tags">Gets or sets a list of key value pairs that
            describe the resource. These tags can be used in viewing and
            grouping this resource (across resource groups). A maximum of 15
            tags can be provided for a resource. Each tag must have a key no
            greater in length than 128 characters and a value no greater in
            length than 256 characters.</param>
            <param name="identity">The identity of the resource.</param>
            <param name="customDomain">Custom domain assigned to the storage
            account by the user. Name is the CNAME source. Only one custom
            domain is supported per storage account at this time. To clear the
            existing custom domain, use an empty string for the custom domain
            name property.</param>
            <param name="encryption">Not applicable. Azure Storage encryption
            at rest is enabled by default for all storage accounts and cannot
            be disabled.</param>
            <param name="sasPolicy">SasPolicy assigned to the storage
            account.</param>
            <param name="keyPolicy">KeyPolicy assigned to the storage
            account.</param>
            <param name="accessTier">Required for storage accounts where kind =
            BlobStorage. The access tier is used for billing. The 'Premium'
            access tier is the default value for premium block blobs storage
            account type and it cannot be changed for the premium block blobs
            storage account type. Possible values include: 'Hot', 'Cool',
            'Premium'</param>
            <param name="azureFilesIdentityBasedAuthentication">Provides the
            identity based authentication settings for Azure Files.</param>
            <param name="enableHttpsTrafficOnly">Allows https traffic only to
            storage service if sets to true.</param>
            <param name="isSftpEnabled">Enables Secure File Transfer Protocol,
            if set to true</param>
            <param name="isLocalUserEnabled">Enables local users feature, if
            set to true</param>
            <param name="networkRuleSet">Network rule set</param>
            <param name="largeFileSharesState">Allow large file shares if sets
            to Enabled. It cannot be disabled once it is enabled. Possible
            values include: 'Disabled', 'Enabled'</param>
            <param name="routingPreference">Maintains information about the
            network routing choice opted by the user for data transfer</param>
            <param name="allowBlobPublicAccess">Allow or disallow public access
            to all blobs or containers in the storage account. The default
            interpretation is true for this property.</param>
            <param name="minimumTlsVersion">Set the minimum TLS version to be
            permitted on requests to storage. The default interpretation is TLS
            1.0 for this property. Possible values include: 'TLS1_0', 'TLS1_1',
            'TLS1_2'</param>
            <param name="allowSharedKeyAccess">Indicates whether the storage
            account permits requests to be authorized with the account access
            key via Shared Key. If false, then all requests, including shared
            access signatures, must be authorized with Azure Active Directory
            (Azure AD). The default value is null, which is equivalent to
            true.</param>
            <param name="allowCrossTenantReplication">Allow or disallow cross
            AAD tenant object replication. The default interpretation is true
            for this property.</param>
            <param name="defaultToOAuthAuthentication">A boolean flag which
            indicates whether the default authentication is OAuth or not. The
            default interpretation is false for this property.</param>
            <param name="publicNetworkAccess">Allow or disallow public network
            access to Storage Account. Value is optional but if passed in, must
            be 'Enabled' or 'Disabled'. Possible values include: 'Enabled',
            'Disabled'</param>
            <param name="immutableStorageWithVersioning">The property is
            immutable and can only be set to true at the account creation time.
            When set to true, it enables object level immutability for all the
            containers in the account by default.</param>
            <param name="allowedCopyScope">Restrict copy to and from Storage
            Accounts within an AAD tenant or with Private Links to the same
            VNet. Possible values include: 'PrivateLink', 'AAD'</param>
            <param name="dnsEndpointType">Allows you to specify the type of
            endpoint. Set this to AzureDNSZone to create a large number of
            accounts in a single subscription, which creates accounts in an
            Azure DNS Zone and the endpoint URL will have an alphanumeric DNS
            Zone identifier. Possible values include: 'Standard',
            'AzureDnsZone'</param>
            <param name="kind">Optional. Indicates the type of storage account.
            Currently only StorageV2 value supported by server. Possible values
            include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Sku">
            <summary>
            Gets or sets the SKU name. Note that the SKU name cannot be updated
            to Standard_ZRS, Premium_LRS or Premium_ZRS, nor can accounts of
            those SKU names be updated to any other value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Tags">
            <summary>
            Gets or sets a list of key value pairs that describe the resource.
            These tags can be used in viewing and grouping this resource
            (across resource groups). A maximum of 15 tags can be provided for
            a resource. Each tag must have a key no greater in length than 128
            characters and a value no greater in length than 256 characters.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Identity">
            <summary>
            Gets or sets the identity of the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.CustomDomain">
            <summary>
            Gets or sets custom domain assigned to the storage account by the
            user. Name is the CNAME source. Only one custom domain is supported
            per storage account at this time. To clear the existing custom
            domain, use an empty string for the custom domain name property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Encryption">
            <summary>
            Gets or sets not applicable. Azure Storage encryption at rest is
            enabled by default for all storage accounts and cannot be disabled.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.SasPolicy">
            <summary>
            Gets or sets sasPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.KeyPolicy">
            <summary>
            Gets or sets keyPolicy assigned to the storage account.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AccessTier">
            <summary>
            Gets or sets required for storage accounts where kind =
            BlobStorage. The access tier is used for billing. The 'Premium'
            access tier is the default value for premium block blobs storage
            account type and it cannot be changed for the premium block blobs
            storage account type. Possible values include: 'Hot', 'Cool',
            'Premium'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AzureFilesIdentityBasedAuthentication">
            <summary>
            Gets or sets provides the identity based authentication settings
            for Azure Files.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.EnableHttpsTrafficOnly">
            <summary>
            Gets or sets allows https traffic only to storage service if sets
            to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.IsSftpEnabled">
            <summary>
            Gets or sets enables Secure File Transfer Protocol, if set to true
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.IsLocalUserEnabled">
            <summary>
            Gets or sets enables local users feature, if set to true
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.NetworkRuleSet">
            <summary>
            Gets or sets network rule set
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.LargeFileSharesState">
            <summary>
            Gets or sets allow large file shares if sets to Enabled. It cannot
            be disabled once it is enabled. Possible values include:
            'Disabled', 'Enabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.RoutingPreference">
            <summary>
            Gets or sets maintains information about the network routing choice
            opted by the user for data transfer
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AllowBlobPublicAccess">
            <summary>
            Gets or sets allow or disallow public access to all blobs or
            containers in the storage account. The default interpretation is
            true for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.MinimumTlsVersion">
            <summary>
            Gets or sets set the minimum TLS version to be permitted on
            requests to storage. The default interpretation is TLS 1.0 for this
            property. Possible values include: 'TLS1_0', 'TLS1_1', 'TLS1_2'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AllowSharedKeyAccess">
            <summary>
            Gets or sets indicates whether the storage account permits requests
            to be authorized with the account access key via Shared Key. If
            false, then all requests, including shared access signatures, must
            be authorized with Azure Active Directory (Azure AD). The default
            value is null, which is equivalent to true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AllowCrossTenantReplication">
            <summary>
            Gets or sets allow or disallow cross AAD tenant object replication.
            The default interpretation is true for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.DefaultToOAuthAuthentication">
            <summary>
            Gets or sets a boolean flag which indicates whether the default
            authentication is OAuth or not. The default interpretation is false
            for this property.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.PublicNetworkAccess">
            <summary>
            Gets or sets allow or disallow public network access to Storage
            Account. Value is optional but if passed in, must be 'Enabled' or
            'Disabled'. Possible values include: 'Enabled', 'Disabled'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.ImmutableStorageWithVersioning">
            <summary>
            Gets or sets the property is immutable and can only be set to true
            at the account creation time. When set to true, it enables object
            level immutability for all the containers in the account by
            default.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.AllowedCopyScope">
            <summary>
            Gets or sets restrict copy to and from Storage Accounts within an
            AAD tenant or with Private Links to the same VNet. Possible values
            include: 'PrivateLink', 'AAD'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.DnsEndpointType">
            <summary>
            Gets or sets allows you to specify the type of endpoint. Set this
            to AzureDNSZone to create a large number of accounts in a single
            subscription, which creates accounts in an Azure DNS Zone and the
            endpoint URL will have an alphanumeric DNS Zone identifier.
            Possible values include: 'Standard', 'AzureDnsZone'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Kind">
            <summary>
            Gets or sets optional. Indicates the type of storage account.
            Currently only StorageV2 value supported by server. Possible values
            include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
            'BlockBlobStorage'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageQueue.#ctor">
            <summary>
            Initializes a new instance of the StorageQueue class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.StorageQueue.#ctor(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the StorageQueue class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="metadata">A name-value pair that represents queue
            metadata.</param>
            <param name="approximateMessageCount">Integer indicating an
            approximate number of messages in the queue. This number is not
            lower than the actual number of messages in the queue, but could be
            higher.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageQueue.Metadata">
            <summary>
            Gets or sets a name-value pair that represents queue metadata.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.StorageQueue.ApproximateMessageCount">
            <summary>
            Gets integer indicating an approximate number of messages in the
            queue. This number is not lower than the actual number of messages
            in the queue, but could be higher.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.SystemData">
            <summary>
            Metadata pertaining to creation and last modification of the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SystemData.#ctor">
            <summary>
            Initializes a new instance of the SystemData class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.SystemData.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the SystemData class.
            </summary>
            <param name="createdBy">The identity that created the
            resource.</param>
            <param name="createdByType">The type of identity that created the
            resource. Possible values include: 'User', 'Application',
            'ManagedIdentity', 'Key'</param>
            <param name="createdAt">The timestamp of resource creation
            (UTC).</param>
            <param name="lastModifiedBy">The identity that last modified the
            resource.</param>
            <param name="lastModifiedByType">The type of identity that last
            modified the resource. Possible values include: 'User',
            'Application', 'ManagedIdentity', 'Key'</param>
            <param name="lastModifiedAt">The timestamp of resource last
            modification (UTC)</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SystemData.CreatedBy">
            <summary>
            Gets or sets the identity that created the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SystemData.CreatedByType">
            <summary>
            Gets or sets the type of identity that created the resource.
            Possible values include: 'User', 'Application', 'ManagedIdentity',
            'Key'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SystemData.CreatedAt">
            <summary>
            Gets or sets the timestamp of resource creation (UTC).
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SystemData.LastModifiedBy">
            <summary>
            Gets or sets the identity that last modified the resource.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SystemData.LastModifiedByType">
            <summary>
            Gets or sets the type of identity that last modified the resource.
            Possible values include: 'User', 'Application', 'ManagedIdentity',
            'Key'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.SystemData.LastModifiedAt">
            <summary>
            Gets or sets the timestamp of resource last modification (UTC)
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Table">
            <summary>
            Properties of the table, including Id, resource name, resource type.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Table.#ctor">
            <summary>
            Initializes a new instance of the Table class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Table.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier})">
            <summary>
            Initializes a new instance of the Table class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="tableName">Table name under the specified
            account</param>
            <param name="signedIdentifiers">List of stored access policies
            specified on the table.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Table.TableName">
            <summary>
            Gets table name under the specified account
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Table.SignedIdentifiers">
            <summary>
            Gets or sets list of stored access policies specified on the table.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy">
            <summary>
            Table Access Policy Properties Object.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy.#ctor">
            <summary>
            Initializes a new instance of the TableAccessPolicy class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the TableAccessPolicy class.
            </summary>
            <param name="permission">Required. List of abbreviated permissions.
            Supported permission values include 'r','a','u','d'</param>
            <param name="startTime">Start time of the access policy</param>
            <param name="expiryTime">Expiry time of the access policy</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy.StartTime">
            <summary>
            Gets or sets start time of the access policy
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy.ExpiryTime">
            <summary>
            Gets or sets expiry time of the access policy
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy.Permission">
            <summary>
            Gets or sets required. List of abbreviated permissions. Supported
            permission values include 'r','a','u','d'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableAccessPolicy.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.TableServiceProperties">
            <summary>
            The properties of a storage account’s Table service.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableServiceProperties.#ctor">
            <summary>
            Initializes a new instance of the TableServiceProperties class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableServiceProperties.#ctor(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules)">
            <summary>
            Initializes a new instance of the TableServiceProperties class.
            </summary>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="cors">Specifies CORS rules for the Table service. You
            can include up to five CorsRule elements in the request. If no
            CorsRule elements are included in the request body, all CORS rules
            will be deleted, and CORS will be disabled for the Table
            service.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TableServiceProperties.Cors">
            <summary>
            Gets or sets specifies CORS rules for the Table service. You can
            include up to five CorsRule elements in the request. If no CorsRule
            elements are included in the request body, all CORS rules will be
            deleted, and CORS will be disabled for the Table service.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier">
            <summary>
            Object to set Table Access Policy.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier.#ctor">
            <summary>
            Initializes a new instance of the TableSignedIdentifier class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier.#ctor(System.String,Microsoft.Azure.Management.Storage.Models.TableAccessPolicy)">
            <summary>
            Initializes a new instance of the TableSignedIdentifier class.
            </summary>
            <param name="id">unique-64-character-value of the stored access
            policy.</param>
            <param name="accessPolicy">Access policy</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier.Id">
            <summary>
            Gets or sets unique-64-character-value of the stored access policy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier.AccessPolicy">
            <summary>
            Gets or sets access policy
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.TagFilter">
            <summary>
            Blob index tag based filtering for blob objects
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TagFilter.#ctor">
            <summary>
            Initializes a new instance of the TagFilter class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TagFilter.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TagFilter class.
            </summary>
            <param name="name">This is the filter tag name, it can have 1 - 128
            characters</param>
            <param name="op">This is the comparison operator which is used for
            object comparison and filtering. Only == (equality operator) is
            currently supported</param>
            <param name="value">This is the filter tag value field used for tag
            based filtering, it can have 0 - 256 characters</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagFilter.Name">
            <summary>
            Gets or sets this is the filter tag name, it can have 1 - 128
            characters
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagFilter.Op">
            <summary>
            Gets or sets this is the comparison operator which is used for
            object comparison and filtering. Only == (equality operator) is
            currently supported
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagFilter.Value">
            <summary>
            Gets or sets this is the filter tag value field used for tag based
            filtering, it can have 0 - 256 characters
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TagFilter.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.TagProperty">
            <summary>
            A tag of the LegalHold of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TagProperty.#ctor">
            <summary>
            Initializes a new instance of the TagProperty class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TagProperty.#ctor(System.String,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the TagProperty class.
            </summary>
            <param name="tag">The tag value.</param>
            <param name="timestamp">Returns the date and time the tag was
            added.</param>
            <param name="objectIdentifier">Returns the Object ID of the user
            who added the tag.</param>
            <param name="tenantId">Returns the Tenant ID that issued the token
            for the user who added the tag.</param>
            <param name="upn">Returns the User Principal Name of the user who
            added the tag.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagProperty.Tag">
            <summary>
            Gets the tag value.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagProperty.Timestamp">
            <summary>
            Gets returns the date and time the tag was added.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagProperty.ObjectIdentifier">
            <summary>
            Gets returns the Object ID of the user who added the tag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagProperty.TenantId">
            <summary>
            Gets returns the Tenant ID that issued the token for the user who
            added the tag.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TagProperty.Upn">
            <summary>
            Gets returns the User Principal Name of the user who added the tag.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.TrackedResource">
            <summary>
            Tracked Resource
            </summary>
            <remarks>
            The resource model definition for an Azure Resource Manager tracked top
            level resource which has 'tags' and a 'location'
            </remarks>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TrackedResource.#ctor">
            <summary>
            Initializes a new instance of the TrackedResource class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TrackedResource.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the TrackedResource class.
            </summary>
            <param name="location">The geo-location where the resource
            lives</param>
            <param name="id">Fully qualified resource ID for the resource. Ex -
            /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}</param>
            <param name="name">The name of the resource</param>
            <param name="type">The type of the resource. E.g.
            "Microsoft.Compute/virtualMachines" or
            "Microsoft.Storage/storageAccounts"</param>
            <param name="tags">Resource tags.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TrackedResource.Tags">
            <summary>
            Gets or sets resource tags.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.TrackedResource.Location">
            <summary>
            Gets or sets the geo-location where the resource lives
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.TrackedResource.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty">
            <summary>
            An update history of the ImmutabilityPolicy of a blob container.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.#ctor">
            <summary>
            Initializes a new instance of the UpdateHistoryProperty class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the UpdateHistoryProperty class.
            </summary>
            <param name="update">The ImmutabilityPolicy update type of a blob
            container, possible values include: put, lock and extend. Possible
            values include: 'put', 'lock', 'extend'</param>
            <param name="immutabilityPeriodSinceCreationInDays">The
            immutability period for the blobs in the container since the policy
            creation, in days.</param>
            <param name="timestamp">Returns the date and time the
            ImmutabilityPolicy was updated.</param>
            <param name="objectIdentifier">Returns the Object ID of the user
            who updated the ImmutabilityPolicy.</param>
            <param name="tenantId">Returns the Tenant ID that issued the token
            for the user who updated the ImmutabilityPolicy.</param>
            <param name="upn">Returns the User Principal Name of the user who
            updated the ImmutabilityPolicy.</param>
            <param name="allowProtectedAppendWrites">This property can only be
            changed for unlocked time-based retention policies. When enabled,
            new blocks can be written to an append blob while maintaining
            immutability protection and compliance. Only new blocks can be
            added and any existing blocks cannot be modified or deleted. This
            property cannot be changed with ExtendImmutabilityPolicy
            API.</param>
            <param name="allowProtectedAppendWritesAll">This property can only
            be changed for unlocked time-based retention policies. When
            enabled, new blocks can be written to both 'Append and Bock Blobs'
            while maintaining immutability protection and compliance. Only new
            blocks can be added and any existing blocks cannot be modified or
            deleted. This property cannot be changed with
            ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and
            'allowProtectedAppendWritesAll' properties are mutually
            exclusive.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.Update">
            <summary>
            Gets the ImmutabilityPolicy update type of a blob container,
            possible values include: put, lock and extend. Possible values
            include: 'put', 'lock', 'extend'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.ImmutabilityPeriodSinceCreationInDays">
            <summary>
            Gets the immutability period for the blobs in the container since
            the policy creation, in days.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.Timestamp">
            <summary>
            Gets returns the date and time the ImmutabilityPolicy was updated.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.ObjectIdentifier">
            <summary>
            Gets returns the Object ID of the user who updated the
            ImmutabilityPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.TenantId">
            <summary>
            Gets returns the Tenant ID that issued the token for the user who
            updated the ImmutabilityPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.Upn">
            <summary>
            Gets returns the User Principal Name of the user who updated the
            ImmutabilityPolicy.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.AllowProtectedAppendWrites">
            <summary>
            Gets or sets this property can only be changed for unlocked
            time-based retention policies. When enabled, new blocks can be
            written to an append blob while maintaining immutability protection
            and compliance. Only new blocks can be added and any existing
            blocks cannot be modified or deleted. This property cannot be
            changed with ExtendImmutabilityPolicy API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UpdateHistoryProperty.AllowProtectedAppendWritesAll">
            <summary>
            Gets or sets this property can only be changed for unlocked
            time-based retention policies. When enabled, new blocks can be
            written to both 'Append and Bock Blobs' while maintaining
            immutability protection and compliance. Only new blocks can be
            added and any existing blocks cannot be modified or deleted. This
            property cannot be changed with ExtendImmutabilityPolicy API. The
            'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll'
            properties are mutually exclusive.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.Usage">
            <summary>
            Describes Storage Resource Usage.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Usage.#ctor">
            <summary>
            Initializes a new instance of the Usage class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.Usage.#ctor(System.Nullable{Microsoft.Azure.Management.Storage.Models.UsageUnit},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.Azure.Management.Storage.Models.UsageName)">
            <summary>
            Initializes a new instance of the Usage class.
            </summary>
            <param name="unit">Gets the unit of measurement. Possible values
            include: 'Count', 'Bytes', 'Seconds', 'Percent', 'CountsPerSecond',
            'BytesPerSecond'</param>
            <param name="currentValue">Gets the current count of the allocated
            resources in the subscription.</param>
            <param name="limit">Gets the maximum count of the resources that
            can be allocated in the subscription.</param>
            <param name="name">Gets the name of the type of usage.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Usage.Unit">
            <summary>
            Gets the unit of measurement. Possible values include: 'Count',
            'Bytes', 'Seconds', 'Percent', 'CountsPerSecond', 'BytesPerSecond'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Usage.CurrentValue">
            <summary>
            Gets the current count of the allocated resources in the
            subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Usage.Limit">
            <summary>
            Gets the maximum count of the resources that can be allocated in
            the subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.Usage.Name">
            <summary>
            Gets the name of the type of usage.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.UsageName">
            <summary>
            The usage names that can be used; currently limited to StorageAccount.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.UsageName.#ctor">
            <summary>
            Initializes a new instance of the UsageName class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.UsageName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UsageName class.
            </summary>
            <param name="value">Gets a string describing the resource
            name.</param>
            <param name="localizedValue">Gets a localized string describing the
            resource name.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UsageName.Value">
            <summary>
            Gets a string describing the resource name.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UsageName.LocalizedValue">
            <summary>
            Gets a localized string describing the resource name.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.UsageUnit">
            <summary>
            Defines values for UsageUnit.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.UserAssignedIdentity">
            <summary>
            UserAssignedIdentity for the resource.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.UserAssignedIdentity.#ctor">
            <summary>
            Initializes a new instance of the UserAssignedIdentity class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.UserAssignedIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UserAssignedIdentity class.
            </summary>
            <param name="principalId">The principal ID of the identity.</param>
            <param name="clientId">The client ID of the identity.</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UserAssignedIdentity.PrincipalId">
            <summary>
            Gets the principal ID of the identity.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.UserAssignedIdentity.ClientId">
            <summary>
            Gets the client ID of the identity.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule">
            <summary>
            Virtual Network rule.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.#ctor">
            <summary>
            Initializes a new instance of the VirtualNetworkRule class.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.#ctor(System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.Action},System.String)">
            <summary>
            Initializes a new instance of the VirtualNetworkRule class.
            </summary>
            <param name="virtualNetworkResourceId">Resource ID of a subnet, for
            example:
            /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.</param>
            <param name="action">The action of virtual network rule. Possible
            values include: 'Allow'</param>
            <param name="state">Gets the state of virtual network rule.
            Possible values include: 'Provisioning', 'Deprovisioning',
            'Succeeded', 'Failed', 'NetworkSourceDeleted'</param>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.VirtualNetworkResourceId">
            <summary>
            Gets or sets resource ID of a subnet, for example:
            /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.Action">
            <summary>
            Gets or sets the action of virtual network rule. Possible values
            include: 'Allow'
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.State">
            <summary>
            Gets the state of virtual network rule. Possible values include:
            'Provisioning', 'Deprovisioning', 'Succeeded', 'Failed',
            'NetworkSourceDeleted'
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Models.VirtualNetworkRule.Validate">
            <summary>
            Validate the object.
            </summary>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown if validation fails
            </exception>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations">
            <summary>
            ObjectReplicationPoliciesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the ObjectReplicationPoliciesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List the object replication policies associated with the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations.CreateOrUpdateWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='properties'>
            The object replication policy set to a storage account. A unique policy ID
            will be created if absent.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the object replication policy associated with the specified storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions">
            <summary>
            Extension methods for ObjectReplicationPoliciesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String)">
            <summary>
            List the object replication policies associated with the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List the object replication policies associated with the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.String)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get the object replication policy of the storage account by policy ID.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.CreateOrUpdate(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy)">
            <summary>
            Create or update the object replication policy of the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='properties'>
            The object replication policy set to a storage account. A unique policy ID
            will be created if absent.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.CreateOrUpdateAsync(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ObjectReplicationPolicy,System.Threading.CancellationToken)">
            <summary>
            Create or update the object replication policy of the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='properties'>
            The object replication policy set to a storage account. A unique policy ID
            will be created if absent.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the object replication policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.ObjectReplicationPoliciesOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IObjectReplicationPoliciesOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the object replication policy associated with the specified storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='objectReplicationPolicyId'>
            For the destination account, provide the value 'default'. Configure the
            policy on the destination account first. For the source account, provide
            the value of the policy ID that is returned when you download the policy
            that was defined on the destination account. The policy is downloaded as a
            JSON file.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.Operations">
            <summary>
            Operations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Operations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the Operations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.Operations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.Operations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.OperationsExtensions">
            <summary>
            Extension methods for Operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.OperationsExtensions.List(Microsoft.Azure.Management.Storage.IOperations)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.OperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all of the available Storage Rest API operations.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations">
            <summary>
            PrivateEndpointConnectionsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the PrivateEndpointConnectionsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all the private endpoint connections associated with the storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations.PutWithHttpMessagesAsync(System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection associated with
            the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='properties'>
            The private endpoint connection properties.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the specified private endpoint connection associated with the
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions">
            <summary>
            Extension methods for PrivateEndpointConnectionsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.List(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String)">
            <summary>
            List all the private endpoint connections associated with the storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all the private endpoint connections associated with the storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String)">
            <summary>
            Gets the specified private endpoint connection associated with the storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the specified private endpoint connection associated with the storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.Put(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection)">
            <summary>
            Update the state of specified private endpoint connection associated with
            the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='properties'>
            The private endpoint connection properties.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.PutAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,Microsoft.Azure.Management.Storage.Models.PrivateEndpointConnection,System.Threading.CancellationToken)">
            <summary>
            Update the state of specified private endpoint connection associated with
            the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='properties'>
            The private endpoint connection properties.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the specified private endpoint connection associated with the
            storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateEndpointConnectionsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IPrivateEndpointConnectionsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the specified private endpoint connection associated with the
            storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='privateEndpointConnectionName'>
            The name of the private endpoint connection associated with the Azure
            resource
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperations">
            <summary>
            PrivateLinkResourcesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the PrivateLinkResourcesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperations.ListByStorageAccountWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources that need to be created for a storage
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions">
            <summary>
            Extension methods for PrivateLinkResourcesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions.ListByStorageAccount(Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations,System.String,System.String)">
            <summary>
            Gets the private link resources that need to be created for a storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.PrivateLinkResourcesOperationsExtensions.ListByStorageAccountAsync(Microsoft.Azure.Management.Storage.IPrivateLinkResourcesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the private link resources that need to be created for a storage
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.QueueOperations">
            <summary>
            QueueOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the QueueOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.QueueOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account
            if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the queue with the specified queue name, under the specified
            account if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.ListWithHttpMessagesAsync(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional, a maximum number of queues that should be included in a list
            queue response
            </param>
            <param name='filter'>
            Optional, When specified, only the queues with a name starting with the
            given filter will be listed.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.QueueOperationsExtensions">
            <summary>
            Extension methods for QueueOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new queue with the specified queue name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new queue with the specified queue name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Creates a new queue with the specified queue name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='metadata'>
            A name-value pair that represents queue metadata.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.Get(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String)">
            <summary>
            Gets the queue with the specified queue name, under the specified account
            if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the queue with the specified queue name, under the specified account
            if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the queue with the specified queue name, under the specified
            account if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the queue with the specified queue name, under the specified
            account if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='queueName'>
            A queue name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of lowercase alphanumeric and
            dash(-) characters only, it should begin and end with an alphanumeric
            character and it cannot have two consecutive dash(-) characters.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.List(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional, a maximum number of queues that should be included in a list
            queue response
            </param>
            <param name='filter'>
            Optional, When specified, only the queues with a name starting with the
            given filter will be listed.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='maxpagesize'>
            Optional, a maximum number of queues that should be included in a list
            queue response
            </param>
            <param name='filter'>
            Optional, When specified, only the queues with a name starting with the
            given filter will be listed.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IQueueOperations,System.String)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IQueueOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the queues under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.QueueServicesOperations">
            <summary>
            QueueServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the QueueServicesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.QueueServicesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all queue services for the storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Queue service. You can include up to five
            CorsRule elements in the request. If no CorsRule elements are included in
            the request body, all CORS rules will be deleted, and CORS will be disabled
            for the Queue service.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions">
            <summary>
            Extension methods for QueueServicesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions.List(Microsoft.Azure.Management.Storage.IQueueServicesOperations,System.String,System.String)">
            <summary>
            List all queue services for the storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IQueueServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all queue services for the storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions.SetServiceProperties(Microsoft.Azure.Management.Storage.IQueueServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules)">
            <summary>
            Sets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Queue service. You can include up to five
            CorsRule elements in the request. If no CorsRule elements are included in
            the request body, all CORS rules will be deleted, and CORS will be disabled
            for the Queue service.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IQueueServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Queue service. You can include up to five
            CorsRule elements in the request. If no CorsRule elements are included in
            the request body, all CORS rules will be deleted, and CORS will be disabled
            for the Queue service.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions.GetServiceProperties(Microsoft.Azure.Management.Storage.IQueueServicesOperations,System.String,System.String)">
            <summary>
            Gets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.QueueServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.IQueueServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Queue service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.SkusOperations">
            <summary>
            SkusOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.SkusOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the SkusOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.SkusOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.SkusOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.SkusOperationsExtensions">
            <summary>
            Extension methods for SkusOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.SkusOperationsExtensions.List(Microsoft.Azure.Management.Storage.ISkusOperations)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.SkusOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.ISkusOperations,System.Threading.CancellationToken)">
            <summary>
            Lists the available SKUs supported by Microsoft.Storage for given
            subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.StorageAccountsOperations">
            <summary>
            StorageAccountsOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the StorageAccountsOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageAccountsOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.CheckNameAvailabilityWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            </summary>
            <param name='name'>
            The storage account name.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.CreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.GetPropertiesWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not
            limited to name, SKU name, location, and account status. The ListKeys
            operation should be used to retrieve storage keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties. By
            default, data is not included when fetching properties. Currently we only
            support geoReplicationStats and blobRestoreStatus. Possible values include:
            'geoReplicationStats', 'blobRestoreStatus'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.UpdateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption, access
            tier, or tags for a storage account. It can also be used to map the account
            to a custom domain. Only one custom domain is supported per storage
            account; the replacement/change of custom domain is not supported. In order
            to replace an old custom domain, the old value must be cleared/unregistered
            before a new value can be set. The update of multiple properties is
            supported. This call does not change the storage keys for the account. If
            you want to change the storage account keys, use the regenerate keys
            operation. The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListWithHttpMessagesAsync(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListByResourceGroupWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListKeysWithHttpMessagesAsync(System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys or Kerberos keys (if active directory enabled) for
            the specified storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            Specifies type of the key to be listed. Possible value is kerb. Possible
            values include: 'kerb'
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.RegenerateKeyWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys or Kerberos keys for the specified
            storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible values are
            key1, key2, kerb1, kerb2.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListAccountSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListServiceSASWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.FailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.HierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest' or a
            hydration request 'HnsOnHydrationRequest'. The validation request will
            validate the migration whereas the hydration request will migrate the
            account.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.AbortHierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.RestoreBlobRangesWithHttpMessagesAsync(System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
            <param name='customHeaders'>
            The headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.RevokeUserDelegationKeysWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.BeginCreateWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.BeginFailoverWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.BeginHierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest' or a
            hydration request 'HnsOnHydrationRequest'. The validation request will
            validate the migration whereas the hydration request will migrate the
            account.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.BeginAbortHierarchicalNamespaceMigrationWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Azure.Management.Storage.Models.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.BeginRestoreBlobRangesWithHttpMessagesAsync(System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperations.ListByResourceGroupNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions">
            <summary>
            Extension methods for StorageAccountsOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.CheckNameAvailability(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='name'>
            The storage account name.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.CheckNameAvailabilityAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Checks that the storage account name is valid and is not already in use.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='name'>
            The storage account name.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Create(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes a storage account in Microsoft Azure.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.GetProperties(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand})">
            <summary>
            Returns the properties for the specified storage account including but not
            limited to name, SKU name, location, and account status. The ListKeys
            operation should be used to retrieve storage keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties. By
            default, data is not included when fetching properties. Currently we only
            support geoReplicationStats and blobRestoreStatus. Possible values include:
            'geoReplicationStats', 'blobRestoreStatus'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.GetPropertiesAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.StorageAccountExpand},System.Threading.CancellationToken)">
            <summary>
            Returns the properties for the specified storage account including but not
            limited to name, SKU name, location, and account status. The ListKeys
            operation should be used to retrieve storage keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            May be used to expand the properties within account's properties. By
            default, data is not included when fetching properties. Currently we only
            support geoReplicationStats and blobRestoreStatus. Possible values include:
            'geoReplicationStats', 'blobRestoreStatus'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Update(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters)">
            <summary>
            The update operation can be used to update the SKU, encryption, access
            tier, or tags for a storage account. It can also be used to map the account
            to a custom domain. Only one custom domain is supported per storage
            account; the replacement/change of custom domain is not supported. In order
            to replace an old custom domain, the old value must be cleared/unregistered
            before a new value can be set. The update of multiple properties is
            supported. This call does not change the storage keys for the account. If
            you want to change the storage account keys, use the regenerate keys
            operation. The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountUpdateParameters,System.Threading.CancellationToken)">
            <summary>
            The update operation can be used to update the SKU, encryption, access
            tier, or tags for a storage account. It can also be used to map the account
            to a custom domain. Only one custom domain is supported per storage
            account; the replacement/change of custom domain is not supported. In order
            to replace an old custom domain, the old value must be cleared/unregistered
            before a new value can be set. The update of multiple properties is
            supported. This call does not change the storage keys for the account. If
            you want to change the storage account keys, use the regenerate keys
            operation. The location and name of the storage account cannot be changed
            after creation.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the updated account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.List(Microsoft.Azure.Management.Storage.IStorageAccountsOperations)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListByResourceGroup(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListByResourceGroupAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListKeys(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand})">
            <summary>
            Lists the access keys or Kerberos keys (if active directory enabled) for
            the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            Specifies type of the key to be listed. Possible value is kerb. Possible
            values include: 'kerb'
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListKeysAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Nullable{Microsoft.Azure.Management.Storage.Models.ListKeyExpand},System.Threading.CancellationToken)">
            <summary>
            Lists the access keys or Kerberos keys (if active directory enabled) for
            the specified storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='expand'>
            Specifies type of the key to be listed. Possible value is kerb. Possible
            values include: 'kerb'
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RegenerateKey(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String)">
            <summary>
            Regenerates one of the access keys or Kerberos keys for the specified
            storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible values are
            key1, key2, kerb1, kerb2.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RegenerateKeyAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Regenerates one of the access keys or Kerberos keys for the specified
            storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='keyName'>
            The name of storage keys that want to be regenerated, possible values are
            key1, key2, kerb1, kerb2.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListAccountSAS(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListAccountSASAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.AccountSasParameters,System.Threading.CancellationToken)">
            <summary>
            List SAS credentials of a storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list SAS credentials for the storage account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListServiceSAS(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListServiceSASAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.ServiceSasParameters,System.Threading.CancellationToken)">
            <summary>
            List service SAS credentials of a specific resource.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide to list service SAS credentials.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.Failover(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.FailoverAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.HierarchicalNamespaceMigration(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest' or a
            hydration request 'HnsOnHydrationRequest'. The validation request will
            validate the migration whereas the hydration request will migrate the
            account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.HierarchicalNamespaceMigrationAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest' or a
            hydration request 'HnsOnHydrationRequest'. The validation request will
            validate the migration whereas the hydration request will migrate the
            account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.AbortHierarchicalNamespaceMigration(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.AbortHierarchicalNamespaceMigrationAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RestoreBlobRanges(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange})">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RestoreBlobRangesAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RevokeUserDelegationKeys(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.RevokeUserDelegationKeysAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Revoke user delegation keys.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginCreate(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginCreateAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.StorageAccountCreateParameters,System.Threading.CancellationToken)">
            <summary>
            Asynchronously creates a new storage account with the specified parameters.
            If an account is already created and a subsequent create request is issued
            with different properties, the account properties will be updated. If an
            account is already created and a subsequent create or update request is
            issued with the exact same set of properties, the request will succeed.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='parameters'>
            The parameters to provide for the created account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginFailover(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginFailoverAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Failover request can be triggered for a storage account in case of
            availability issues. The failover occurs from the storage account's primary
            cluster to secondary cluster for RA-GRS accounts. The secondary cluster
            will become primary after failover.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginHierarchicalNamespaceMigration(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest' or a
            hydration request 'HnsOnHydrationRequest'. The validation request will
            validate the migration whereas the hydration request will migrate the
            account.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginHierarchicalNamespaceMigrationAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='requestType'>
            Required. Hierarchical namespace migration type can either be a
            hierarchical namespace validation request 'HnsOnValidationRequest' or a
            hydration request 'HnsOnHydrationRequest'. The validation request will
            validate the migration whereas the hydration request will migrate the
            account.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginAbortHierarchicalNamespaceMigration(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginAbortHierarchicalNamespaceMigrationAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Abort live Migration of storage account to enable Hns
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginRestoreBlobRanges(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange})">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.BeginRestoreBlobRangesAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.String,System.DateTime,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.BlobRestoreRange},System.Threading.CancellationToken)">
            <summary>
            Restore blobs in the specified blob ranges
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='timeToRestore'>
            Restore blob to the specified time.
            </param>
            <param name='blobRanges'>
            Blob ranges to restore.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the subscription. Note that
            storage keys are not returned; use the ListKeys operation for this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListByResourceGroupNext(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageAccountsOperationsExtensions.ListByResourceGroupNextAsync(Microsoft.Azure.Management.Storage.IStorageAccountsOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all the storage accounts available under the given resource group.
            Note that storage keys are not returned; use the ListKeys operation for
            this.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.StorageManagementClient">
            <summary>
            The Azure Storage Management API.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BaseUri">
            <summary>
            The base URI of the service.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.SerializationSettings">
            <summary>
            Gets or sets json serialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.DeserializationSettings">
            <summary>
            Gets or sets json deserialization settings.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Credentials">
            <summary>
            Credentials needed for the client to connect to Azure.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.SubscriptionId">
            <summary>
            The ID of the target subscription.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.ApiVersion">
            <summary>
            The API version to use for this operation.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.AcceptLanguage">
            <summary>
            The preferred language for the response.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.LongRunningOperationRetryTimeout">
            <summary>
            The retry timeout in seconds for Long Running Operations. Default value is
            30.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.GenerateClientRequestId">
            <summary>
            Whether a unique x-ms-client-request-id should be generated. When set to
            true a unique x-ms-client-request-id value is generated and included in
            each request. Default is true.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Operations">
            <summary>
            Gets the IOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Skus">
            <summary>
            Gets the ISkusOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.StorageAccounts">
            <summary>
            Gets the IStorageAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.DeletedAccounts">
            <summary>
            Gets the IDeletedAccountsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Usages">
            <summary>
            Gets the IUsagesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.ManagementPolicies">
            <summary>
            Gets the IManagementPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BlobInventoryPolicies">
            <summary>
            Gets the IBlobInventoryPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.PrivateEndpointConnections">
            <summary>
            Gets the IPrivateEndpointConnectionsOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.PrivateLinkResources">
            <summary>
            Gets the IPrivateLinkResourcesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.ObjectReplicationPolicies">
            <summary>
            Gets the IObjectReplicationPoliciesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.LocalUsers">
            <summary>
            Gets the ILocalUsersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.EncryptionScopes">
            <summary>
            Gets the IEncryptionScopesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BlobServices">
            <summary>
            Gets the IBlobServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.BlobContainers">
            <summary>
            Gets the IBlobContainersOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.FileServices">
            <summary>
            Gets the IFileServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.FileShares">
            <summary>
            Gets the IFileSharesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.QueueServices">
            <summary>
            Gets the IQueueServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Queue">
            <summary>
            Gets the IQueueOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.TableServices">
            <summary>
            Gets the ITableServicesOperations.
            </summary>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.StorageManagementClient.Table">
            <summary>
            Gets the ITableOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling StorageManagementClient.Dispose(). False: will not dispose provided httpClient</param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClient,System.Boolean)">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='httpClient'>
            HttpClient to be used
            </param>
            <param name='disposeHttpClient'>
            True: will dispose the provided httpClient on calling StorageManagementClient.Dispose(). False: will not dispose provided httpClient</param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.#ctor(System.Uri,Microsoft.Rest.ServiceClientCredentials,System.Net.Http.HttpClientHandler,System.Net.Http.DelegatingHandler[])">
            <summary>
            Initializes a new instance of the StorageManagementClient class.
            </summary>
            <param name='baseUri'>
            Optional. The base URI of the service.
            </param>
            <param name='credentials'>
            Required. Credentials needed for the client to connect to Azure.
            </param>
            <param name='rootHandler'>
            Optional. The http client handler used to handle http transport.
            </param>
            <param name='handlers'>
            Optional. The delegating handlers to add to the http client pipeline.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.StorageManagementClient.Initialize">
            <summary>
            Initializes client properties.
            </summary>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.TableOperations">
            <summary>
            TableOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the TableOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.TableOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.CreateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.UpdateWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified
            account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.GetWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account
            if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.DeleteWithHttpMessagesAsync(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the specified table name, under the specified
            account if it exists.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperations.ListNextWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.TableOperationsExtensions">
            <summary>
            Extension methods for TableOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.Create(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier})">
            <summary>
            Creates a new table with the specified table name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.CreateAsync(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier},System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.Update(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier})">
            <summary>
            Creates a new table with the specified table name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.UpdateAsync(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String,System.Collections.Generic.IList{Microsoft.Azure.Management.Storage.Models.TableSignedIdentifier},System.Threading.CancellationToken)">
            <summary>
            Creates a new table with the specified table name, under the specified
            account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='signedIdentifiers'>
            List of stored access policies specified on the table.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.Get(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String)">
            <summary>
            Gets the table with the specified table name, under the specified account
            if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.GetAsync(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the table with the specified table name, under the specified account
            if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.Delete(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String)">
            <summary>
            Deletes the table with the specified table name, under the specified
            account if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.DeleteAsync(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes the table with the specified table name, under the specified
            account if it exists.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='tableName'>
            A table name must be unique within a storage account and must be between 3
            and 63 characters.The name must comprise of only alphanumeric characters
            and it cannot begin with a numeric character.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.List(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.ListNext(Microsoft.Azure.Management.Storage.ITableOperations,System.String)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableOperationsExtensions.ListNextAsync(Microsoft.Azure.Management.Storage.ITableOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of all the tables under the specified storage account
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='nextPageLink'>
            The NextLink from the previous successful call to List operation.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.TableServicesOperations">
            <summary>
            TableServicesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the TableServicesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.TableServicesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperations.ListWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            List all table services for the storage account.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperations.SetServicePropertiesWithHttpMessagesAsync(System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Table service. You can include up to five
            CorsRule elements in the request. If no CorsRule elements are included in
            the request body, all CORS rules will be deleted, and CORS will be disabled
            for the Table service.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperations.GetServicePropertiesWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions">
            <summary>
            Extension methods for TableServicesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions.List(Microsoft.Azure.Management.Storage.ITableServicesOperations,System.String,System.String)">
            <summary>
            List all table services for the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions.ListAsync(Microsoft.Azure.Management.Storage.ITableServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            List all table services for the storage account.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions.SetServiceProperties(Microsoft.Azure.Management.Storage.ITableServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules)">
            <summary>
            Sets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Table service. You can include up to five
            CorsRule elements in the request. If no CorsRule elements are included in
            the request body, all CORS rules will be deleted, and CORS will be disabled
            for the Table service.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions.SetServicePropertiesAsync(Microsoft.Azure.Management.Storage.ITableServicesOperations,System.String,System.String,Microsoft.Azure.Management.Storage.Models.CorsRules,System.Threading.CancellationToken)">
            <summary>
            Sets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cors'>
            Specifies CORS rules for the Table service. You can include up to five
            CorsRule elements in the request. If no CorsRule elements are included in
            the request body, all CORS rules will be deleted, and CORS will be disabled
            for the Table service.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions.GetServiceProperties(Microsoft.Azure.Management.Storage.ITableServicesOperations,System.String,System.String)">
            <summary>
            Gets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.TableServicesOperationsExtensions.GetServicePropertiesAsync(Microsoft.Azure.Management.Storage.ITableServicesOperations,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the properties of a storage account’s Table service, including
            properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
            rules.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='resourceGroupName'>
            The name of the resource group within the user's subscription. The name is
            case insensitive.
            </param>
            <param name='accountName'>
            The name of the storage account within the specified resource group.
            Storage account names must be between 3 and 24 characters in length and use
            numbers and lower-case letters only.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.UsagesOperations">
            <summary>
            UsagesOperations operations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.UsagesOperations.#ctor(Microsoft.Azure.Management.Storage.StorageManagementClient)">
            <summary>
            Initializes a new instance of the UsagesOperations class.
            </summary>
            <param name='client'>
            Reference to the service client.
            </param>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        </member>
        <member name="P:Microsoft.Azure.Management.Storage.UsagesOperations.Client">
            <summary>
            Gets a reference to the StorageManagementClient
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.UsagesOperations.ListByLocationWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
            <param name='customHeaders'>
            Headers that will be added to request.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
            <exception cref="T:Microsoft.Rest.Azure.CloudException">
            Thrown when the operation returned an invalid status code
            </exception>
            <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
            <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
            <return>
            A response object containing the response body and response headers.
            </return>
        </member>
        <member name="T:Microsoft.Azure.Management.Storage.UsagesOperationsExtensions">
            <summary>
            Extension methods for UsagesOperations.
            </summary>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.UsagesOperationsExtensions.ListByLocation(Microsoft.Azure.Management.Storage.IUsagesOperations,System.String)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
        </member>
        <member name="M:Microsoft.Azure.Management.Storage.UsagesOperationsExtensions.ListByLocationAsync(Microsoft.Azure.Management.Storage.IUsagesOperations,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the current usage count and the limit for the resources of the
            location under the subscription.
            </summary>
            <param name='operations'>
            The operations group for this extension method.
            </param>
            <param name='location'>
            The location of the Azure Storage resource.
            </param>
            <param name='cancellationToken'>
            The cancellation token.
            </param>
        </member>
    </members>
</doc>
